{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloud-platform": {},
                "https://www.googleapis.com/auth/servicecontrol": {}
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://servicecontrol.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Service Control",
    "discoveryVersion": "v1",
    "documentationLink": "https://cloud.google.com/service-control/",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "servicecontrol:v1",
    "kind": "discovery#restDescription",
    "mtlsRootUrl": "https://servicecontrol.mtls.googleapis.com/",
    "name": "servicecontrol",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "location": "query",
            "type": "string"
        },
        "fields": {
            "location": "query",
            "type": "string"
        },
        "key": {
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "services": {
            "methods": {
                "allocateQuota": {
                    "flatPath": "v1/services/{serviceName}:allocateQuota",
                    "httpMethod": "POST",
                    "id": "servicecontrol.services.allocateQuota",
                    "parameterOrder": [
                        "serviceName"
                    ],
                    "parameters": {
                        "serviceName": {
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/services/{serviceName}:allocateQuota",
                    "request": {
                        "$ref": "AllocateQuotaRequest"
                    },
                    "response": {
                        "$ref": "AllocateQuotaResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/servicecontrol"
                    ]
                },
                "check": {
                    "flatPath": "v1/services/{serviceName}:check",
                    "httpMethod": "POST",
                    "id": "servicecontrol.services.check",
                    "parameterOrder": [
                        "serviceName"
                    ],
                    "parameters": {
                        "serviceName": {
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/services/{serviceName}:check",
                    "request": {
                        "$ref": "CheckRequest"
                    },
                    "response": {
                        "$ref": "CheckResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/servicecontrol"
                    ]
                },
                "report": {
                    "flatPath": "v1/services/{serviceName}:report",
                    "httpMethod": "POST",
                    "id": "servicecontrol.services.report",
                    "parameterOrder": [
                        "serviceName"
                    ],
                    "parameters": {
                        "serviceName": {
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/services/{serviceName}:report",
                    "request": {
                        "$ref": "ReportRequest"
                    },
                    "response": {
                        "$ref": "ReportResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/servicecontrol"
                    ]
                }
            }
        }
    },
    "rootUrl": "https://servicecontrol.googleapis.com/",
    "schemas": {
        "AllocateInfo": {
            "id": "AllocateInfo",
            "properties": {
                "unusedArguments": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AllocateQuotaRequest": {
            "id": "AllocateQuotaRequest",
            "properties": {
                "allocateOperation": {
                    "$ref": "QuotaOperation"
                },
                "serviceConfigId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AllocateQuotaResponse": {
            "id": "AllocateQuotaResponse",
            "properties": {
                "allocateErrors": {
                    "items": {
                        "$ref": "QuotaError"
                    },
                    "type": "array"
                },
                "allocateInfo": {
                    "$ref": "AllocateInfo"
                },
                "operationId": {
                    "type": "string"
                },
                "quotaMetrics": {
                    "items": {
                        "$ref": "MetricValueSet"
                    },
                    "type": "array"
                },
                "serviceConfigId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AttributeValue": {
            "id": "AttributeValue",
            "properties": {
                "boolValue": {
                    "type": "boolean"
                },
                "intValue": {
                    "format": "int64",
                    "type": "string"
                },
                "stringValue": {
                    "$ref": "TruncatableString"
                }
            },
            "type": "object"
        },
        "Attributes": {
            "id": "Attributes",
            "properties": {
                "attributeMap": {
                    "additionalProperties": {
                        "$ref": "AttributeValue"
                    },
                    "type": "object"
                },
                "droppedAttributesCount": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AuditLog": {
            "id": "AuditLog",
            "properties": {
                "authenticationInfo": {
                    "$ref": "AuthenticationInfo"
                },
                "authorizationInfo": {
                    "items": {
                        "$ref": "AuthorizationInfo"
                    },
                    "type": "array"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                },
                "methodName": {
                    "type": "string"
                },
                "numResponseItems": {
                    "format": "int64",
                    "type": "string"
                },
                "request": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                },
                "requestMetadata": {
                    "$ref": "RequestMetadata"
                },
                "resourceLocation": {
                    "$ref": "ResourceLocation"
                },
                "resourceName": {
                    "type": "string"
                },
                "resourceOriginalState": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                },
                "response": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                },
                "serviceData": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "$ref": "Status"
                }
            },
            "type": "object"
        },
        "Auth": {
            "id": "Auth",
            "properties": {
                "accessLevels": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "audiences": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "claims": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                },
                "presenter": {
                    "type": "string"
                },
                "principal": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthenticationInfo": {
            "id": "AuthenticationInfo",
            "properties": {
                "authoritySelector": {
                    "type": "string"
                },
                "principalEmail": {
                    "type": "string"
                },
                "principalSubject": {
                    "type": "string"
                },
                "serviceAccountDelegationInfo": {
                    "items": {
                        "$ref": "ServiceAccountDelegationInfo"
                    },
                    "type": "array"
                },
                "serviceAccountKeyName": {
                    "type": "string"
                },
                "thirdPartyPrincipal": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AuthorizationInfo": {
            "id": "AuthorizationInfo",
            "properties": {
                "granted": {
                    "type": "boolean"
                },
                "permission": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "resourceAttributes": {
                    "$ref": "Resource"
                }
            },
            "type": "object"
        },
        "CheckError": {
            "id": "CheckError",
            "properties": {
                "code": {
                    "enum": [
                        "ERROR_CODE_UNSPECIFIED",
                        "NOT_FOUND",
                        "PERMISSION_DENIED",
                        "RESOURCE_EXHAUSTED",
                        "BUDGET_EXCEEDED",
                        "DENIAL_OF_SERVICE_DETECTED",
                        "LOAD_SHEDDING",
                        "ABUSER_DETECTED",
                        "SERVICE_NOT_ACTIVATED",
                        "VISIBILITY_DENIED",
                        "BILLING_DISABLED",
                        "PROJECT_DELETED",
                        "PROJECT_INVALID",
                        "CONSUMER_INVALID",
                        "IP_ADDRESS_BLOCKED",
                        "REFERER_BLOCKED",
                        "CLIENT_APP_BLOCKED",
                        "API_TARGET_BLOCKED",
                        "API_KEY_INVALID",
                        "API_KEY_EXPIRED",
                        "API_KEY_NOT_FOUND",
                        "SPATULA_HEADER_INVALID",
                        "LOAS_ROLE_INVALID",
                        "NO_LOAS_PROJECT",
                        "LOAS_PROJECT_DISABLED",
                        "SECURITY_POLICY_VIOLATED",
                        "INVALID_CREDENTIAL",
                        "LOCATION_POLICY_VIOLATED",
                        "NAMESPACE_LOOKUP_UNAVAILABLE",
                        "SERVICE_STATUS_UNAVAILABLE",
                        "BILLING_STATUS_UNAVAILABLE",
                        "QUOTA_CHECK_UNAVAILABLE",
                        "LOAS_PROJECT_LOOKUP_UNAVAILABLE",
                        "CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE",
                        "SECURITY_POLICY_BACKEND_UNAVAILABLE",
                        "LOCATION_POLICY_BACKEND_UNAVAILABLE"
                    ],
                    "enumDescriptions": [
                        "This is never used in `CheckResponse`.",
                        "The consumer's project id, network container, or resource container was\nnot found. Same as google.rpc.Code.NOT_FOUND.",
                        "The consumer doesn't have access to the specified resource.\nSame as google.rpc.Code.PERMISSION_DENIED.",
                        "Quota check failed. Same as google.rpc.Code.RESOURCE_EXHAUSTED.",
                        "Budget check failed.",
                        "The consumer's request has been flagged as a DoS attack.",
                        "The consumer's request should be rejected in order to protect the service\nfrom being overloaded.",
                        "The consumer has been flagged as an abuser.",
                        "The consumer hasn't activated the service.",
                        "The consumer cannot access the service due to visibility configuration.",
                        "The consumer cannot access the service because billing is disabled.",
                        "The consumer's project has been marked as deleted (soft deletion).",
                        "The consumer's project number or id does not represent a valid project.",
                        "The input consumer info does not represent a valid consumer folder or\norganization.",
                        "The IP address of the consumer is invalid for the specific consumer\nproject.",
                        "The referer address of the consumer request is invalid for the specific\nconsumer project.",
                        "The client application of the consumer request is invalid for the\nspecific consumer project.",
                        "The API targeted by this request is invalid for the specified consumer\nproject.",
                        "The consumer's API key is invalid.",
                        "The consumer's API Key has expired.",
                        "The consumer's API Key was not found in config record.",
                        "The consumer's spatula header is invalid.",
                        "The consumer's LOAS role is invalid.",
                        "The consumer's LOAS role has no associated project.",
                        "The consumer's LOAS project is not `ACTIVE` in LoquatV2.",
                        "Request is not allowed as per security policies defined in Org Policy.",
                        "The credential in the request can not be verified.",
                        "Request is not allowed as per location policies defined in Org Policy.",
                        "The backend server for looking up project id/number is unavailable.",
                        "The backend server for checking service status is unavailable.",
                        "The backend server for checking billing status is unavailable.",
                        "The backend server for checking quota limits is unavailable.",
                        "The Spanner for looking up LOAS project is unavailable.",
                        "Cloud Resource Manager backend server is unavailable.",
                        "NOTE: for customers in the scope of Beta/GA of\nhttps://cloud.google.com/vpc-service-controls, this error\nis no longer returned. If the security backend is unavailable, rpc\nUNAVAILABLE status will be returned instead. It should be ignored and\nshould not be used to reject client requests.",
                        "Backend server for evaluating location policy is unavailable."
                    ],
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "status": {
                    "$ref": "Status"
                },
                "subject": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CheckInfo": {
            "id": "CheckInfo",
            "properties": {
                "consumerInfo": {
                    "$ref": "ConsumerInfo"
                },
                "unusedArguments": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CheckRequest": {
            "id": "CheckRequest",
            "properties": {
                "operation": {
                    "$ref": "Operation"
                },
                "requestProjectSettings": {
                    "type": "boolean"
                },
                "serviceConfigId": {
                    "type": "string"
                },
                "skipActivationCheck": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CheckResponse": {
            "id": "CheckResponse",
            "properties": {
                "checkErrors": {
                    "items": {
                        "$ref": "CheckError"
                    },
                    "type": "array"
                },
                "checkInfo": {
                    "$ref": "CheckInfo"
                },
                "operationId": {
                    "type": "string"
                },
                "quotaInfo": {
                    "$ref": "QuotaInfo"
                },
                "serviceConfigId": {
                    "type": "string"
                },
                "serviceRolloutId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConsumerInfo": {
            "id": "ConsumerInfo",
            "properties": {
                "consumerNumber": {
                    "format": "int64",
                    "type": "string"
                },
                "projectNumber": {
                    "format": "int64",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "CONSUMER_TYPE_UNSPECIFIED",
                        "PROJECT",
                        "FOLDER",
                        "ORGANIZATION",
                        "SERVICE_SPECIFIC"
                    ],
                    "enumDescriptions": [
                        "This is never used.",
                        "The consumer is a Google Cloud Project.",
                        "The consumer is a Google Cloud Folder.",
                        "The consumer is a Google Cloud Organization.",
                        "Service-specific resource container which is defined by the service\nproducer to offer their users the ability to manage service control\nfunctionalities at a finer level of granularity than the PROJECT."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Distribution": {
            "id": "Distribution",
            "properties": {
                "bucketCounts": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "count": {
                    "format": "int64",
                    "type": "string"
                },
                "exemplars": {
                    "items": {
                        "$ref": "Exemplar"
                    },
                    "type": "array"
                },
                "explicitBuckets": {
                    "$ref": "ExplicitBuckets"
                },
                "exponentialBuckets": {
                    "$ref": "ExponentialBuckets"
                },
                "linearBuckets": {
                    "$ref": "LinearBuckets"
                },
                "maximum": {
                    "format": "double",
                    "type": "number"
                },
                "mean": {
                    "format": "double",
                    "type": "number"
                },
                "minimum": {
                    "format": "double",
                    "type": "number"
                },
                "sumOfSquaredDeviation": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Exemplar": {
            "id": "Exemplar",
            "properties": {
                "attachments": {
                    "items": {
                        "additionalProperties": {
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "timestamp": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "value": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ExplicitBuckets": {
            "id": "ExplicitBuckets",
            "properties": {
                "bounds": {
                    "items": {
                        "format": "double",
                        "type": "number"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ExponentialBuckets": {
            "id": "ExponentialBuckets",
            "properties": {
                "growthFactor": {
                    "format": "double",
                    "type": "number"
                },
                "numFiniteBuckets": {
                    "format": "int32",
                    "type": "integer"
                },
                "scale": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "FirstPartyPrincipal": {
            "id": "FirstPartyPrincipal",
            "properties": {
                "principalEmail": {
                    "type": "string"
                },
                "serviceMetadata": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "HttpRequest": {
            "id": "HttpRequest",
            "properties": {
                "cacheFillBytes": {
                    "format": "int64",
                    "type": "string"
                },
                "cacheHit": {
                    "type": "boolean"
                },
                "cacheLookup": {
                    "type": "boolean"
                },
                "cacheValidatedWithOriginServer": {
                    "type": "boolean"
                },
                "latency": {
                    "format": "google-duration",
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "referer": {
                    "type": "string"
                },
                "remoteIp": {
                    "type": "string"
                },
                "requestMethod": {
                    "type": "string"
                },
                "requestSize": {
                    "format": "int64",
                    "type": "string"
                },
                "requestUrl": {
                    "type": "string"
                },
                "responseSize": {
                    "format": "int64",
                    "type": "string"
                },
                "serverIp": {
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer"
                },
                "userAgent": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LinearBuckets": {
            "id": "LinearBuckets",
            "properties": {
                "numFiniteBuckets": {
                    "format": "int32",
                    "type": "integer"
                },
                "offset": {
                    "format": "double",
                    "type": "number"
                },
                "width": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "LogEntry": {
            "id": "LogEntry",
            "properties": {
                "httpRequest": {
                    "$ref": "HttpRequest"
                },
                "insertId": {
                    "type": "string"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "operation": {
                    "$ref": "LogEntryOperation"
                },
                "protoPayload": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                },
                "severity": {
                    "enum": [
                        "DEFAULT",
                        "DEBUG",
                        "INFO",
                        "NOTICE",
                        "WARNING",
                        "ERROR",
                        "CRITICAL",
                        "ALERT",
                        "EMERGENCY"
                    ],
                    "enumDescriptions": [
                        "(0) The log entry has no assigned severity level.",
                        "(100) Debug or trace information.",
                        "(200) Routine information, such as ongoing status or performance.",
                        "(300) Normal but significant events, such as start up, shut down, or\na configuration change.",
                        "(400) Warning events might cause problems.",
                        "(500) Error events are likely to cause problems.",
                        "(600) Critical events cause more severe problems or outages.",
                        "(700) A person must take an action immediately.",
                        "(800) One or more systems are unusable."
                    ],
                    "type": "string"
                },
                "sourceLocation": {
                    "$ref": "LogEntrySourceLocation"
                },
                "structPayload": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                },
                "textPayload": {
                    "type": "string"
                },
                "timestamp": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "trace": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LogEntryOperation": {
            "id": "LogEntryOperation",
            "properties": {
                "first": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "last": {
                    "type": "boolean"
                },
                "producer": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LogEntrySourceLocation": {
            "id": "LogEntrySourceLocation",
            "properties": {
                "file": {
                    "type": "string"
                },
                "function": {
                    "type": "string"
                },
                "line": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MetricValue": {
            "id": "MetricValue",
            "properties": {
                "boolValue": {
                    "type": "boolean"
                },
                "distributionValue": {
                    "$ref": "Distribution"
                },
                "doubleValue": {
                    "format": "double",
                    "type": "number"
                },
                "endTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "int64Value": {
                    "format": "int64",
                    "type": "string"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "moneyValue": {
                    "$ref": "Money"
                },
                "startTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "stringValue": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MetricValueSet": {
            "id": "MetricValueSet",
            "properties": {
                "metricName": {
                    "type": "string"
                },
                "metricValues": {
                    "items": {
                        "$ref": "MetricValue"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Money": {
            "id": "Money",
            "properties": {
                "currencyCode": {
                    "type": "string"
                },
                "nanos": {
                    "format": "int32",
                    "type": "integer"
                },
                "units": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Operation": {
            "id": "Operation",
            "properties": {
                "consumerId": {
                    "type": "string"
                },
                "endTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "importance": {
                    "enum": [
                        "LOW",
                        "HIGH",
                        "DEBUG"
                    ],
                    "enumDescriptions": [
                        "The API implementation may cache and aggregate the data.\nThe data may be lost when rare and unexpected system failures occur.",
                        "The API implementation doesn't cache and aggregate the data.\nIf the method returns successfully, it's guaranteed that the data has\nbeen persisted in durable storage.",
                        "In addition to the behavior described in HIGH, DEBUG enables\nadditional validation logic that is only useful during the onboarding\nprocess. This is only available to Google internal services and\nthe service must be whitelisted by chemist-dev@google.com in order\nto use this level."
                    ],
                    "type": "string"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "logEntries": {
                    "items": {
                        "$ref": "LogEntry"
                    },
                    "type": "array"
                },
                "metricValueSets": {
                    "items": {
                        "$ref": "MetricValueSet"
                    },
                    "type": "array"
                },
                "operationId": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "quotaProperties": {
                    "$ref": "QuotaProperties"
                },
                "resources": {
                    "items": {
                        "$ref": "ResourceInfo"
                    },
                    "type": "array"
                },
                "startTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "traceSpans": {
                    "items": {
                        "$ref": "TraceSpan"
                    },
                    "type": "array"
                },
                "userLabels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Peer": {
            "id": "Peer",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "port": {
                    "format": "int64",
                    "type": "string"
                },
                "principal": {
                    "type": "string"
                },
                "regionCode": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QuotaError": {
            "id": "QuotaError",
            "properties": {
                "code": {
                    "enum": [
                        "UNSPECIFIED",
                        "RESOURCE_EXHAUSTED",
                        "OUT_OF_RANGE",
                        "BILLING_NOT_ACTIVE",
                        "PROJECT_DELETED",
                        "API_KEY_INVALID",
                        "API_KEY_EXPIRED",
                        "SPATULA_HEADER_INVALID",
                        "LOAS_ROLE_INVALID",
                        "NO_LOAS_PROJECT",
                        "PROJECT_STATUS_UNAVAILABLE",
                        "SERVICE_STATUS_UNAVAILABLE",
                        "BILLING_STATUS_UNAVAILABLE",
                        "QUOTA_SYSTEM_UNAVAILABLE"
                    ],
                    "enumDescriptions": [
                        "This is never used.",
                        "Quota allocation failed.\nSame as google.rpc.Code.RESOURCE_EXHAUSTED.",
                        "Quota release failed.  This error is ONLY returned on a NORMAL release.\nMore formally:  if a user requests a release of 10 tokens, but only\n5 tokens were previously allocated, in a BEST_EFFORT release, this will\nbe considered a success, 5 tokens will be released, and the result will\nbe \"Ok\".  If this is done in NORMAL mode, no tokens will be released,\nand an OUT_OF_RANGE error will be returned.\nSame as google.rpc.Code.OUT_OF_RANGE.",
                        "Consumer cannot access the service because the service requires active\nbilling.",
                        "Consumer's project has been marked as deleted (soft deletion).",
                        "Specified API key is invalid.",
                        "Specified API Key has expired.",
                        "Consumer's spatula header is invalid.",
                        "The consumer's LOAS role is invalid.",
                        "The consumer's LOAS role has no associated project.",
                        "The backend server for looking up project id/number is unavailable.",
                        "The backend server for checking service status is unavailable.",
                        "The backend server for checking billing status is unavailable.",
                        "The backend server for checking quota limits is unavailable."
                    ],
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QuotaInfo": {
            "id": "QuotaInfo",
            "properties": {
                "limitExceeded": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "quotaConsumed": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "quotaMetrics": {
                    "items": {
                        "$ref": "MetricValueSet"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "QuotaOperation": {
            "id": "QuotaOperation",
            "properties": {
                "consumerId": {
                    "type": "string"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "methodName": {
                    "type": "string"
                },
                "operationId": {
                    "type": "string"
                },
                "quotaMetrics": {
                    "items": {
                        "$ref": "MetricValueSet"
                    },
                    "type": "array"
                },
                "quotaMode": {
                    "enum": [
                        "UNSPECIFIED",
                        "NORMAL",
                        "BEST_EFFORT",
                        "CHECK_ONLY",
                        "QUERY_ONLY"
                    ],
                    "enumDescriptions": [
                        "Guard against implicit default. Must not be used.",
                        "For AllocateQuota request, allocates quota for the amount specified in\nthe service configuration or specified using the quota metrics. If the\namount is higher than the available quota, allocation error will be\nreturned and no quota will be allocated.\nIf multiple quotas are part of the request, and one fails, none of the\nquotas are allocated or released.",
                        "The operation allocates quota for the amount specified in the service\nconfiguration or specified using the quota metrics. If the amount is\nhigher than the available quota, request does not fail but all available\nquota will be allocated.\nFor rate quota, BEST_EFFORT will continue to deduct from other groups\neven if one does not have enough quota. For allocation, it will find the\nminimum available amount across all groups and deduct that amount from\nall the affected groups.",
                        "For AllocateQuota request, only checks if there is enough quota\navailable and does not change the available quota. No lock is placed on\nthe available quota either.",
                        "Unimplemented. When used in AllocateQuotaRequest, this returns the\neffective quota limit(s) in the response, and no quota check will be\nperformed. Not supported for other requests, and even for\nAllocateQuotaRequest, this is currently supported only for whitelisted\nservices."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QuotaProperties": {
            "id": "QuotaProperties",
            "properties": {
                "quotaMode": {
                    "enum": [
                        "ACQUIRE",
                        "ACQUIRE_BEST_EFFORT",
                        "CHECK",
                        "RELEASE"
                    ],
                    "enumDescriptions": [
                        "Decreases available quota by the cost specified for the operation.\nIf cost is higher than available quota, operation fails and returns\nerror.",
                        "Decreases available quota by the cost specified for the operation.\nIf cost is higher than available quota, operation does not fail and\navailable quota goes down to zero but it returns error.",
                        "Does not change any available quota. Only checks if there is enough\nquota.\nNo lock is placed on the checked tokens neither.",
                        "Increases available quota by the operation cost specified for the\noperation."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReportError": {
            "id": "ReportError",
            "properties": {
                "operationId": {
                    "type": "string"
                },
                "status": {
                    "$ref": "Status"
                }
            },
            "type": "object"
        },
        "ReportInfo": {
            "id": "ReportInfo",
            "properties": {
                "operationId": {
                    "type": "string"
                },
                "quotaInfo": {
                    "$ref": "QuotaInfo"
                }
            },
            "type": "object"
        },
        "ReportRequest": {
            "id": "ReportRequest",
            "properties": {
                "operations": {
                    "items": {
                        "$ref": "Operation"
                    },
                    "type": "array"
                },
                "serviceConfigId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReportResponse": {
            "id": "ReportResponse",
            "properties": {
                "reportErrors": {
                    "items": {
                        "$ref": "ReportError"
                    },
                    "type": "array"
                },
                "reportInfos": {
                    "items": {
                        "$ref": "ReportInfo"
                    },
                    "type": "array"
                },
                "serviceConfigId": {
                    "type": "string"
                },
                "serviceRolloutId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Request": {
            "id": "Request",
            "properties": {
                "auth": {
                    "$ref": "Auth"
                },
                "headers": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                },
                "size": {
                    "format": "int64",
                    "type": "string"
                },
                "time": {
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RequestMetadata": {
            "id": "RequestMetadata",
            "properties": {
                "callerIp": {
                    "type": "string"
                },
                "callerNetwork": {
                    "type": "string"
                },
                "callerSuppliedUserAgent": {
                    "type": "string"
                },
                "destinationAttributes": {
                    "$ref": "Peer"
                },
                "requestAttributes": {
                    "$ref": "Request"
                }
            },
            "type": "object"
        },
        "Resource": {
            "id": "Resource",
            "properties": {
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResourceInfo": {
            "id": "ResourceInfo",
            "properties": {
                "resourceContainer": {
                    "type": "string"
                },
                "resourceLocation": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResourceLocation": {
            "id": "ResourceLocation",
            "properties": {
                "currentLocations": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "originalLocations": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ServiceAccountDelegationInfo": {
            "id": "ServiceAccountDelegationInfo",
            "properties": {
                "firstPartyPrincipal": {
                    "$ref": "FirstPartyPrincipal"
                },
                "thirdPartyPrincipal": {
                    "$ref": "ThirdPartyPrincipal"
                }
            },
            "type": "object"
        },
        "SpanContext": {
            "id": "SpanContext",
            "properties": {
                "spanName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Status": {
            "id": "Status",
            "properties": {
                "code": {
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "items": {
                        "additionalProperties": {
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ThirdPartyPrincipal": {
            "id": "ThirdPartyPrincipal",
            "properties": {
                "thirdPartyClaims": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TraceSpan": {
            "id": "TraceSpan",
            "properties": {
                "attributes": {
                    "$ref": "Attributes"
                },
                "childSpanCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "displayName": {
                    "$ref": "TruncatableString"
                },
                "endTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentSpanId": {
                    "type": "string"
                },
                "sameProcessAsParentSpan": {
                    "type": "boolean"
                },
                "spanId": {
                    "type": "string"
                },
                "spanKind": {
                    "enum": [
                        "SPAN_KIND_UNSPECIFIED",
                        "INTERNAL",
                        "SERVER",
                        "CLIENT",
                        "PRODUCER",
                        "CONSUMER"
                    ],
                    "enumDescriptions": [
                        "Unspecified. Do NOT use as default.\nImplementations MAY assume SpanKind.INTERNAL to be default.",
                        "Indicates that the span is used internally. Default value.",
                        "Indicates that the span covers server-side handling of an RPC or other\nremote network request.",
                        "Indicates that the span covers the client-side wrapper around an RPC or\nother remote request.",
                        "Indicates that the span describes producer sending a message to a broker.\nUnlike client and  server, there is no direct critical path latency\nrelationship between producer and consumer spans (e.g. publishing a\nmessage to a pubsub service).",
                        "Indicates that the span describes consumer receiving a message from a\nbroker. Unlike client and  server, there is no direct critical path\nlatency relationship between producer and consumer spans (e.g. receiving\na message from a pubsub service subscription)."
                    ],
                    "type": "string"
                },
                "startTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "status": {
                    "$ref": "Status"
                }
            },
            "type": "object"
        },
        "TruncatableString": {
            "id": "TruncatableString",
            "properties": {
                "truncatedByteCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Service Control API",
    "version": "v1",
    "version_module": true
}