{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloud-platform": {}
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://speech.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Speech",
    "discoveryVersion": "v1",
    "documentationLink": "https://cloud.google.com/speech-to-text/docs/quickstart-protocol",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "speech:v1",
    "kind": "discovery#restDescription",
    "mtlsRootUrl": "https://speech.mtls.googleapis.com/",
    "name": "speech",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "location": "query",
            "type": "string"
        },
        "fields": {
            "location": "query",
            "type": "string"
        },
        "key": {
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "operations": {
            "methods": {
                "get": {
                    "flatPath": "v1/operations/{operationsId}",
                    "httpMethod": "GET",
                    "id": "speech.operations.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "location": "path",
                            "pattern": "^.*$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/operations/{+name}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "list": {
                    "flatPath": "v1/operations",
                    "httpMethod": "GET",
                    "id": "speech.operations.list",
                    "parameterOrder": [],
                    "parameters": {
                        "filter": {
                            "location": "query",
                            "type": "string"
                        },
                        "name": {
                            "location": "query",
                            "type": "string"
                        },
                        "pageSize": {
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "pageToken": {
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v1/operations",
                    "response": {
                        "$ref": "ListOperationsResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                }
            }
        },
        "projects": {
            "resources": {
                "locations": {
                    "resources": {
                        "operations": {
                            "methods": {
                                "get": {
                                    "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                                    "httpMethod": "GET",
                                    "id": "speech.projects.locations.operations.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1/{+name}",
                                    "response": {
                                        "$ref": "Operation"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "list": {
                                    "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                                    "httpMethod": "GET",
                                    "id": "speech.projects.locations.operations.list",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "filter": {
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "name": {
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/locations/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "pageSize": {
                                            "format": "int32",
                                            "location": "query",
                                            "type": "integer"
                                        },
                                        "pageToken": {
                                            "location": "query",
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1/{+name}/operations",
                                    "response": {
                                        "$ref": "ListOperationsResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "speech": {
            "methods": {
                "longrunningrecognize": {
                    "flatPath": "v1/speech:longrunningrecognize",
                    "httpMethod": "POST",
                    "id": "speech.speech.longrunningrecognize",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/speech:longrunningrecognize",
                    "request": {
                        "$ref": "LongRunningRecognizeRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "recognize": {
                    "flatPath": "v1/speech:recognize",
                    "httpMethod": "POST",
                    "id": "speech.speech.recognize",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/speech:recognize",
                    "request": {
                        "$ref": "RecognizeRequest"
                    },
                    "response": {
                        "$ref": "RecognizeResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                }
            }
        }
    },
    "rootUrl": "https://speech.googleapis.com/",
    "schemas": {
        "ListOperationsResponse": {
            "id": "ListOperationsResponse",
            "properties": {
                "nextPageToken": {
                    "type": "string"
                },
                "operations": {
                    "items": {
                        "$ref": "Operation"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LongRunningRecognizeMetadata": {
            "id": "LongRunningRecognizeMetadata",
            "properties": {
                "lastUpdateTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "progressPercent": {
                    "format": "int32",
                    "type": "integer"
                },
                "startTime": {
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LongRunningRecognizeRequest": {
            "id": "LongRunningRecognizeRequest",
            "properties": {
                "audio": {
                    "$ref": "RecognitionAudio"
                },
                "config": {
                    "$ref": "RecognitionConfig"
                }
            },
            "type": "object"
        },
        "LongRunningRecognizeResponse": {
            "id": "LongRunningRecognizeResponse",
            "properties": {
                "results": {
                    "items": {
                        "$ref": "SpeechRecognitionResult"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Operation": {
            "id": "Operation",
            "properties": {
                "done": {
                    "type": "boolean"
                },
                "error": {
                    "$ref": "Status"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "response": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "RecognitionAudio": {
            "id": "RecognitionAudio",
            "properties": {
                "content": {
                    "format": "byte",
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecognitionConfig": {
            "id": "RecognitionConfig",
            "properties": {
                "audioChannelCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "diarizationConfig": {
                    "$ref": "SpeakerDiarizationConfig"
                },
                "enableAutomaticPunctuation": {
                    "type": "boolean"
                },
                "enableSeparateRecognitionPerChannel": {
                    "type": "boolean"
                },
                "enableWordTimeOffsets": {
                    "type": "boolean"
                },
                "encoding": {
                    "enum": [
                        "ENCODING_UNSPECIFIED",
                        "LINEAR16",
                        "FLAC",
                        "MULAW",
                        "AMR",
                        "AMR_WB",
                        "OGG_OPUS",
                        "SPEEX_WITH_HEADER_BYTE"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
                        "`FLAC` (Free Lossless Audio\nCodec) is the recommended encoding because it is\nlossless--therefore recognition is not compromised--and\nrequires only about half the bandwidth of `LINEAR16`. `FLAC` stream\nencoding supports 16-bit and 24-bit samples, however, not all fields in\n`STREAMINFO` are supported.",
                        "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
                        "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
                        "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
                        "Opus encoded audio frames in Ogg container\n([OggOpus](https://wiki.xiph.org/OggOpus)).\n`sample_rate_hertz` must be one of 8000, 12000, 16000, 24000, or 48000.",
                        "Although the use of lossy encodings is not recommended, if a very low\nbitrate encoding is required, `OGG_OPUS` is highly preferred over\nSpeex encoding. The [Speex](https://speex.org/)  encoding supported by\nCloud Speech API has a header byte in each block, as in MIME type\n`audio/x-speex-with-header-byte`.\nIt is a variant of the RTP Speex encoding defined in\n[RFC 5574](https://tools.ietf.org/html/rfc5574).\nThe stream is a sequence of blocks, one block per RTP packet. Each block\nstarts with a byte containing the length of the block, in bytes, followed\nby one or more frames of Speex data, padded to an integral number of\nbytes (octets) as specified in RFC 5574. In other words, each RTP header\nis replaced with a single byte containing the block length. Only Speex\nwideband is supported. `sample_rate_hertz` must be 16000."
                    ],
                    "type": "string"
                },
                "languageCode": {
                    "type": "string"
                },
                "maxAlternatives": {
                    "format": "int32",
                    "type": "integer"
                },
                "metadata": {
                    "$ref": "RecognitionMetadata"
                },
                "model": {
                    "type": "string"
                },
                "profanityFilter": {
                    "type": "boolean"
                },
                "sampleRateHertz": {
                    "format": "int32",
                    "type": "integer"
                },
                "speechContexts": {
                    "items": {
                        "$ref": "SpeechContext"
                    },
                    "type": "array"
                },
                "useEnhanced": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RecognitionMetadata": {
            "id": "RecognitionMetadata",
            "properties": {
                "audioTopic": {
                    "type": "string"
                },
                "industryNaicsCodeOfAudio": {
                    "format": "uint32",
                    "type": "integer"
                },
                "interactionType": {
                    "enum": [
                        "INTERACTION_TYPE_UNSPECIFIED",
                        "DISCUSSION",
                        "PRESENTATION",
                        "PHONE_CALL",
                        "VOICEMAIL",
                        "PROFESSIONALLY_PRODUCED",
                        "VOICE_SEARCH",
                        "VOICE_COMMAND",
                        "DICTATION"
                    ],
                    "enumDescriptions": [
                        "Use case is either unknown or is something other than one of the other\nvalues below.",
                        "Multiple people in a conversation or discussion. For example in a\nmeeting with two or more people actively participating. Typically\nall the primary people speaking would be in the same room (if not,\nsee PHONE_CALL)",
                        "One or more persons lecturing or presenting to others, mostly\nuninterrupted.",
                        "A phone-call or video-conference in which two or more people, who are\nnot in the same room, are actively participating.",
                        "A recorded message intended for another person to listen to.",
                        "Professionally produced audio (eg. TV Show, Podcast).",
                        "Transcribe spoken questions and queries into text.",
                        "Transcribe voice commands, such as for controlling a device.",
                        "Transcribe speech to text to create a written document, such as a\ntext-message, email or report."
                    ],
                    "type": "string"
                },
                "microphoneDistance": {
                    "enum": [
                        "MICROPHONE_DISTANCE_UNSPECIFIED",
                        "NEARFIELD",
                        "MIDFIELD",
                        "FARFIELD"
                    ],
                    "enumDescriptions": [
                        "Audio type is not known.",
                        "The audio was captured from a closely placed microphone. Eg. phone,\ndictaphone, or handheld microphone. Generally if there speaker is within\n1 meter of the microphone.",
                        "The speaker if within 3 meters of the microphone.",
                        "The speaker is more than 3 meters away from the microphone."
                    ],
                    "type": "string"
                },
                "originalMediaType": {
                    "enum": [
                        "ORIGINAL_MEDIA_TYPE_UNSPECIFIED",
                        "AUDIO",
                        "VIDEO"
                    ],
                    "enumDescriptions": [
                        "Unknown original media type.",
                        "The speech data is an audio recording.",
                        "The speech data originally recorded on a video."
                    ],
                    "type": "string"
                },
                "originalMimeType": {
                    "type": "string"
                },
                "recordingDeviceName": {
                    "type": "string"
                },
                "recordingDeviceType": {
                    "enum": [
                        "RECORDING_DEVICE_TYPE_UNSPECIFIED",
                        "SMARTPHONE",
                        "PC",
                        "PHONE_LINE",
                        "VEHICLE",
                        "OTHER_OUTDOOR_DEVICE",
                        "OTHER_INDOOR_DEVICE"
                    ],
                    "enumDescriptions": [
                        "The recording device is unknown.",
                        "Speech was recorded on a smartphone.",
                        "Speech was recorded using a personal computer or tablet.",
                        "Speech was recorded over a phone line.",
                        "Speech was recorded in a vehicle.",
                        "Speech was recorded outdoors.",
                        "Speech was recorded indoors."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecognizeRequest": {
            "id": "RecognizeRequest",
            "properties": {
                "audio": {
                    "$ref": "RecognitionAudio"
                },
                "config": {
                    "$ref": "RecognitionConfig"
                }
            },
            "type": "object"
        },
        "RecognizeResponse": {
            "id": "RecognizeResponse",
            "properties": {
                "results": {
                    "items": {
                        "$ref": "SpeechRecognitionResult"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SpeakerDiarizationConfig": {
            "id": "SpeakerDiarizationConfig",
            "properties": {
                "enableSpeakerDiarization": {
                    "type": "boolean"
                },
                "maxSpeakerCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "minSpeakerCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "speakerTag": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SpeechContext": {
            "id": "SpeechContext",
            "properties": {
                "phrases": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SpeechRecognitionAlternative": {
            "id": "SpeechRecognitionAlternative",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "transcript": {
                    "type": "string"
                },
                "words": {
                    "items": {
                        "$ref": "WordInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SpeechRecognitionResult": {
            "id": "SpeechRecognitionResult",
            "properties": {
                "alternatives": {
                    "items": {
                        "$ref": "SpeechRecognitionAlternative"
                    },
                    "type": "array"
                },
                "channelTag": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Status": {
            "id": "Status",
            "properties": {
                "code": {
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "items": {
                        "additionalProperties": {
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WordInfo": {
            "id": "WordInfo",
            "properties": {
                "endTime": {
                    "format": "google-duration",
                    "type": "string"
                },
                "speakerTag": {
                    "format": "int32",
                    "type": "integer"
                },
                "startTime": {
                    "format": "google-duration",
                    "type": "string"
                },
                "word": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Cloud Speech-to-Text API",
    "version": "v1",
    "version_module": true
}