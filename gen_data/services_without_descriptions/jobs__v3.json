{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloud-platform": {},
                "https://www.googleapis.com/auth/jobs": {}
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://jobs.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Cloud Talent Solution",
    "discoveryVersion": "v1",
    "documentationLink": "https://cloud.google.com/talent-solution/job-search/docs/",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "jobs:v3",
    "kind": "discovery#restDescription",
    "mtlsRootUrl": "https://jobs.mtls.googleapis.com/",
    "name": "jobs",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "location": "query",
            "type": "string"
        },
        "fields": {
            "location": "query",
            "type": "string"
        },
        "key": {
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "projects": {
            "methods": {
                "complete": {
                    "flatPath": "v3/projects/{projectsId}:complete",
                    "httpMethod": "GET",
                    "id": "jobs.projects.complete",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "companyName": {
                            "location": "query",
                            "type": "string"
                        },
                        "languageCode": {
                            "location": "query",
                            "type": "string"
                        },
                        "languageCodes": {
                            "location": "query",
                            "repeated": true,
                            "type": "string"
                        },
                        "name": {
                            "location": "path",
                            "pattern": "^projects/[^/]+$",
                            "required": true,
                            "type": "string"
                        },
                        "pageSize": {
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "query": {
                            "location": "query",
                            "type": "string"
                        },
                        "scope": {
                            "enum": [
                                "COMPLETION_SCOPE_UNSPECIFIED",
                                "TENANT",
                                "PUBLIC"
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "type": {
                            "enum": [
                                "COMPLETION_TYPE_UNSPECIFIED",
                                "JOB_TITLE",
                                "COMPANY_NAME",
                                "COMBINED"
                            ],
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v3/{+name}:complete",
                    "response": {
                        "$ref": "CompleteQueryResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/jobs"
                    ]
                }
            },
            "resources": {
                "clientEvents": {
                    "methods": {
                        "create": {
                            "flatPath": "v3/projects/{projectsId}/clientEvents",
                            "httpMethod": "POST",
                            "id": "jobs.projects.clientEvents.create",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+parent}/clientEvents",
                            "request": {
                                "$ref": "CreateClientEventRequest"
                            },
                            "response": {
                                "$ref": "ClientEvent"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        }
                    }
                },
                "companies": {
                    "methods": {
                        "create": {
                            "flatPath": "v3/projects/{projectsId}/companies",
                            "httpMethod": "POST",
                            "id": "jobs.projects.companies.create",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+parent}/companies",
                            "request": {
                                "$ref": "CreateCompanyRequest"
                            },
                            "response": {
                                "$ref": "Company"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "delete": {
                            "flatPath": "v3/projects/{projectsId}/companies/{companiesId}",
                            "httpMethod": "DELETE",
                            "id": "jobs.projects.companies.delete",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/companies/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+name}",
                            "response": {
                                "$ref": "Empty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "get": {
                            "flatPath": "v3/projects/{projectsId}/companies/{companiesId}",
                            "httpMethod": "GET",
                            "id": "jobs.projects.companies.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/companies/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+name}",
                            "response": {
                                "$ref": "Company"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "list": {
                            "flatPath": "v3/projects/{projectsId}/companies",
                            "httpMethod": "GET",
                            "id": "jobs.projects.companies.list",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "pageSize": {
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "location": "query",
                                    "type": "string"
                                },
                                "parent": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "requireOpenJobs": {
                                    "location": "query",
                                    "type": "boolean"
                                }
                            },
                            "path": "v3/{+parent}/companies",
                            "response": {
                                "$ref": "ListCompaniesResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "patch": {
                            "flatPath": "v3/projects/{projectsId}/companies/{companiesId}",
                            "httpMethod": "PATCH",
                            "id": "jobs.projects.companies.patch",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/companies/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+name}",
                            "request": {
                                "$ref": "UpdateCompanyRequest"
                            },
                            "response": {
                                "$ref": "Company"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        }
                    }
                },
                "jobs": {
                    "methods": {
                        "batchDelete": {
                            "flatPath": "v3/projects/{projectsId}/jobs:batchDelete",
                            "httpMethod": "POST",
                            "id": "jobs.projects.jobs.batchDelete",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+parent}/jobs:batchDelete",
                            "request": {
                                "$ref": "BatchDeleteJobsRequest"
                            },
                            "response": {
                                "$ref": "Empty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "create": {
                            "flatPath": "v3/projects/{projectsId}/jobs",
                            "httpMethod": "POST",
                            "id": "jobs.projects.jobs.create",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+parent}/jobs",
                            "request": {
                                "$ref": "CreateJobRequest"
                            },
                            "response": {
                                "$ref": "Job"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "delete": {
                            "flatPath": "v3/projects/{projectsId}/jobs/{jobsId}",
                            "httpMethod": "DELETE",
                            "id": "jobs.projects.jobs.delete",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/jobs/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+name}",
                            "response": {
                                "$ref": "Empty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "get": {
                            "flatPath": "v3/projects/{projectsId}/jobs/{jobsId}",
                            "httpMethod": "GET",
                            "id": "jobs.projects.jobs.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/jobs/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+name}",
                            "response": {
                                "$ref": "Job"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "list": {
                            "flatPath": "v3/projects/{projectsId}/jobs",
                            "httpMethod": "GET",
                            "id": "jobs.projects.jobs.list",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "filter": {
                                    "location": "query",
                                    "type": "string"
                                },
                                "jobView": {
                                    "enum": [
                                        "JOB_VIEW_UNSPECIFIED",
                                        "JOB_VIEW_ID_ONLY",
                                        "JOB_VIEW_MINIMAL",
                                        "JOB_VIEW_SMALL",
                                        "JOB_VIEW_FULL"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "location": "query",
                                    "type": "string"
                                },
                                "parent": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+parent}/jobs",
                            "response": {
                                "$ref": "ListJobsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "patch": {
                            "flatPath": "v3/projects/{projectsId}/jobs/{jobsId}",
                            "httpMethod": "PATCH",
                            "id": "jobs.projects.jobs.patch",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/jobs/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+name}",
                            "request": {
                                "$ref": "UpdateJobRequest"
                            },
                            "response": {
                                "$ref": "Job"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "search": {
                            "flatPath": "v3/projects/{projectsId}/jobs:search",
                            "httpMethod": "POST",
                            "id": "jobs.projects.jobs.search",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+parent}/jobs:search",
                            "request": {
                                "$ref": "SearchJobsRequest"
                            },
                            "response": {
                                "$ref": "SearchJobsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "searchForAlert": {
                            "flatPath": "v3/projects/{projectsId}/jobs:searchForAlert",
                            "httpMethod": "POST",
                            "id": "jobs.projects.jobs.searchForAlert",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v3/{+parent}/jobs:searchForAlert",
                            "request": {
                                "$ref": "SearchJobsRequest"
                            },
                            "response": {
                                "$ref": "SearchJobsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        }
                    }
                }
            }
        }
    },
    "rootUrl": "https://jobs.googleapis.com/",
    "schemas": {
        "ApplicationInfo": {
            "id": "ApplicationInfo",
            "properties": {
                "emails": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "instruction": {
                    "type": "string"
                },
                "uris": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchDeleteJobsRequest": {
            "id": "BatchDeleteJobsRequest",
            "properties": {
                "filter": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BucketRange": {
            "id": "BucketRange",
            "properties": {
                "from": {
                    "format": "double",
                    "type": "number"
                },
                "to": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "BucketizedCount": {
            "id": "BucketizedCount",
            "properties": {
                "count": {
                    "format": "int32",
                    "type": "integer"
                },
                "range": {
                    "$ref": "BucketRange"
                }
            },
            "type": "object"
        },
        "ClientEvent": {
            "id": "ClientEvent",
            "properties": {
                "createTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "eventId": {
                    "type": "string"
                },
                "extraInfo": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "jobEvent": {
                    "$ref": "JobEvent"
                },
                "parentEventId": {
                    "type": "string"
                },
                "requestId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CommuteFilter": {
            "id": "CommuteFilter",
            "properties": {
                "allowImpreciseAddresses": {
                    "type": "boolean"
                },
                "commuteMethod": {
                    "enum": [
                        "COMMUTE_METHOD_UNSPECIFIED",
                        "DRIVING",
                        "TRANSIT"
                    ],
                    "enumDescriptions": [
                        "Commute method is not specified.",
                        "Commute time is calculated based on driving time.",
                        "Commute time is calculated based on public transit including bus, metro,\nsubway, etc."
                    ],
                    "type": "string"
                },
                "departureTime": {
                    "$ref": "TimeOfDay"
                },
                "roadTraffic": {
                    "enum": [
                        "ROAD_TRAFFIC_UNSPECIFIED",
                        "TRAFFIC_FREE",
                        "BUSY_HOUR"
                    ],
                    "enumDescriptions": [
                        "Road traffic situation is not specified.",
                        "Optimal commute time without considering any traffic impact.",
                        "Commute time calculation takes in account the peak traffic impact."
                    ],
                    "type": "string"
                },
                "startCoordinates": {
                    "$ref": "LatLng"
                },
                "travelDuration": {
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CommuteInfo": {
            "id": "CommuteInfo",
            "properties": {
                "jobLocation": {
                    "$ref": "Location"
                },
                "travelDuration": {
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Company": {
            "id": "Company",
            "properties": {
                "careerSiteUri": {
                    "type": "string"
                },
                "derivedInfo": {
                    "$ref": "CompanyDerivedInfo"
                },
                "displayName": {
                    "type": "string"
                },
                "eeoText": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "headquartersAddress": {
                    "type": "string"
                },
                "hiringAgency": {
                    "type": "boolean"
                },
                "imageUri": {
                    "type": "string"
                },
                "keywordSearchableJobCustomAttributes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "enum": [
                        "COMPANY_SIZE_UNSPECIFIED",
                        "MINI",
                        "SMALL",
                        "SMEDIUM",
                        "MEDIUM",
                        "BIG",
                        "BIGGER",
                        "GIANT"
                    ],
                    "enumDescriptions": [
                        "Default value if the size is not specified.",
                        "The company has less than 50 employees.",
                        "The company has between 50 and 99 employees.",
                        "The company has between 100 and 499 employees.",
                        "The company has between 500 and 999 employees.",
                        "The company has between 1,000 and 4,999 employees.",
                        "The company has between 5,000 and 9,999 employees.",
                        "The company has 10,000 or more employees."
                    ],
                    "type": "string"
                },
                "suspended": {
                    "type": "boolean"
                },
                "websiteUri": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompanyDerivedInfo": {
            "id": "CompanyDerivedInfo",
            "properties": {
                "headquartersLocation": {
                    "$ref": "Location"
                }
            },
            "type": "object"
        },
        "CompensationEntry": {
            "id": "CompensationEntry",
            "properties": {
                "amount": {
                    "$ref": "Money"
                },
                "expectedUnitsPerYear": {
                    "format": "double",
                    "type": "number"
                },
                "range": {
                    "$ref": "CompensationRange"
                },
                "type": {
                    "enum": [
                        "COMPENSATION_TYPE_UNSPECIFIED",
                        "BASE",
                        "BONUS",
                        "SIGNING_BONUS",
                        "EQUITY",
                        "PROFIT_SHARING",
                        "COMMISSIONS",
                        "TIPS",
                        "OTHER_COMPENSATION_TYPE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Base compensation: Refers to the fixed amount of money paid to an\nemployee by an employer in return for work performed. Base compensation\ndoes not include benefits, bonuses or any other potential compensation\nfrom an employer.",
                        "Bonus.",
                        "Signing bonus.",
                        "Equity.",
                        "Profit sharing.",
                        "Commission.",
                        "Tips.",
                        "Other compensation type."
                    ],
                    "type": "string"
                },
                "unit": {
                    "enum": [
                        "COMPENSATION_UNIT_UNSPECIFIED",
                        "HOURLY",
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY",
                        "YEARLY",
                        "ONE_TIME",
                        "OTHER_COMPENSATION_UNIT"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Hourly.",
                        "Daily.",
                        "Weekly",
                        "Monthly.",
                        "Yearly.",
                        "One time.",
                        "Other compensation units."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompensationFilter": {
            "id": "CompensationFilter",
            "properties": {
                "includeJobsWithUnspecifiedCompensationRange": {
                    "type": "boolean"
                },
                "range": {
                    "$ref": "CompensationRange"
                },
                "type": {
                    "enum": [
                        "FILTER_TYPE_UNSPECIFIED",
                        "UNIT_ONLY",
                        "UNIT_AND_AMOUNT",
                        "ANNUALIZED_BASE_AMOUNT",
                        "ANNUALIZED_TOTAL_AMOUNT"
                    ],
                    "enumDescriptions": [
                        "Filter type unspecified. Position holder, INVALID, should never be used.",
                        "Filter by `base compensation entry's` unit. A job is a match if and\nonly if the job contains a base CompensationEntry and the base\nCompensationEntry's unit matches provided units.\nPopulate one or more units.\n\nSee CompensationInfo.CompensationEntry for definition of\nbase compensation entry.",
                        "Filter by `base compensation entry's` unit and amount / range. A job\nis a match if and only if the job contains a base CompensationEntry, and\nthe base entry's unit matches provided compensation_units and amount\nor range overlaps with provided compensation_range.\n\nSee CompensationInfo.CompensationEntry for definition of\nbase compensation entry.\n\nSet exactly one units and populate range.",
                        "Filter by annualized base compensation amount and `base compensation\nentry's` unit. Populate range and zero or more units.",
                        "Filter by annualized total compensation amount and `base compensation\nentry's` unit . Populate range and zero or more units."
                    ],
                    "type": "string"
                },
                "units": {
                    "enumDescriptions": [
                        "Default value.",
                        "Hourly.",
                        "Daily.",
                        "Weekly",
                        "Monthly.",
                        "Yearly.",
                        "One time.",
                        "Other compensation units."
                    ],
                    "items": {
                        "enum": [
                            "COMPENSATION_UNIT_UNSPECIFIED",
                            "HOURLY",
                            "DAILY",
                            "WEEKLY",
                            "MONTHLY",
                            "YEARLY",
                            "ONE_TIME",
                            "OTHER_COMPENSATION_UNIT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CompensationHistogramRequest": {
            "id": "CompensationHistogramRequest",
            "properties": {
                "bucketingOption": {
                    "$ref": "NumericBucketingOption"
                },
                "type": {
                    "enum": [
                        "COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED",
                        "BASE",
                        "ANNUALIZED_BASE",
                        "ANNUALIZED_TOTAL"
                    ],
                    "enumDescriptions": [
                        "Default value. Invalid.",
                        "Histogram by job's base compensation. See CompensationEntry for\ndefinition of base compensation.",
                        "Histogram by job's annualized base compensation. See CompensationEntry\nfor definition of annualized base compensation.",
                        "Histogram by job's annualized total compensation. See CompensationEntry\nfor definition of annualized total compensation."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompensationHistogramResult": {
            "id": "CompensationHistogramResult",
            "properties": {
                "result": {
                    "$ref": "NumericBucketingResult"
                },
                "type": {
                    "enum": [
                        "COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED",
                        "BASE",
                        "ANNUALIZED_BASE",
                        "ANNUALIZED_TOTAL"
                    ],
                    "enumDescriptions": [
                        "Default value. Invalid.",
                        "Histogram by job's base compensation. See CompensationEntry for\ndefinition of base compensation.",
                        "Histogram by job's annualized base compensation. See CompensationEntry\nfor definition of annualized base compensation.",
                        "Histogram by job's annualized total compensation. See CompensationEntry\nfor definition of annualized total compensation."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompensationInfo": {
            "id": "CompensationInfo",
            "properties": {
                "annualizedBaseCompensationRange": {
                    "$ref": "CompensationRange"
                },
                "annualizedTotalCompensationRange": {
                    "$ref": "CompensationRange"
                },
                "entries": {
                    "items": {
                        "$ref": "CompensationEntry"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CompensationRange": {
            "id": "CompensationRange",
            "properties": {
                "maxCompensation": {
                    "$ref": "Money"
                },
                "minCompensation": {
                    "$ref": "Money"
                }
            },
            "type": "object"
        },
        "CompleteQueryResponse": {
            "id": "CompleteQueryResponse",
            "properties": {
                "completionResults": {
                    "items": {
                        "$ref": "CompletionResult"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "ResponseMetadata"
                }
            },
            "type": "object"
        },
        "CompletionResult": {
            "id": "CompletionResult",
            "properties": {
                "imageUri": {
                    "type": "string"
                },
                "suggestion": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "COMPLETION_TYPE_UNSPECIFIED",
                        "JOB_TITLE",
                        "COMPANY_NAME",
                        "COMBINED"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Only suggest job titles.",
                        "Only suggest company names.",
                        "Suggest both job titles and company names."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateClientEventRequest": {
            "id": "CreateClientEventRequest",
            "properties": {
                "clientEvent": {
                    "$ref": "ClientEvent"
                }
            },
            "type": "object"
        },
        "CreateCompanyRequest": {
            "id": "CreateCompanyRequest",
            "properties": {
                "company": {
                    "$ref": "Company"
                }
            },
            "type": "object"
        },
        "CreateJobRequest": {
            "id": "CreateJobRequest",
            "properties": {
                "job": {
                    "$ref": "Job"
                }
            },
            "type": "object"
        },
        "CustomAttribute": {
            "id": "CustomAttribute",
            "properties": {
                "filterable": {
                    "type": "boolean"
                },
                "longValues": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "stringValues": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CustomAttributeHistogramRequest": {
            "id": "CustomAttributeHistogramRequest",
            "properties": {
                "key": {
                    "type": "string"
                },
                "longValueHistogramBucketingOption": {
                    "$ref": "NumericBucketingOption"
                },
                "stringValueHistogram": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CustomAttributeHistogramResult": {
            "id": "CustomAttributeHistogramResult",
            "properties": {
                "key": {
                    "type": "string"
                },
                "longValueHistogramResult": {
                    "$ref": "NumericBucketingResult"
                },
                "stringValueHistogramResult": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DeviceInfo": {
            "id": "DeviceInfo",
            "properties": {
                "deviceType": {
                    "enum": [
                        "DEVICE_TYPE_UNSPECIFIED",
                        "WEB",
                        "MOBILE_WEB",
                        "ANDROID",
                        "IOS",
                        "BOT",
                        "OTHER"
                    ],
                    "enumDescriptions": [
                        "The device type isn't specified.",
                        "A desktop web browser, such as, Chrome, Firefox, Safari, or Internet\nExplorer)",
                        "A mobile device web browser, such as a phone or tablet with a Chrome\nbrowser.",
                        "An Android device native application.",
                        "An iOS device native application.",
                        "A bot, as opposed to a device operated by human beings, such as a web\ncrawler.",
                        "Other devices types."
                    ],
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Empty": {
            "id": "Empty",
            "properties": {},
            "type": "object"
        },
        "HistogramFacets": {
            "id": "HistogramFacets",
            "properties": {
                "compensationHistogramFacets": {
                    "items": {
                        "$ref": "CompensationHistogramRequest"
                    },
                    "type": "array"
                },
                "customAttributeHistogramFacets": {
                    "items": {
                        "$ref": "CustomAttributeHistogramRequest"
                    },
                    "type": "array"
                },
                "simpleHistogramFacets": {
                    "enumDescriptions": [
                        "The default value if search type is not specified.",
                        "Filter by the company id field.",
                        "Filter by the employment type field, such as `FULL_TIME` or `PART_TIME`.",
                        "Filter by the company size type field, such as `BIG`, `SMALL` or `BIGGER`.",
                        "Filter by the date published field. Possible return values are:\n* PAST_24_HOURS (The past 24 hours)\n* PAST_3_DAYS (The past 3 days)\n* PAST_WEEK (The past 7 days)\n* PAST_MONTH (The past 30 days)\n* PAST_YEAR (The past 365 days)",
                        "Filter by the required education level of the job.",
                        "Filter by the required experience level of the job.",
                        "Filter by Admin1, which is a global placeholder for\nreferring to state, province, or the particular term a country uses to\ndefine the geographic structure below the country level.\nExamples include states codes such as \"CA\", \"IL\", \"NY\", and\nprovinces, such as \"BC\".",
                        "Filter by the country code of job, such as US, JP, FR.",
                        "Filter by the \"city name\", \"Admin1 code\", for example,\n\"Mountain View, CA\" or \"New York, NY\".",
                        "Filter by the locale field of a job, such as \"en-US\", \"fr-FR\".\n\nThis is the BCP-47 language code, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\n[Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).",
                        "Filter by the language code portion of the locale field, such as \"en\" or\n\"fr\".",
                        "Filter by the Category.",
                        "Filter by the city center GPS coordinate (latitude and longitude), for\nexample, 37.4038522,-122.0987765. Since the coordinates of a city center\ncan change, clients may need to refresh them periodically.",
                        "A combination of state or province code with a country code. This field\ndiffers from `JOB_ADMIN1`, which can be used in multiple countries.",
                        "Company display name.",
                        "Base compensation unit."
                    ],
                    "items": {
                        "enum": [
                            "SEARCH_TYPE_UNSPECIFIED",
                            "COMPANY_ID",
                            "EMPLOYMENT_TYPE",
                            "COMPANY_SIZE",
                            "DATE_PUBLISHED",
                            "EDUCATION_LEVEL",
                            "EXPERIENCE_LEVEL",
                            "ADMIN_1",
                            "COUNTRY",
                            "CITY",
                            "LOCALE",
                            "LANGUAGE",
                            "CATEGORY",
                            "CITY_COORDINATE",
                            "ADMIN_1_COUNTRY",
                            "COMPANY_DISPLAY_NAME",
                            "BASE_COMPENSATION_UNIT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "HistogramResult": {
            "id": "HistogramResult",
            "properties": {
                "searchType": {
                    "enum": [
                        "SEARCH_TYPE_UNSPECIFIED",
                        "COMPANY_ID",
                        "EMPLOYMENT_TYPE",
                        "COMPANY_SIZE",
                        "DATE_PUBLISHED",
                        "EDUCATION_LEVEL",
                        "EXPERIENCE_LEVEL",
                        "ADMIN_1",
                        "COUNTRY",
                        "CITY",
                        "LOCALE",
                        "LANGUAGE",
                        "CATEGORY",
                        "CITY_COORDINATE",
                        "ADMIN_1_COUNTRY",
                        "COMPANY_DISPLAY_NAME",
                        "BASE_COMPENSATION_UNIT"
                    ],
                    "enumDescriptions": [
                        "The default value if search type is not specified.",
                        "Filter by the company id field.",
                        "Filter by the employment type field, such as `FULL_TIME` or `PART_TIME`.",
                        "Filter by the company size type field, such as `BIG`, `SMALL` or `BIGGER`.",
                        "Filter by the date published field. Possible return values are:\n* PAST_24_HOURS (The past 24 hours)\n* PAST_3_DAYS (The past 3 days)\n* PAST_WEEK (The past 7 days)\n* PAST_MONTH (The past 30 days)\n* PAST_YEAR (The past 365 days)",
                        "Filter by the required education level of the job.",
                        "Filter by the required experience level of the job.",
                        "Filter by Admin1, which is a global placeholder for\nreferring to state, province, or the particular term a country uses to\ndefine the geographic structure below the country level.\nExamples include states codes such as \"CA\", \"IL\", \"NY\", and\nprovinces, such as \"BC\".",
                        "Filter by the country code of job, such as US, JP, FR.",
                        "Filter by the \"city name\", \"Admin1 code\", for example,\n\"Mountain View, CA\" or \"New York, NY\".",
                        "Filter by the locale field of a job, such as \"en-US\", \"fr-FR\".\n\nThis is the BCP-47 language code, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\n[Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).",
                        "Filter by the language code portion of the locale field, such as \"en\" or\n\"fr\".",
                        "Filter by the Category.",
                        "Filter by the city center GPS coordinate (latitude and longitude), for\nexample, 37.4038522,-122.0987765. Since the coordinates of a city center\ncan change, clients may need to refresh them periodically.",
                        "A combination of state or province code with a country code. This field\ndiffers from `JOB_ADMIN1`, which can be used in multiple countries.",
                        "Company display name.",
                        "Base compensation unit."
                    ],
                    "type": "string"
                },
                "values": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "HistogramResults": {
            "id": "HistogramResults",
            "properties": {
                "compensationHistogramResults": {
                    "items": {
                        "$ref": "CompensationHistogramResult"
                    },
                    "type": "array"
                },
                "customAttributeHistogramResults": {
                    "items": {
                        "$ref": "CustomAttributeHistogramResult"
                    },
                    "type": "array"
                },
                "simpleHistogramResults": {
                    "items": {
                        "$ref": "HistogramResult"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Job": {
            "id": "Job",
            "properties": {
                "addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "applicationInfo": {
                    "$ref": "ApplicationInfo"
                },
                "companyDisplayName": {
                    "type": "string"
                },
                "companyName": {
                    "type": "string"
                },
                "compensationInfo": {
                    "$ref": "CompensationInfo"
                },
                "customAttributes": {
                    "additionalProperties": {
                        "$ref": "CustomAttribute"
                    },
                    "type": "object"
                },
                "degreeTypes": {
                    "enumDescriptions": [
                        "Default value. Represents no degree, or early childhood education.\nMaps to ISCED code 0.\nEx) Kindergarten",
                        "Primary education which is typically the first stage of compulsory\neducation. ISCED code 1.\nEx) Elementary school",
                        "Lower secondary education; First stage of secondary education building on\nprimary education, typically with a more subject-oriented curriculum.\nISCED code 2.\nEx) Middle school",
                        "Middle education; Second/final stage of secondary education preparing for\ntertiary education and/or providing skills relevant to employment.\nUsually with an increased range of subject options and streams. ISCED\ncode 3.\nEx) High school",
                        "Adult Remedial Education; Programmes providing learning experiences that\nbuild on secondary education and prepare for labour market entry and/or\ntertiary education. The content is broader than secondary but not as\ncomplex as tertiary education. ISCED code 4.",
                        "Associate's or equivalent; Short first tertiary programmes that are\ntypically practically-based, occupationally-specific and prepare for\nlabour market entry. These programmes may also provide a pathway to other\ntertiary programmes. ISCED code 5.",
                        "Bachelor's or equivalent; Programmes designed to provide intermediate\nacademic and/or professional knowledge, skills and competencies leading\nto a first tertiary degree or equivalent qualification. ISCED code 6.",
                        "Master's or equivalent; Programmes designed to provide advanced academic\nand/or professional knowledge, skills and competencies leading to a\nsecond tertiary degree or equivalent qualification. ISCED code 7.",
                        "Doctoral or equivalent; Programmes designed primarily to lead to an\nadvanced research qualification, usually concluding with the submission\nand defense of a substantive dissertation of publishable quality based on\noriginal research. ISCED code 8."
                    ],
                    "items": {
                        "enum": [
                            "DEGREE_TYPE_UNSPECIFIED",
                            "PRIMARY_EDUCATION",
                            "LOWER_SECONDARY_EDUCATION",
                            "UPPER_SECONDARY_EDUCATION",
                            "ADULT_REMEDIAL_EDUCATION",
                            "ASSOCIATES_OR_EQUIVALENT",
                            "BACHELORS_OR_EQUIVALENT",
                            "MASTERS_OR_EQUIVALENT",
                            "DOCTORAL_OR_EQUIVALENT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "department": {
                    "type": "string"
                },
                "derivedInfo": {
                    "$ref": "JobDerivedInfo"
                },
                "employmentTypes": {
                    "enumDescriptions": [
                        "The default value if the employment type is not specified.",
                        "The job requires working a number of hours that constitute full\ntime employment, typically 40 or more hours per week.",
                        "The job entails working fewer hours than a full time job,\ntypically less than 40 hours a week.",
                        "The job is offered as a contracted, as opposed to a salaried employee,\nposition.",
                        "The job is offered as a contracted position with the understanding\nthat it's converted into a full-time position at the end of the\ncontract. Jobs of this type are also returned by a search for\nEmploymentType.CONTRACTOR jobs.",
                        "The job is offered as a temporary employment opportunity, usually\na short-term engagement.",
                        "The job is a fixed-term opportunity for students or entry-level job\nseekers to obtain on-the-job training, typically offered as a summer\nposition.",
                        "The is an opportunity for an individual to volunteer, where there's no\nexpectation of compensation for the provided services.",
                        "The job requires an employee to work on an as-needed basis with a\nflexible schedule.",
                        "The job involves employing people in remote areas and flying them\ntemporarily to the work site instead of relocating employees and their\nfamilies permanently.",
                        "The job does not fit any of the other listed types."
                    ],
                    "items": {
                        "enum": [
                            "EMPLOYMENT_TYPE_UNSPECIFIED",
                            "FULL_TIME",
                            "PART_TIME",
                            "CONTRACTOR",
                            "CONTRACT_TO_HIRE",
                            "TEMPORARY",
                            "INTERN",
                            "VOLUNTEER",
                            "PER_DIEM",
                            "FLY_IN_FLY_OUT",
                            "OTHER_EMPLOYMENT_TYPE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "incentives": {
                    "type": "string"
                },
                "jobBenefits": {
                    "enumDescriptions": [
                        "Default value if the type is not specified.",
                        "The job includes access to programs that support child care, such\nas daycare.",
                        "The job includes dental services covered by a dental\ninsurance plan.",
                        "The job offers specific benefits to domestic partners.",
                        "The job allows for a flexible work schedule.",
                        "The job includes health services covered by a medical insurance plan.",
                        "The job includes a life insurance plan provided by the employer or\navailable for purchase by the employee.",
                        "The job allows for a leave of absence to a parent to care for a newborn\nchild.",
                        "The job includes a workplace retirement plan provided by the\nemployer or available for purchase by the employee.",
                        "The job allows for paid time off due to illness.",
                        "The job includes paid time off for vacation.",
                        "The job includes vision services covered by a vision\ninsurance plan."
                    ],
                    "items": {
                        "enum": [
                            "JOB_BENEFIT_UNSPECIFIED",
                            "CHILD_CARE",
                            "DENTAL",
                            "DOMESTIC_PARTNER",
                            "FLEXIBLE_HOURS",
                            "MEDICAL",
                            "LIFE_INSURANCE",
                            "PARENTAL_LEAVE",
                            "RETIREMENT_PLAN",
                            "SICK_DAYS",
                            "VACATION",
                            "VISION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "jobEndTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "jobLevel": {
                    "enum": [
                        "JOB_LEVEL_UNSPECIFIED",
                        "ENTRY_LEVEL",
                        "EXPERIENCED",
                        "MANAGER",
                        "DIRECTOR",
                        "EXECUTIVE"
                    ],
                    "enumDescriptions": [
                        "The default value if the level is not specified.",
                        "Entry-level individual contributors, typically with less than 2 years of\nexperience in a similar role. Includes interns.",
                        "Experienced individual contributors, typically with 2+ years of\nexperience in a similar role.",
                        "Entry- to mid-level managers responsible for managing a team of people.",
                        "Senior-level managers responsible for managing teams of managers.",
                        "Executive-level managers and above, including C-level positions."
                    ],
                    "type": "string"
                },
                "jobStartTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "languageCode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "postingCreateTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "postingExpireTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "postingPublishTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "postingRegion": {
                    "enum": [
                        "POSTING_REGION_UNSPECIFIED",
                        "ADMINISTRATIVE_AREA",
                        "NATION",
                        "TELECOMMUTE"
                    ],
                    "enumDescriptions": [
                        "If the region is unspecified, the job is only returned if it\nmatches the LocationFilter.",
                        "In addition to exact location matching, job posting is returned when the\nLocationFilter in the search query is in the same administrative area\nas the returned job posting. For example, if a `ADMINISTRATIVE_AREA` job\nis posted in \"CA, USA\", it's returned if LocationFilter has\n\"Mountain View\".\n\nAdministrative area refers to top-level administrative subdivision of this\ncountry. For example, US state, IT region, UK constituent nation and\nJP prefecture.",
                        "In addition to exact location matching, job is returned when\nLocationFilter in search query is in the same country as this job.\nFor example, if a `NATION_WIDE` job is posted in \"USA\", it's\nreturned if LocationFilter has 'Mountain View'.",
                        "Job allows employees to work remotely (telecommute).\nIf locations are provided with this value, the job is\nconsidered as having a location, but telecommuting is allowed."
                    ],
                    "type": "string"
                },
                "postingUpdateTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "processingOptions": {
                    "$ref": "ProcessingOptions"
                },
                "promotionValue": {
                    "format": "int32",
                    "type": "integer"
                },
                "qualifications": {
                    "type": "string"
                },
                "requisitionId": {
                    "type": "string"
                },
                "responsibilities": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "visibility": {
                    "enum": [
                        "VISIBILITY_UNSPECIFIED",
                        "ACCOUNT_ONLY",
                        "SHARED_WITH_GOOGLE",
                        "SHARED_WITH_PUBLIC"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "The resource is only visible to the GCP account who owns it.",
                        "The resource is visible to the owner and may be visible to other\napplications and processes at Google.",
                        "The resource is visible to the owner and may be visible to all other API\nclients."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobDerivedInfo": {
            "id": "JobDerivedInfo",
            "properties": {
                "jobCategories": {
                    "enumDescriptions": [
                        "The default value if the category isn't specified.",
                        "An accounting and finance job, such as an Accountant.",
                        "An administrative and office job, such as an Administrative Assistant.",
                        "An advertising and marketing job, such as Marketing Manager.",
                        "An animal care job, such as Veterinarian.",
                        "An art, fashion, or design job, such as Designer.",
                        "A business operations job, such as Business Operations Manager.",
                        "A cleaning and facilities job, such as Custodial Staff.",
                        "A computer and IT job, such as Systems Administrator.",
                        "A construction job, such as General Laborer.",
                        "A customer service job, such s Cashier.",
                        "An education job, such as School Teacher.",
                        "An entertainment and travel job, such as Flight Attendant.",
                        "A farming or outdoor job, such as Park Ranger.",
                        "A healthcare job, such as Registered Nurse.",
                        "A human resources job, such as Human Resources Director.",
                        "An installation, maintenance, or repair job, such as Electrician.",
                        "A legal job, such as Law Clerk.",
                        "A management job, often used in conjunction with another category,\nsuch as Store Manager.",
                        "A manufacturing or warehouse job, such as Assembly Technician.",
                        "A media, communications, or writing job, such as Media Relations.",
                        "An oil, gas or mining job, such as Offshore Driller.",
                        "A personal care and services job, such as Hair Stylist.",
                        "A protective services job, such as Security Guard.",
                        "A real estate job, such as Buyer's Agent.",
                        "A restaurant and hospitality job, such as Restaurant Server.",
                        "A sales and/or retail job, such Sales Associate.",
                        "A science and engineering job, such as Lab Technician.",
                        "A social services or non-profit job, such as Case Worker.",
                        "A sports, fitness, or recreation job, such as Personal Trainer.",
                        "A transportation or logistics job, such as Truck Driver."
                    ],
                    "items": {
                        "enum": [
                            "JOB_CATEGORY_UNSPECIFIED",
                            "ACCOUNTING_AND_FINANCE",
                            "ADMINISTRATIVE_AND_OFFICE",
                            "ADVERTISING_AND_MARKETING",
                            "ANIMAL_CARE",
                            "ART_FASHION_AND_DESIGN",
                            "BUSINESS_OPERATIONS",
                            "CLEANING_AND_FACILITIES",
                            "COMPUTER_AND_IT",
                            "CONSTRUCTION",
                            "CUSTOMER_SERVICE",
                            "EDUCATION",
                            "ENTERTAINMENT_AND_TRAVEL",
                            "FARMING_AND_OUTDOORS",
                            "HEALTHCARE",
                            "HUMAN_RESOURCES",
                            "INSTALLATION_MAINTENANCE_AND_REPAIR",
                            "LEGAL",
                            "MANAGEMENT",
                            "MANUFACTURING_AND_WAREHOUSE",
                            "MEDIA_COMMUNICATIONS_AND_WRITING",
                            "OIL_GAS_AND_MINING",
                            "PERSONAL_CARE_AND_SERVICES",
                            "PROTECTIVE_SERVICES",
                            "REAL_ESTATE",
                            "RESTAURANT_AND_HOSPITALITY",
                            "SALES_AND_RETAIL",
                            "SCIENCE_AND_ENGINEERING",
                            "SOCIAL_SERVICES_AND_NON_PROFIT",
                            "SPORTS_FITNESS_AND_RECREATION",
                            "TRANSPORTATION_AND_LOGISTICS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "locations": {
                    "items": {
                        "$ref": "Location"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobEvent": {
            "id": "JobEvent",
            "properties": {
                "jobs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "JOB_EVENT_TYPE_UNSPECIFIED",
                        "IMPRESSION",
                        "VIEW",
                        "VIEW_REDIRECT",
                        "APPLICATION_START",
                        "APPLICATION_FINISH",
                        "APPLICATION_QUICK_SUBMISSION",
                        "APPLICATION_REDIRECT",
                        "APPLICATION_START_FROM_SEARCH",
                        "APPLICATION_REDIRECT_FROM_SEARCH",
                        "APPLICATION_COMPANY_SUBMIT",
                        "BOOKMARK",
                        "NOTIFICATION",
                        "HIRED",
                        "SENT_CV",
                        "INTERVIEW_GRANTED",
                        "NOT_INTERESTED"
                    ],
                    "enumDescriptions": [
                        "The event is unspecified by other provided values.",
                        "The job seeker or other entity interacting with the service has\nhad a job rendered in their view, such as in a list of search results in\na compressed or clipped format. This event is typically associated with\nthe viewing of a jobs list on a single page by a job seeker.",
                        "The job seeker, or other entity interacting with the service, has\nviewed the details of a job, including the full description. This\nevent doesn't apply to the viewing a snippet of a job appearing as a\npart of the job search results. Viewing a snippet is associated with an\nimpression).",
                        "The job seeker or other entity interacting with the service\nperformed an action to view a job and was redirected to a different\nwebsite for job.",
                        "The job seeker or other entity interacting with the service\nbegan the process or demonstrated the intention of applying for a job.",
                        "The job seeker or other entity interacting with the service\nsubmitted an application for a job.",
                        "The job seeker or other entity interacting with the service\nsubmitted an application for a job with a single click without\nentering information. If a job seeker performs this action, send only\nthis event to the service. Do not also send\nJobEventType.APPLICATION_START or JobEventType.APPLICATION_FINISH\nevents.",
                        "The job seeker or other entity interacting with the service\nperformed an action to apply to a job and was redirected to a different\nwebsite to complete the application.",
                        "The job seeker or other entity interacting with the service began the\nprocess or demonstrated the intention of applying for a job from the\nsearch results page without viewing the details of the job posting.\nIf sending this event, JobEventType.VIEW event shouldn't be sent.",
                        "The job seeker, or other entity interacting with the service, performs an\naction with a single click from the search results page to apply to a job\n(without viewing the details of the job posting), and is redirected\nto a different website to complete the application. If a candidate\nperforms this action, send only this event to the service. Do not also\nsend JobEventType.APPLICATION_START,\nJobEventType.APPLICATION_FINISH or JobEventType.VIEW events.",
                        "This event should be used when a company submits an application\non behalf of a job seeker. This event is intended for use by staffing\nagencies attempting to place candidates.",
                        "The job seeker or other entity interacting with the service demonstrated\nan interest in a job by bookmarking or saving it.",
                        "The job seeker or other entity interacting with the service was\nsent a notification, such as an email alert or device notification,\ncontaining one or more jobs listings generated by the service.",
                        "The job seeker or other entity interacting with the service was\nemployed by the hiring entity (employer). Send this event\nonly if the job seeker was hired through an application that was\ninitiated by a search conducted through the Cloud Talent Solution\nservice.",
                        "A recruiter or staffing agency submitted an application on behalf of the\ncandidate after interacting with the service to identify a suitable job\nposting.",
                        "The entity interacting with the service (for example, the job seeker),\nwas granted an initial interview by the hiring entity (employer). This\nevent should only be sent if the job seeker was granted an interview as\npart of an application that was initiated by a search conducted through /\nrecommendation provided by the Cloud Talent Solution service.",
                        "The job seeker or other entity interacting with the service showed\nno interest in the job."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobQuery": {
            "id": "JobQuery",
            "properties": {
                "commuteFilter": {
                    "$ref": "CommuteFilter"
                },
                "companyDisplayNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "companyNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "compensationFilter": {
                    "$ref": "CompensationFilter"
                },
                "customAttributeFilter": {
                    "type": "string"
                },
                "disableSpellCheck": {
                    "type": "boolean"
                },
                "employmentTypes": {
                    "enumDescriptions": [
                        "The default value if the employment type is not specified.",
                        "The job requires working a number of hours that constitute full\ntime employment, typically 40 or more hours per week.",
                        "The job entails working fewer hours than a full time job,\ntypically less than 40 hours a week.",
                        "The job is offered as a contracted, as opposed to a salaried employee,\nposition.",
                        "The job is offered as a contracted position with the understanding\nthat it's converted into a full-time position at the end of the\ncontract. Jobs of this type are also returned by a search for\nEmploymentType.CONTRACTOR jobs.",
                        "The job is offered as a temporary employment opportunity, usually\na short-term engagement.",
                        "The job is a fixed-term opportunity for students or entry-level job\nseekers to obtain on-the-job training, typically offered as a summer\nposition.",
                        "The is an opportunity for an individual to volunteer, where there's no\nexpectation of compensation for the provided services.",
                        "The job requires an employee to work on an as-needed basis with a\nflexible schedule.",
                        "The job involves employing people in remote areas and flying them\ntemporarily to the work site instead of relocating employees and their\nfamilies permanently.",
                        "The job does not fit any of the other listed types."
                    ],
                    "items": {
                        "enum": [
                            "EMPLOYMENT_TYPE_UNSPECIFIED",
                            "FULL_TIME",
                            "PART_TIME",
                            "CONTRACTOR",
                            "CONTRACT_TO_HIRE",
                            "TEMPORARY",
                            "INTERN",
                            "VOLUNTEER",
                            "PER_DIEM",
                            "FLY_IN_FLY_OUT",
                            "OTHER_EMPLOYMENT_TYPE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "jobCategories": {
                    "enumDescriptions": [
                        "The default value if the category isn't specified.",
                        "An accounting and finance job, such as an Accountant.",
                        "An administrative and office job, such as an Administrative Assistant.",
                        "An advertising and marketing job, such as Marketing Manager.",
                        "An animal care job, such as Veterinarian.",
                        "An art, fashion, or design job, such as Designer.",
                        "A business operations job, such as Business Operations Manager.",
                        "A cleaning and facilities job, such as Custodial Staff.",
                        "A computer and IT job, such as Systems Administrator.",
                        "A construction job, such as General Laborer.",
                        "A customer service job, such s Cashier.",
                        "An education job, such as School Teacher.",
                        "An entertainment and travel job, such as Flight Attendant.",
                        "A farming or outdoor job, such as Park Ranger.",
                        "A healthcare job, such as Registered Nurse.",
                        "A human resources job, such as Human Resources Director.",
                        "An installation, maintenance, or repair job, such as Electrician.",
                        "A legal job, such as Law Clerk.",
                        "A management job, often used in conjunction with another category,\nsuch as Store Manager.",
                        "A manufacturing or warehouse job, such as Assembly Technician.",
                        "A media, communications, or writing job, such as Media Relations.",
                        "An oil, gas or mining job, such as Offshore Driller.",
                        "A personal care and services job, such as Hair Stylist.",
                        "A protective services job, such as Security Guard.",
                        "A real estate job, such as Buyer's Agent.",
                        "A restaurant and hospitality job, such as Restaurant Server.",
                        "A sales and/or retail job, such Sales Associate.",
                        "A science and engineering job, such as Lab Technician.",
                        "A social services or non-profit job, such as Case Worker.",
                        "A sports, fitness, or recreation job, such as Personal Trainer.",
                        "A transportation or logistics job, such as Truck Driver."
                    ],
                    "items": {
                        "enum": [
                            "JOB_CATEGORY_UNSPECIFIED",
                            "ACCOUNTING_AND_FINANCE",
                            "ADMINISTRATIVE_AND_OFFICE",
                            "ADVERTISING_AND_MARKETING",
                            "ANIMAL_CARE",
                            "ART_FASHION_AND_DESIGN",
                            "BUSINESS_OPERATIONS",
                            "CLEANING_AND_FACILITIES",
                            "COMPUTER_AND_IT",
                            "CONSTRUCTION",
                            "CUSTOMER_SERVICE",
                            "EDUCATION",
                            "ENTERTAINMENT_AND_TRAVEL",
                            "FARMING_AND_OUTDOORS",
                            "HEALTHCARE",
                            "HUMAN_RESOURCES",
                            "INSTALLATION_MAINTENANCE_AND_REPAIR",
                            "LEGAL",
                            "MANAGEMENT",
                            "MANUFACTURING_AND_WAREHOUSE",
                            "MEDIA_COMMUNICATIONS_AND_WRITING",
                            "OIL_GAS_AND_MINING",
                            "PERSONAL_CARE_AND_SERVICES",
                            "PROTECTIVE_SERVICES",
                            "REAL_ESTATE",
                            "RESTAURANT_AND_HOSPITALITY",
                            "SALES_AND_RETAIL",
                            "SCIENCE_AND_ENGINEERING",
                            "SOCIAL_SERVICES_AND_NON_PROFIT",
                            "SPORTS_FITNESS_AND_RECREATION",
                            "TRANSPORTATION_AND_LOGISTICS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "languageCodes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "locationFilters": {
                    "items": {
                        "$ref": "LocationFilter"
                    },
                    "type": "array"
                },
                "publishTimeRange": {
                    "$ref": "TimestampRange"
                },
                "query": {
                    "type": "string"
                },
                "queryLanguageCode": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LatLng": {
            "id": "LatLng",
            "properties": {
                "latitude": {
                    "format": "double",
                    "type": "number"
                },
                "longitude": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ListCompaniesResponse": {
            "id": "ListCompaniesResponse",
            "properties": {
                "companies": {
                    "items": {
                        "$ref": "Company"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "ResponseMetadata"
                },
                "nextPageToken": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListJobsResponse": {
            "id": "ListJobsResponse",
            "properties": {
                "jobs": {
                    "items": {
                        "$ref": "Job"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "ResponseMetadata"
                },
                "nextPageToken": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Location": {
            "id": "Location",
            "properties": {
                "latLng": {
                    "$ref": "LatLng"
                },
                "locationType": {
                    "enum": [
                        "LOCATION_TYPE_UNSPECIFIED",
                        "COUNTRY",
                        "ADMINISTRATIVE_AREA",
                        "SUB_ADMINISTRATIVE_AREA",
                        "LOCALITY",
                        "POSTAL_CODE",
                        "SUB_LOCALITY",
                        "SUB_LOCALITY_1",
                        "SUB_LOCALITY_2",
                        "NEIGHBORHOOD",
                        "STREET_ADDRESS"
                    ],
                    "enumDescriptions": [
                        "Default value if the type is not specified.",
                        "A country level location.",
                        "A state or equivalent level location.",
                        "A county or equivalent level location.",
                        "A city or equivalent level location.",
                        "A postal code level location.",
                        "A sublocality is a subdivision of a locality, for example a city borough,\nward, or arrondissement. Sublocalities are usually recognized by a local\npolitical authority. For example, Manhattan and Brooklyn are recognized\nas boroughs by the City of New York, and are therefore modeled as\nsublocalities.",
                        "A district or equivalent level location.",
                        "A smaller district or equivalent level display.",
                        "A neighborhood level location.",
                        "A street address level location."
                    ],
                    "type": "string"
                },
                "postalAddress": {
                    "$ref": "PostalAddress"
                },
                "radiusInMiles": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "LocationFilter": {
            "id": "LocationFilter",
            "properties": {
                "address": {
                    "type": "string"
                },
                "distanceInMiles": {
                    "format": "double",
                    "type": "number"
                },
                "latLng": {
                    "$ref": "LatLng"
                },
                "regionCode": {
                    "type": "string"
                },
                "telecommutePreference": {
                    "enum": [
                        "TELECOMMUTE_PREFERENCE_UNSPECIFIED",
                        "TELECOMMUTE_EXCLUDED",
                        "TELECOMMUTE_ALLOWED"
                    ],
                    "enumDescriptions": [
                        "Default value if the telecommute preference is not specified.",
                        "Exclude telecommute jobs.",
                        "Allow telecommute jobs."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MatchingJob": {
            "id": "MatchingJob",
            "properties": {
                "commuteInfo": {
                    "$ref": "CommuteInfo"
                },
                "job": {
                    "$ref": "Job"
                },
                "jobSummary": {
                    "type": "string"
                },
                "jobTitleSnippet": {
                    "type": "string"
                },
                "searchTextSnippet": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MendelDebugInput": {
            "id": "MendelDebugInput",
            "properties": {
                "namespacedDebugInput": {
                    "additionalProperties": {
                        "$ref": "NamespacedDebugInput"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Money": {
            "id": "Money",
            "properties": {
                "currencyCode": {
                    "type": "string"
                },
                "nanos": {
                    "format": "int32",
                    "type": "integer"
                },
                "units": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NamespacedDebugInput": {
            "id": "NamespacedDebugInput",
            "properties": {
                "absolutelyForcedExpNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "absolutelyForcedExpTags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "absolutelyForcedExps": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "conditionallyForcedExpNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "conditionallyForcedExpTags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "conditionallyForcedExps": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "disableAutomaticEnrollmentSelection": {
                    "type": "boolean"
                },
                "disableExpNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "disableExpTags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "disableExps": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "disableManualEnrollmentSelection": {
                    "type": "boolean"
                },
                "disableOrganicSelection": {
                    "type": "boolean"
                },
                "forcedFlags": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "forcedRollouts": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "NumericBucketingOption": {
            "id": "NumericBucketingOption",
            "properties": {
                "bucketBounds": {
                    "items": {
                        "format": "double",
                        "type": "number"
                    },
                    "type": "array"
                },
                "requiresMinMax": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NumericBucketingResult": {
            "id": "NumericBucketingResult",
            "properties": {
                "counts": {
                    "items": {
                        "$ref": "BucketizedCount"
                    },
                    "type": "array"
                },
                "maxValue": {
                    "format": "double",
                    "type": "number"
                },
                "minValue": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PostalAddress": {
            "id": "PostalAddress",
            "properties": {
                "addressLines": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "administrativeArea": {
                    "type": "string"
                },
                "languageCode": {
                    "type": "string"
                },
                "locality": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "recipients": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "regionCode": {
                    "type": "string"
                },
                "revision": {
                    "format": "int32",
                    "type": "integer"
                },
                "sortingCode": {
                    "type": "string"
                },
                "sublocality": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProcessingOptions": {
            "id": "ProcessingOptions",
            "properties": {
                "disableStreetAddressResolution": {
                    "type": "boolean"
                },
                "htmlSanitization": {
                    "enum": [
                        "HTML_SANITIZATION_UNSPECIFIED",
                        "HTML_SANITIZATION_DISABLED",
                        "SIMPLE_FORMATTING_ONLY"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Disables sanitization on HTML input.",
                        "Sanitizes HTML input, only accepts bold, italic, ordered list, and\nunordered list markup tags."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RequestMetadata": {
            "id": "RequestMetadata",
            "properties": {
                "deviceInfo": {
                    "$ref": "DeviceInfo"
                },
                "domain": {
                    "type": "string"
                },
                "sessionId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResponseMetadata": {
            "id": "ResponseMetadata",
            "properties": {
                "requestId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchJobsRequest": {
            "id": "SearchJobsRequest",
            "properties": {
                "disableKeywordMatch": {
                    "type": "boolean"
                },
                "diversificationLevel": {
                    "enum": [
                        "DIVERSIFICATION_LEVEL_UNSPECIFIED",
                        "DISABLED",
                        "SIMPLE"
                    ],
                    "enumDescriptions": [
                        "The diversification level isn't specified. By default, jobs with this\nenum are ordered according to SIMPLE diversifying behavior.",
                        "Disables diversification. Jobs that would normally be pushed to the last\npage would not have their positions altered. This may result in highly\nsimilar jobs appearing in sequence in the search results.",
                        "Default diversifying behavior. The result list is ordered so that\nhighly similar results are pushed to the end of the last page of search\nresults."
                    ],
                    "type": "string"
                },
                "enableBroadening": {
                    "type": "boolean"
                },
                "histogramFacets": {
                    "$ref": "HistogramFacets"
                },
                "jobQuery": {
                    "$ref": "JobQuery"
                },
                "jobView": {
                    "enum": [
                        "JOB_VIEW_UNSPECIFIED",
                        "JOB_VIEW_ID_ONLY",
                        "JOB_VIEW_MINIMAL",
                        "JOB_VIEW_SMALL",
                        "JOB_VIEW_FULL"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A ID only view of job, with following attributes:\nJob.name, Job.requisition_id, Job.language_code.",
                        "A minimal view of the job, with the following attributes:\nJob.name, Job.requisition_id, Job.title,\nJob.company_name, Job.DerivedInfo.locations, Job.language_code.",
                        "A small view of the job, with the following attributes in the search\nresults: Job.name, Job.requisition_id, Job.title,\nJob.company_name, Job.DerivedInfo.locations, Job.visibility,\nJob.language_code, Job.description.",
                        "All available attributes are included in the search results."
                    ],
                    "type": "string"
                },
                "offset": {
                    "format": "int32",
                    "type": "integer"
                },
                "orderBy": {
                    "type": "string"
                },
                "pageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "pageToken": {
                    "type": "string"
                },
                "requestMetadata": {
                    "$ref": "RequestMetadata"
                },
                "requirePreciseResultSize": {
                    "type": "boolean"
                },
                "searchMode": {
                    "enum": [
                        "SEARCH_MODE_UNSPECIFIED",
                        "JOB_SEARCH",
                        "FEATURED_JOB_SEARCH"
                    ],
                    "enumDescriptions": [
                        "The mode of the search method isn't specified. The default search\nbehavior is identical to JOB_SEARCH search behavior.",
                        "The job search matches against all jobs, and featured jobs\n(jobs with promotionValue > 0) are not specially handled.",
                        "The job search matches only against featured jobs (jobs with a\npromotionValue > 0). This method doesn't return any jobs having a\npromotionValue <= 0. The search results order is determined by the\npromotionValue (jobs with a higher promotionValue are returned higher up\nin the search results), with relevance being used as a tiebreaker."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchJobsResponse": {
            "id": "SearchJobsResponse",
            "properties": {
                "broadenedQueryJobsCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "estimatedTotalSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "histogramResults": {
                    "$ref": "HistogramResults"
                },
                "locationFilters": {
                    "items": {
                        "$ref": "Location"
                    },
                    "type": "array"
                },
                "matchingJobs": {
                    "items": {
                        "$ref": "MatchingJob"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "ResponseMetadata"
                },
                "nextPageToken": {
                    "type": "string"
                },
                "spellCorrection": {
                    "$ref": "SpellingCorrection"
                },
                "totalSize": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SpellingCorrection": {
            "id": "SpellingCorrection",
            "properties": {
                "corrected": {
                    "type": "boolean"
                },
                "correctedText": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TimeOfDay": {
            "id": "TimeOfDay",
            "properties": {
                "hours": {
                    "format": "int32",
                    "type": "integer"
                },
                "minutes": {
                    "format": "int32",
                    "type": "integer"
                },
                "nanos": {
                    "format": "int32",
                    "type": "integer"
                },
                "seconds": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "TimestampRange": {
            "id": "TimestampRange",
            "properties": {
                "endTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "startTime": {
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateCompanyRequest": {
            "id": "UpdateCompanyRequest",
            "properties": {
                "company": {
                    "$ref": "Company"
                },
                "updateMask": {
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateJobRequest": {
            "id": "UpdateJobRequest",
            "properties": {
                "job": {
                    "$ref": "Job"
                },
                "updateMask": {
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Cloud Talent Solution API",
    "version": "v3",
    "version_module": true
}