{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloud-platform": {},
                "https://www.googleapis.com/auth/cloud-platform.read-only": {},
                "https://www.googleapis.com/auth/service.management": {}
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://serviceusage.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Service Usage",
    "discoveryVersion": "v1",
    "documentationLink": "https://cloud.google.com/service-usage/",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "serviceusage:v1",
    "kind": "discovery#restDescription",
    "mtlsRootUrl": "https://serviceusage.mtls.googleapis.com/",
    "name": "serviceusage",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "location": "query",
            "type": "string"
        },
        "fields": {
            "location": "query",
            "type": "string"
        },
        "key": {
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "operations": {
            "methods": {
                "cancel": {
                    "flatPath": "v1/operations/{operationsId}:cancel",
                    "httpMethod": "POST",
                    "id": "serviceusage.operations.cancel",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "location": "path",
                            "pattern": "^operations/.*$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}:cancel",
                    "request": {
                        "$ref": "CancelOperationRequest"
                    },
                    "response": {
                        "$ref": "Empty"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/service.management"
                    ]
                },
                "delete": {
                    "flatPath": "v1/operations/{operationsId}",
                    "httpMethod": "DELETE",
                    "id": "serviceusage.operations.delete",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "location": "path",
                            "pattern": "^operations/.*$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "Empty"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/service.management"
                    ]
                },
                "get": {
                    "flatPath": "v1/operations/{operationsId}",
                    "httpMethod": "GET",
                    "id": "serviceusage.operations.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "location": "path",
                            "pattern": "^operations/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/service.management"
                    ]
                },
                "list": {
                    "flatPath": "v1/operations",
                    "httpMethod": "GET",
                    "id": "serviceusage.operations.list",
                    "parameterOrder": [],
                    "parameters": {
                        "filter": {
                            "location": "query",
                            "type": "string"
                        },
                        "name": {
                            "location": "query",
                            "type": "string"
                        },
                        "pageSize": {
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "pageToken": {
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v1/operations",
                    "response": {
                        "$ref": "ListOperationsResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/service.management"
                    ]
                }
            }
        },
        "services": {
            "methods": {
                "batchEnable": {
                    "flatPath": "v1/{v1Id}/{v1Id1}/services:batchEnable",
                    "httpMethod": "POST",
                    "id": "serviceusage.services.batchEnable",
                    "parameterOrder": [
                        "parent"
                    ],
                    "parameters": {
                        "parent": {
                            "location": "path",
                            "pattern": "^[^/]+/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+parent}/services:batchEnable",
                    "request": {
                        "$ref": "BatchEnableServicesRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/service.management"
                    ]
                },
                "disable": {
                    "flatPath": "v1/{v1Id}/{v1Id1}/services/{servicesId}:disable",
                    "httpMethod": "POST",
                    "id": "serviceusage.services.disable",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "location": "path",
                            "pattern": "^[^/]+/[^/]+/services/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}:disable",
                    "request": {
                        "$ref": "DisableServiceRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/service.management"
                    ]
                },
                "enable": {
                    "flatPath": "v1/{v1Id}/{v1Id1}/services/{servicesId}:enable",
                    "httpMethod": "POST",
                    "id": "serviceusage.services.enable",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "location": "path",
                            "pattern": "^[^/]+/[^/]+/services/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}:enable",
                    "request": {
                        "$ref": "EnableServiceRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/service.management"
                    ]
                },
                "get": {
                    "flatPath": "v1/{v1Id}/{v1Id1}/services/{servicesId}",
                    "httpMethod": "GET",
                    "id": "serviceusage.services.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "location": "path",
                            "pattern": "^[^/]+/[^/]+/services/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "GoogleApiServiceusageV1Service"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                    ]
                },
                "list": {
                    "flatPath": "v1/{v1Id}/{v1Id1}/services",
                    "httpMethod": "GET",
                    "id": "serviceusage.services.list",
                    "parameterOrder": [
                        "parent"
                    ],
                    "parameters": {
                        "filter": {
                            "location": "query",
                            "type": "string"
                        },
                        "pageSize": {
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "pageToken": {
                            "location": "query",
                            "type": "string"
                        },
                        "parent": {
                            "location": "path",
                            "pattern": "^[^/]+/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+parent}/services",
                    "response": {
                        "$ref": "ListServicesResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                    ]
                }
            }
        }
    },
    "rootUrl": "https://serviceusage.googleapis.com/",
    "schemas": {
        "Api": {
            "id": "Api",
            "properties": {
                "methods": {
                    "items": {
                        "$ref": "Method"
                    },
                    "type": "array"
                },
                "mixins": {
                    "items": {
                        "$ref": "Mixin"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "items": {
                        "$ref": "Option"
                    },
                    "type": "array"
                },
                "sourceContext": {
                    "$ref": "SourceContext"
                },
                "syntax": {
                    "enum": [
                        "SYNTAX_PROTO2",
                        "SYNTAX_PROTO3"
                    ],
                    "enumDescriptions": [
                        "Syntax `proto2`.",
                        "Syntax `proto3`."
                    ],
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthProvider": {
            "id": "AuthProvider",
            "properties": {
                "audiences": {
                    "type": "string"
                },
                "authorizationUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "jwksUri": {
                    "type": "string"
                },
                "jwtLocations": {
                    "items": {
                        "$ref": "JwtLocation"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthRequirement": {
            "id": "AuthRequirement",
            "properties": {
                "audiences": {
                    "type": "string"
                },
                "providerId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Authentication": {
            "id": "Authentication",
            "properties": {
                "providers": {
                    "items": {
                        "$ref": "AuthProvider"
                    },
                    "type": "array"
                },
                "rules": {
                    "items": {
                        "$ref": "AuthenticationRule"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthenticationRule": {
            "id": "AuthenticationRule",
            "properties": {
                "allowWithoutCredential": {
                    "type": "boolean"
                },
                "oauth": {
                    "$ref": "OAuthRequirements"
                },
                "requirements": {
                    "items": {
                        "$ref": "AuthRequirement"
                    },
                    "type": "array"
                },
                "selector": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Backend": {
            "id": "Backend",
            "properties": {
                "rules": {
                    "items": {
                        "$ref": "BackendRule"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BackendRule": {
            "id": "BackendRule",
            "properties": {
                "address": {
                    "type": "string"
                },
                "deadline": {
                    "format": "double",
                    "type": "number"
                },
                "disableAuth": {
                    "type": "boolean"
                },
                "jwtAudience": {
                    "type": "string"
                },
                "minDeadline": {
                    "format": "double",
                    "type": "number"
                },
                "operationDeadline": {
                    "format": "double",
                    "type": "number"
                },
                "pathTranslation": {
                    "enum": [
                        "PATH_TRANSLATION_UNSPECIFIED",
                        "CONSTANT_ADDRESS",
                        "APPEND_PATH_TO_ADDRESS"
                    ],
                    "enumDescriptions": [
                        "",
                        "Use the backend address as-is, with no modification to the path. If the\nURL pattern contains variables, the variable names and values will be\nappended to the query string. If a query string parameter and a URL\npattern variable have the same name, this may result in duplicate keys in\nthe query string.\n\n# Examples\n\nGiven the following operation config:\n\n    Method path:        /api/company/{cid}/user/{uid}\n    Backend address:    https://example.cloudfunctions.net/getUser\n\nRequests to the following request paths will call the backend at the\ntranslated path:\n\n    Request path: /api/company/widgetworks/user/johndoe\n    Translated:\n    https://example.cloudfunctions.net/getUser?cid=widgetworks&uid=johndoe\n\n    Request path: /api/company/widgetworks/user/johndoe?timezone=EST\n    Translated:\n    https://example.cloudfunctions.net/getUser?timezone=EST&cid=widgetworks&uid=johndoe",
                        "The request path will be appended to the backend address.\n\n# Examples\n\nGiven the following operation config:\n\n    Method path:        /api/company/{cid}/user/{uid}\n    Backend address:    https://example.appspot.com\n\nRequests to the following request paths will call the backend at the\ntranslated path:\n\n    Request path: /api/company/widgetworks/user/johndoe\n    Translated:\n    https://example.appspot.com/api/company/widgetworks/user/johndoe\n\n    Request path: /api/company/widgetworks/user/johndoe?timezone=EST\n    Translated:\n    https://example.appspot.com/api/company/widgetworks/user/johndoe?timezone=EST"
                    ],
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "selector": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchCreateAdminOverridesResponse": {
            "id": "BatchCreateAdminOverridesResponse",
            "properties": {
                "overrides": {
                    "items": {
                        "$ref": "QuotaOverride"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchCreateConsumerOverridesResponse": {
            "id": "BatchCreateConsumerOverridesResponse",
            "properties": {
                "overrides": {
                    "items": {
                        "$ref": "QuotaOverride"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchEnableServicesRequest": {
            "id": "BatchEnableServicesRequest",
            "properties": {
                "serviceIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchEnableServicesResponse": {
            "id": "BatchEnableServicesResponse",
            "properties": {
                "failures": {
                    "items": {
                        "$ref": "EnableFailure"
                    },
                    "type": "array"
                },
                "services": {
                    "items": {
                        "$ref": "GoogleApiServiceusageV1Service"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Billing": {
            "id": "Billing",
            "properties": {
                "consumerDestinations": {
                    "items": {
                        "$ref": "BillingDestination"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BillingDestination": {
            "id": "BillingDestination",
            "properties": {
                "metrics": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "monitoredResource": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CancelOperationRequest": {
            "id": "CancelOperationRequest",
            "properties": {},
            "type": "object"
        },
        "Context": {
            "id": "Context",
            "properties": {
                "rules": {
                    "items": {
                        "$ref": "ContextRule"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ContextRule": {
            "id": "ContextRule",
            "properties": {
                "allowedRequestExtensions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "allowedResponseExtensions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "provided": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "requested": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "selector": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Control": {
            "id": "Control",
            "properties": {
                "environment": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CustomError": {
            "id": "CustomError",
            "properties": {
                "rules": {
                    "items": {
                        "$ref": "CustomErrorRule"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CustomErrorRule": {
            "id": "CustomErrorRule",
            "properties": {
                "isErrorType": {
                    "type": "boolean"
                },
                "selector": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CustomHttpPattern": {
            "id": "CustomHttpPattern",
            "properties": {
                "kind": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DisableServiceRequest": {
            "id": "DisableServiceRequest",
            "properties": {
                "disableDependentServices": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DisableServiceResponse": {
            "id": "DisableServiceResponse",
            "properties": {
                "service": {
                    "$ref": "GoogleApiServiceusageV1Service"
                }
            },
            "type": "object"
        },
        "Documentation": {
            "id": "Documentation",
            "properties": {
                "documentationRootUrl": {
                    "type": "string"
                },
                "overview": {
                    "type": "string"
                },
                "pages": {
                    "items": {
                        "$ref": "Page"
                    },
                    "type": "array"
                },
                "rules": {
                    "items": {
                        "$ref": "DocumentationRule"
                    },
                    "type": "array"
                },
                "serviceRootUrl": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DocumentationRule": {
            "id": "DocumentationRule",
            "properties": {
                "deprecationDescription": {
                    "type": "string"
                },
                "selector": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Empty": {
            "id": "Empty",
            "properties": {},
            "type": "object"
        },
        "EnableFailure": {
            "id": "EnableFailure",
            "properties": {
                "errorMessage": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EnableServiceRequest": {
            "id": "EnableServiceRequest",
            "properties": {},
            "type": "object"
        },
        "EnableServiceResponse": {
            "id": "EnableServiceResponse",
            "properties": {
                "service": {
                    "$ref": "GoogleApiServiceusageV1Service"
                }
            },
            "type": "object"
        },
        "Endpoint": {
            "id": "Endpoint",
            "properties": {
                "aliases": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "allowCors": {
                    "type": "boolean"
                },
                "features": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Enum": {
            "id": "Enum",
            "properties": {
                "enumvalue": {
                    "items": {
                        "$ref": "EnumValue"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "items": {
                        "$ref": "Option"
                    },
                    "type": "array"
                },
                "sourceContext": {
                    "$ref": "SourceContext"
                },
                "syntax": {
                    "enum": [
                        "SYNTAX_PROTO2",
                        "SYNTAX_PROTO3"
                    ],
                    "enumDescriptions": [
                        "Syntax `proto2`.",
                        "Syntax `proto3`."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EnumValue": {
            "id": "EnumValue",
            "properties": {
                "name": {
                    "type": "string"
                },
                "number": {
                    "format": "int32",
                    "type": "integer"
                },
                "options": {
                    "items": {
                        "$ref": "Option"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Field": {
            "id": "Field",
            "properties": {
                "cardinality": {
                    "enum": [
                        "CARDINALITY_UNKNOWN",
                        "CARDINALITY_OPTIONAL",
                        "CARDINALITY_REQUIRED",
                        "CARDINALITY_REPEATED"
                    ],
                    "enumDescriptions": [
                        "For fields with unknown cardinality.",
                        "For optional fields.",
                        "For required fields. Proto2 syntax only.",
                        "For repeated fields."
                    ],
                    "type": "string"
                },
                "defaultValue": {
                    "type": "string"
                },
                "jsonName": {
                    "type": "string"
                },
                "kind": {
                    "enum": [
                        "TYPE_UNKNOWN",
                        "TYPE_DOUBLE",
                        "TYPE_FLOAT",
                        "TYPE_INT64",
                        "TYPE_UINT64",
                        "TYPE_INT32",
                        "TYPE_FIXED64",
                        "TYPE_FIXED32",
                        "TYPE_BOOL",
                        "TYPE_STRING",
                        "TYPE_GROUP",
                        "TYPE_MESSAGE",
                        "TYPE_BYTES",
                        "TYPE_UINT32",
                        "TYPE_ENUM",
                        "TYPE_SFIXED32",
                        "TYPE_SFIXED64",
                        "TYPE_SINT32",
                        "TYPE_SINT64"
                    ],
                    "enumDescriptions": [
                        "Field type unknown.",
                        "Field type double.",
                        "Field type float.",
                        "Field type int64.",
                        "Field type uint64.",
                        "Field type int32.",
                        "Field type fixed64.",
                        "Field type fixed32.",
                        "Field type bool.",
                        "Field type string.",
                        "Field type group. Proto2 syntax only, and deprecated.",
                        "Field type message.",
                        "Field type bytes.",
                        "Field type uint32.",
                        "Field type enum.",
                        "Field type sfixed32.",
                        "Field type sfixed64.",
                        "Field type sint32.",
                        "Field type sint64."
                    ],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "format": "int32",
                    "type": "integer"
                },
                "oneofIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "options": {
                    "items": {
                        "$ref": "Option"
                    },
                    "type": "array"
                },
                "packed": {
                    "type": "boolean"
                },
                "typeUrl": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetServiceIdentityResponse": {
            "id": "GetServiceIdentityResponse",
            "properties": {
                "identity": {
                    "$ref": "ServiceIdentity"
                },
                "state": {
                    "enum": [
                        "IDENTITY_STATE_UNSPECIFIED",
                        "ACTIVE"
                    ],
                    "enumDescriptions": [
                        "Default service identity state. This value is used if the state is\nomitted.",
                        "Service identity has been created and can be used."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleApiService": {
            "id": "GoogleApiService",
            "properties": {
                "apis": {
                    "items": {
                        "$ref": "Api"
                    },
                    "type": "array"
                },
                "authentication": {
                    "$ref": "Authentication"
                },
                "backend": {
                    "$ref": "Backend"
                },
                "billing": {
                    "$ref": "Billing"
                },
                "configVersion": {
                    "format": "uint32",
                    "type": "integer"
                },
                "context": {
                    "$ref": "Context"
                },
                "control": {
                    "$ref": "Control"
                },
                "customError": {
                    "$ref": "CustomError"
                },
                "documentation": {
                    "$ref": "Documentation"
                },
                "endpoints": {
                    "items": {
                        "$ref": "Endpoint"
                    },
                    "type": "array"
                },
                "enums": {
                    "items": {
                        "$ref": "Enum"
                    },
                    "type": "array"
                },
                "http": {
                    "$ref": "Http"
                },
                "id": {
                    "type": "string"
                },
                "logging": {
                    "$ref": "Logging"
                },
                "logs": {
                    "items": {
                        "$ref": "LogDescriptor"
                    },
                    "type": "array"
                },
                "metrics": {
                    "items": {
                        "$ref": "MetricDescriptor"
                    },
                    "type": "array"
                },
                "monitoredResources": {
                    "items": {
                        "$ref": "MonitoredResourceDescriptor"
                    },
                    "type": "array"
                },
                "monitoring": {
                    "$ref": "Monitoring"
                },
                "name": {
                    "type": "string"
                },
                "producerProjectId": {
                    "type": "string"
                },
                "quota": {
                    "$ref": "Quota"
                },
                "sourceInfo": {
                    "$ref": "SourceInfo"
                },
                "systemParameters": {
                    "$ref": "SystemParameters"
                },
                "systemTypes": {
                    "items": {
                        "$ref": "Type"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                },
                "types": {
                    "items": {
                        "$ref": "Type"
                    },
                    "type": "array"
                },
                "usage": {
                    "$ref": "Usage"
                }
            },
            "type": "object"
        },
        "GoogleApiServiceIdentity": {
            "id": "GoogleApiServiceIdentity",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "serviceAccountParent": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleApiServiceusageV1OperationMetadata": {
            "id": "GoogleApiServiceusageV1OperationMetadata",
            "properties": {
                "resourceNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleApiServiceusageV1Service": {
            "id": "GoogleApiServiceusageV1Service",
            "properties": {
                "config": {
                    "$ref": "GoogleApiServiceusageV1ServiceConfig"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "state": {
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "DISABLED",
                        "ENABLED"
                    ],
                    "enumDescriptions": [
                        "The default value, which indicates that the enabled state of the service\nis unspecified or not meaningful. Currently, all consumers other than\nprojects (such as folders and organizations) are always in this state.",
                        "The service cannot be used by this consumer. It has either been explicitly\ndisabled, or has never been enabled.",
                        "The service has been explicitly enabled for use by this consumer."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleApiServiceusageV1ServiceConfig": {
            "id": "GoogleApiServiceusageV1ServiceConfig",
            "properties": {
                "apis": {
                    "items": {
                        "$ref": "Api"
                    },
                    "type": "array"
                },
                "authentication": {
                    "$ref": "Authentication"
                },
                "documentation": {
                    "$ref": "Documentation"
                },
                "endpoints": {
                    "items": {
                        "$ref": "Endpoint"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "quota": {
                    "$ref": "Quota"
                },
                "title": {
                    "type": "string"
                },
                "usage": {
                    "$ref": "Usage"
                }
            },
            "type": "object"
        },
        "GoogleApiServiceusageV1beta1GetServiceIdentityResponse": {
            "id": "GoogleApiServiceusageV1beta1GetServiceIdentityResponse",
            "properties": {
                "identity": {
                    "$ref": "GoogleApiServiceusageV1beta1ServiceIdentity"
                },
                "state": {
                    "enum": [
                        "IDENTITY_STATE_UNSPECIFIED",
                        "ACTIVE"
                    ],
                    "enumDescriptions": [
                        "Default service identity state. This value is used if the state is\nomitted.",
                        "Service identity has been created and can be used."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleApiServiceusageV1beta1ServiceIdentity": {
            "id": "GoogleApiServiceusageV1beta1ServiceIdentity",
            "properties": {
                "email": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Http": {
            "id": "Http",
            "properties": {
                "fullyDecodeReservedExpansion": {
                    "type": "boolean"
                },
                "rules": {
                    "items": {
                        "$ref": "HttpRule"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "HttpRule": {
            "id": "HttpRule",
            "properties": {
                "additionalBindings": {
                    "items": {
                        "$ref": "HttpRule"
                    },
                    "type": "array"
                },
                "allowHalfDuplex": {
                    "type": "boolean"
                },
                "body": {
                    "type": "string"
                },
                "custom": {
                    "$ref": "CustomHttpPattern"
                },
                "delete": {
                    "type": "string"
                },
                "get": {
                    "type": "string"
                },
                "patch": {
                    "type": "string"
                },
                "post": {
                    "type": "string"
                },
                "put": {
                    "type": "string"
                },
                "responseBody": {
                    "type": "string"
                },
                "selector": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JwtLocation": {
            "id": "JwtLocation",
            "properties": {
                "header": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "valuePrefix": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LabelDescriptor": {
            "id": "LabelDescriptor",
            "properties": {
                "key": {
                    "type": "string"
                },
                "valueType": {
                    "enum": [
                        "STRING",
                        "BOOL",
                        "INT64"
                    ],
                    "enumDescriptions": [
                        "A variable-length string. This is the default.",
                        "Boolean; true or false.",
                        "A 64-bit signed integer."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListOperationsResponse": {
            "id": "ListOperationsResponse",
            "properties": {
                "nextPageToken": {
                    "type": "string"
                },
                "operations": {
                    "items": {
                        "$ref": "Operation"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListServicesResponse": {
            "id": "ListServicesResponse",
            "properties": {
                "nextPageToken": {
                    "type": "string"
                },
                "services": {
                    "items": {
                        "$ref": "GoogleApiServiceusageV1Service"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LogDescriptor": {
            "id": "LogDescriptor",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "labels": {
                    "items": {
                        "$ref": "LabelDescriptor"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Logging": {
            "id": "Logging",
            "properties": {
                "consumerDestinations": {
                    "items": {
                        "$ref": "LoggingDestination"
                    },
                    "type": "array"
                },
                "producerDestinations": {
                    "items": {
                        "$ref": "LoggingDestination"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoggingDestination": {
            "id": "LoggingDestination",
            "properties": {
                "logs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "monitoredResource": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Method": {
            "id": "Method",
            "properties": {
                "name": {
                    "type": "string"
                },
                "options": {
                    "items": {
                        "$ref": "Option"
                    },
                    "type": "array"
                },
                "requestStreaming": {
                    "type": "boolean"
                },
                "requestTypeUrl": {
                    "type": "string"
                },
                "responseStreaming": {
                    "type": "boolean"
                },
                "responseTypeUrl": {
                    "type": "string"
                },
                "syntax": {
                    "enum": [
                        "SYNTAX_PROTO2",
                        "SYNTAX_PROTO3"
                    ],
                    "enumDescriptions": [
                        "Syntax `proto2`.",
                        "Syntax `proto3`."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MetricDescriptor": {
            "id": "MetricDescriptor",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "labels": {
                    "items": {
                        "$ref": "LabelDescriptor"
                    },
                    "type": "array"
                },
                "launchStage": {
                    "enum": [
                        "LAUNCH_STAGE_UNSPECIFIED",
                        "EARLY_ACCESS",
                        "ALPHA",
                        "BETA",
                        "GA",
                        "DEPRECATED"
                    ],
                    "enumDescriptions": [
                        "Do not use this default value.",
                        "Early Access features are limited to a closed group of testers. To use\nthese features, you must sign up in advance and sign a Trusted Tester\nagreement (which includes confidentiality provisions). These features may\nbe unstable, changed in backward-incompatible ways, and are not\nguaranteed to be released.",
                        "Alpha is a limited availability test for releases before they are cleared\nfor widespread use. By Alpha, all significant design issues are resolved\nand we are in the process of verifying functionality. Alpha customers\nneed to apply for access, agree to applicable terms, and have their\nprojects whitelisted. Alpha releases don\u2019t have to be feature complete,\nno SLAs are provided, and there are no technical support obligations, but\nthey will be far enough along that customers can actually use them in\ntest environments or for limited-use tests -- just like they would in\nnormal production cases.",
                        "Beta is the point at which we are ready to open a release for any\ncustomer to use. There are no SLA or technical support obligations in a\nBeta release. Products will be complete from a feature perspective, but\nmay have some open outstanding issues. Beta releases are suitable for\nlimited production use cases.",
                        "GA features are open to all developers and are considered stable and\nfully qualified for production use.",
                        "Deprecated features are scheduled to be shut down and removed. For more\ninformation, see the \u201cDeprecation Policy\u201d section of our [Terms of\nService](https://cloud.google.com/terms/)\nand the [Google Cloud Platform Subject to the Deprecation\nPolicy](https://cloud.google.com/terms/deprecation) documentation."
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "MetricDescriptorMetadata"
                },
                "metricKind": {
                    "enum": [
                        "METRIC_KIND_UNSPECIFIED",
                        "GAUGE",
                        "DELTA",
                        "CUMULATIVE"
                    ],
                    "enumDescriptions": [
                        "Do not use this default value.",
                        "An instantaneous measurement of a value.",
                        "The change in a value during a time interval.",
                        "A value accumulated over a time interval.  Cumulative\nmeasurements in a time series should have the same start time\nand increasing end times, until an event resets the cumulative\nvalue to zero and sets a new start time for the following\npoints."
                    ],
                    "type": "string"
                },
                "monitoredResourceTypes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                },
                "valueType": {
                    "enum": [
                        "VALUE_TYPE_UNSPECIFIED",
                        "BOOL",
                        "INT64",
                        "DOUBLE",
                        "STRING",
                        "DISTRIBUTION",
                        "MONEY"
                    ],
                    "enumDescriptions": [
                        "Do not use this default value.",
                        "The value is a boolean.\nThis value type can be used only if the metric kind is `GAUGE`.",
                        "The value is a signed 64-bit integer.",
                        "The value is a double precision floating point number.",
                        "The value is a text string.\nThis value type can be used only if the metric kind is `GAUGE`.",
                        "The value is a `Distribution`.",
                        "The value is money."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MetricDescriptorMetadata": {
            "id": "MetricDescriptorMetadata",
            "properties": {
                "ingestDelay": {
                    "format": "google-duration",
                    "type": "string"
                },
                "launchStage": {
                    "enum": [
                        "LAUNCH_STAGE_UNSPECIFIED",
                        "EARLY_ACCESS",
                        "ALPHA",
                        "BETA",
                        "GA",
                        "DEPRECATED"
                    ],
                    "enumDescriptions": [
                        "Do not use this default value.",
                        "Early Access features are limited to a closed group of testers. To use\nthese features, you must sign up in advance and sign a Trusted Tester\nagreement (which includes confidentiality provisions). These features may\nbe unstable, changed in backward-incompatible ways, and are not\nguaranteed to be released.",
                        "Alpha is a limited availability test for releases before they are cleared\nfor widespread use. By Alpha, all significant design issues are resolved\nand we are in the process of verifying functionality. Alpha customers\nneed to apply for access, agree to applicable terms, and have their\nprojects whitelisted. Alpha releases don\u2019t have to be feature complete,\nno SLAs are provided, and there are no technical support obligations, but\nthey will be far enough along that customers can actually use them in\ntest environments or for limited-use tests -- just like they would in\nnormal production cases.",
                        "Beta is the point at which we are ready to open a release for any\ncustomer to use. There are no SLA or technical support obligations in a\nBeta release. Products will be complete from a feature perspective, but\nmay have some open outstanding issues. Beta releases are suitable for\nlimited production use cases.",
                        "GA features are open to all developers and are considered stable and\nfully qualified for production use.",
                        "Deprecated features are scheduled to be shut down and removed. For more\ninformation, see the \u201cDeprecation Policy\u201d section of our [Terms of\nService](https://cloud.google.com/terms/)\nand the [Google Cloud Platform Subject to the Deprecation\nPolicy](https://cloud.google.com/terms/deprecation) documentation."
                    ],
                    "type": "string"
                },
                "samplePeriod": {
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MetricRule": {
            "id": "MetricRule",
            "properties": {
                "metricCosts": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "object"
                },
                "selector": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Mixin": {
            "id": "Mixin",
            "properties": {
                "name": {
                    "type": "string"
                },
                "root": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MonitoredResourceDescriptor": {
            "id": "MonitoredResourceDescriptor",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "labels": {
                    "items": {
                        "$ref": "LabelDescriptor"
                    },
                    "type": "array"
                },
                "launchStage": {
                    "enum": [
                        "LAUNCH_STAGE_UNSPECIFIED",
                        "EARLY_ACCESS",
                        "ALPHA",
                        "BETA",
                        "GA",
                        "DEPRECATED"
                    ],
                    "enumDescriptions": [
                        "Do not use this default value.",
                        "Early Access features are limited to a closed group of testers. To use\nthese features, you must sign up in advance and sign a Trusted Tester\nagreement (which includes confidentiality provisions). These features may\nbe unstable, changed in backward-incompatible ways, and are not\nguaranteed to be released.",
                        "Alpha is a limited availability test for releases before they are cleared\nfor widespread use. By Alpha, all significant design issues are resolved\nand we are in the process of verifying functionality. Alpha customers\nneed to apply for access, agree to applicable terms, and have their\nprojects whitelisted. Alpha releases don\u2019t have to be feature complete,\nno SLAs are provided, and there are no technical support obligations, but\nthey will be far enough along that customers can actually use them in\ntest environments or for limited-use tests -- just like they would in\nnormal production cases.",
                        "Beta is the point at which we are ready to open a release for any\ncustomer to use. There are no SLA or technical support obligations in a\nBeta release. Products will be complete from a feature perspective, but\nmay have some open outstanding issues. Beta releases are suitable for\nlimited production use cases.",
                        "GA features are open to all developers and are considered stable and\nfully qualified for production use.",
                        "Deprecated features are scheduled to be shut down and removed. For more\ninformation, see the \u201cDeprecation Policy\u201d section of our [Terms of\nService](https://cloud.google.com/terms/)\nand the [Google Cloud Platform Subject to the Deprecation\nPolicy](https://cloud.google.com/terms/deprecation) documentation."
                    ],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Monitoring": {
            "id": "Monitoring",
            "properties": {
                "consumerDestinations": {
                    "items": {
                        "$ref": "MonitoringDestination"
                    },
                    "type": "array"
                },
                "producerDestinations": {
                    "items": {
                        "$ref": "MonitoringDestination"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MonitoringDestination": {
            "id": "MonitoringDestination",
            "properties": {
                "metrics": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "monitoredResource": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OAuthRequirements": {
            "id": "OAuthRequirements",
            "properties": {
                "canonicalScopes": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Operation": {
            "id": "Operation",
            "properties": {
                "done": {
                    "type": "boolean"
                },
                "error": {
                    "$ref": "Status"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "response": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "OperationMetadata": {
            "id": "OperationMetadata",
            "properties": {
                "resourceNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Option": {
            "id": "Option",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "additionalProperties": {
                        "type": "any"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Page": {
            "id": "Page",
            "properties": {
                "content": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "subpages": {
                    "items": {
                        "$ref": "Page"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Quota": {
            "id": "Quota",
            "properties": {
                "limits": {
                    "items": {
                        "$ref": "QuotaLimit"
                    },
                    "type": "array"
                },
                "metricRules": {
                    "items": {
                        "$ref": "MetricRule"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "QuotaLimit": {
            "id": "QuotaLimit",
            "properties": {
                "defaultLimit": {
                    "format": "int64",
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "freeTier": {
                    "format": "int64",
                    "type": "string"
                },
                "maxLimit": {
                    "format": "int64",
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                },
                "values": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "QuotaOverride": {
            "id": "QuotaOverride",
            "properties": {
                "dimensions": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "overrideValue": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ServiceIdentity": {
            "id": "ServiceIdentity",
            "properties": {
                "email": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SourceContext": {
            "id": "SourceContext",
            "properties": {
                "fileName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SourceInfo": {
            "id": "SourceInfo",
            "properties": {
                "sourceFiles": {
                    "items": {
                        "additionalProperties": {
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Status": {
            "id": "Status",
            "properties": {
                "code": {
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "items": {
                        "additionalProperties": {
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SystemParameter": {
            "id": "SystemParameter",
            "properties": {
                "httpHeader": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "urlQueryParameter": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SystemParameterRule": {
            "id": "SystemParameterRule",
            "properties": {
                "parameters": {
                    "items": {
                        "$ref": "SystemParameter"
                    },
                    "type": "array"
                },
                "selector": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SystemParameters": {
            "id": "SystemParameters",
            "properties": {
                "rules": {
                    "items": {
                        "$ref": "SystemParameterRule"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Type": {
            "id": "Type",
            "properties": {
                "fields": {
                    "items": {
                        "$ref": "Field"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "oneofs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "options": {
                    "items": {
                        "$ref": "Option"
                    },
                    "type": "array"
                },
                "sourceContext": {
                    "$ref": "SourceContext"
                },
                "syntax": {
                    "enum": [
                        "SYNTAX_PROTO2",
                        "SYNTAX_PROTO3"
                    ],
                    "enumDescriptions": [
                        "Syntax `proto2`.",
                        "Syntax `proto3`."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Usage": {
            "id": "Usage",
            "properties": {
                "producerNotificationChannel": {
                    "type": "string"
                },
                "requirements": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rules": {
                    "items": {
                        "$ref": "UsageRule"
                    },
                    "type": "array"
                },
                "serviceIdentity": {
                    "$ref": "GoogleApiServiceIdentity"
                }
            },
            "type": "object"
        },
        "UsageRule": {
            "id": "UsageRule",
            "properties": {
                "allowUnregisteredCalls": {
                    "type": "boolean"
                },
                "selector": {
                    "type": "string"
                },
                "skipServiceControl": {
                    "type": "boolean"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Service Usage API",
    "version": "v1",
    "version_module": true
}