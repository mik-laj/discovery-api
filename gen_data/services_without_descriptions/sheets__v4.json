{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/drive": {},
                "https://www.googleapis.com/auth/drive.file": {},
                "https://www.googleapis.com/auth/drive.readonly": {},
                "https://www.googleapis.com/auth/spreadsheets": {},
                "https://www.googleapis.com/auth/spreadsheets.readonly": {}
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://sheets.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Sheets",
    "discoveryVersion": "v1",
    "documentationLink": "https://developers.google.com/sheets/",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "sheets:v4",
    "kind": "discovery#restDescription",
    "mtlsRootUrl": "https://sheets.mtls.googleapis.com/",
    "name": "sheets",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "location": "query",
            "type": "string"
        },
        "fields": {
            "location": "query",
            "type": "string"
        },
        "key": {
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "spreadsheets": {
            "methods": {
                "batchUpdate": {
                    "flatPath": "v4/spreadsheets/{spreadsheetId}:batchUpdate",
                    "httpMethod": "POST",
                    "id": "sheets.spreadsheets.batchUpdate",
                    "parameterOrder": [
                        "spreadsheetId"
                    ],
                    "parameters": {
                        "spreadsheetId": {
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v4/spreadsheets/{spreadsheetId}:batchUpdate",
                    "request": {
                        "$ref": "BatchUpdateSpreadsheetRequest"
                    },
                    "response": {
                        "$ref": "BatchUpdateSpreadsheetResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/drive",
                        "https://www.googleapis.com/auth/drive.file",
                        "https://www.googleapis.com/auth/spreadsheets"
                    ]
                },
                "create": {
                    "flatPath": "v4/spreadsheets",
                    "httpMethod": "POST",
                    "id": "sheets.spreadsheets.create",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v4/spreadsheets",
                    "request": {
                        "$ref": "Spreadsheet"
                    },
                    "response": {
                        "$ref": "Spreadsheet"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/drive",
                        "https://www.googleapis.com/auth/drive.file",
                        "https://www.googleapis.com/auth/spreadsheets"
                    ]
                },
                "get": {
                    "flatPath": "v4/spreadsheets/{spreadsheetId}",
                    "httpMethod": "GET",
                    "id": "sheets.spreadsheets.get",
                    "parameterOrder": [
                        "spreadsheetId"
                    ],
                    "parameters": {
                        "includeGridData": {
                            "location": "query",
                            "type": "boolean"
                        },
                        "ranges": {
                            "location": "query",
                            "repeated": true,
                            "type": "string"
                        },
                        "spreadsheetId": {
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v4/spreadsheets/{spreadsheetId}",
                    "response": {
                        "$ref": "Spreadsheet"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/drive",
                        "https://www.googleapis.com/auth/drive.file",
                        "https://www.googleapis.com/auth/drive.readonly",
                        "https://www.googleapis.com/auth/spreadsheets",
                        "https://www.googleapis.com/auth/spreadsheets.readonly"
                    ]
                },
                "getByDataFilter": {
                    "flatPath": "v4/spreadsheets/{spreadsheetId}:getByDataFilter",
                    "httpMethod": "POST",
                    "id": "sheets.spreadsheets.getByDataFilter",
                    "parameterOrder": [
                        "spreadsheetId"
                    ],
                    "parameters": {
                        "spreadsheetId": {
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v4/spreadsheets/{spreadsheetId}:getByDataFilter",
                    "request": {
                        "$ref": "GetSpreadsheetByDataFilterRequest"
                    },
                    "response": {
                        "$ref": "Spreadsheet"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/drive",
                        "https://www.googleapis.com/auth/drive.file",
                        "https://www.googleapis.com/auth/spreadsheets"
                    ]
                }
            },
            "resources": {
                "developerMetadata": {
                    "methods": {
                        "get": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/developerMetadata/{metadataId}",
                            "httpMethod": "GET",
                            "id": "sheets.spreadsheets.developerMetadata.get",
                            "parameterOrder": [
                                "spreadsheetId",
                                "metadataId"
                            ],
                            "parameters": {
                                "metadataId": {
                                    "format": "int32",
                                    "location": "path",
                                    "required": true,
                                    "type": "integer"
                                },
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/developerMetadata/{metadataId}",
                            "response": {
                                "$ref": "DeveloperMetadata"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/spreadsheets"
                            ]
                        },
                        "search": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/developerMetadata:search",
                            "httpMethod": "POST",
                            "id": "sheets.spreadsheets.developerMetadata.search",
                            "parameterOrder": [
                                "spreadsheetId"
                            ],
                            "parameters": {
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/developerMetadata:search",
                            "request": {
                                "$ref": "SearchDeveloperMetadataRequest"
                            },
                            "response": {
                                "$ref": "SearchDeveloperMetadataResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/spreadsheets"
                            ]
                        }
                    }
                },
                "sheets": {
                    "methods": {
                        "copyTo": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/sheets/{sheetId}:copyTo",
                            "httpMethod": "POST",
                            "id": "sheets.spreadsheets.sheets.copyTo",
                            "parameterOrder": [
                                "spreadsheetId",
                                "sheetId"
                            ],
                            "parameters": {
                                "sheetId": {
                                    "format": "int32",
                                    "location": "path",
                                    "required": true,
                                    "type": "integer"
                                },
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/sheets/{sheetId}:copyTo",
                            "request": {
                                "$ref": "CopySheetToAnotherSpreadsheetRequest"
                            },
                            "response": {
                                "$ref": "SheetProperties"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/spreadsheets"
                            ]
                        }
                    }
                },
                "values": {
                    "methods": {
                        "append": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/values/{range}:append",
                            "httpMethod": "POST",
                            "id": "sheets.spreadsheets.values.append",
                            "parameterOrder": [
                                "spreadsheetId",
                                "range"
                            ],
                            "parameters": {
                                "includeValuesInResponse": {
                                    "location": "query",
                                    "type": "boolean"
                                },
                                "insertDataOption": {
                                    "enum": [
                                        "OVERWRITE",
                                        "INSERT_ROWS"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "range": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "responseDateTimeRenderOption": {
                                    "enum": [
                                        "SERIAL_NUMBER",
                                        "FORMATTED_STRING"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "responseValueRenderOption": {
                                    "enum": [
                                        "FORMATTED_VALUE",
                                        "UNFORMATTED_VALUE",
                                        "FORMULA"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "valueInputOption": {
                                    "enum": [
                                        "INPUT_VALUE_OPTION_UNSPECIFIED",
                                        "RAW",
                                        "USER_ENTERED"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/values/{range}:append",
                            "request": {
                                "$ref": "ValueRange"
                            },
                            "response": {
                                "$ref": "AppendValuesResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/spreadsheets"
                            ]
                        },
                        "batchClear": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/values:batchClear",
                            "httpMethod": "POST",
                            "id": "sheets.spreadsheets.values.batchClear",
                            "parameterOrder": [
                                "spreadsheetId"
                            ],
                            "parameters": {
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/values:batchClear",
                            "request": {
                                "$ref": "BatchClearValuesRequest"
                            },
                            "response": {
                                "$ref": "BatchClearValuesResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/spreadsheets"
                            ]
                        },
                        "batchClearByDataFilter": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/values:batchClearByDataFilter",
                            "httpMethod": "POST",
                            "id": "sheets.spreadsheets.values.batchClearByDataFilter",
                            "parameterOrder": [
                                "spreadsheetId"
                            ],
                            "parameters": {
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/values:batchClearByDataFilter",
                            "request": {
                                "$ref": "BatchClearValuesByDataFilterRequest"
                            },
                            "response": {
                                "$ref": "BatchClearValuesByDataFilterResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/spreadsheets"
                            ]
                        },
                        "batchGet": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/values:batchGet",
                            "httpMethod": "GET",
                            "id": "sheets.spreadsheets.values.batchGet",
                            "parameterOrder": [
                                "spreadsheetId"
                            ],
                            "parameters": {
                                "dateTimeRenderOption": {
                                    "enum": [
                                        "SERIAL_NUMBER",
                                        "FORMATTED_STRING"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "majorDimension": {
                                    "enum": [
                                        "DIMENSION_UNSPECIFIED",
                                        "ROWS",
                                        "COLUMNS"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "ranges": {
                                    "location": "query",
                                    "repeated": true,
                                    "type": "string"
                                },
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "valueRenderOption": {
                                    "enum": [
                                        "FORMATTED_VALUE",
                                        "UNFORMATTED_VALUE",
                                        "FORMULA"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/values:batchGet",
                            "response": {
                                "$ref": "BatchGetValuesResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/drive.readonly",
                                "https://www.googleapis.com/auth/spreadsheets",
                                "https://www.googleapis.com/auth/spreadsheets.readonly"
                            ]
                        },
                        "batchGetByDataFilter": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/values:batchGetByDataFilter",
                            "httpMethod": "POST",
                            "id": "sheets.spreadsheets.values.batchGetByDataFilter",
                            "parameterOrder": [
                                "spreadsheetId"
                            ],
                            "parameters": {
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/values:batchGetByDataFilter",
                            "request": {
                                "$ref": "BatchGetValuesByDataFilterRequest"
                            },
                            "response": {
                                "$ref": "BatchGetValuesByDataFilterResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/spreadsheets"
                            ]
                        },
                        "batchUpdate": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/values:batchUpdate",
                            "httpMethod": "POST",
                            "id": "sheets.spreadsheets.values.batchUpdate",
                            "parameterOrder": [
                                "spreadsheetId"
                            ],
                            "parameters": {
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/values:batchUpdate",
                            "request": {
                                "$ref": "BatchUpdateValuesRequest"
                            },
                            "response": {
                                "$ref": "BatchUpdateValuesResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/spreadsheets"
                            ]
                        },
                        "batchUpdateByDataFilter": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/values:batchUpdateByDataFilter",
                            "httpMethod": "POST",
                            "id": "sheets.spreadsheets.values.batchUpdateByDataFilter",
                            "parameterOrder": [
                                "spreadsheetId"
                            ],
                            "parameters": {
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/values:batchUpdateByDataFilter",
                            "request": {
                                "$ref": "BatchUpdateValuesByDataFilterRequest"
                            },
                            "response": {
                                "$ref": "BatchUpdateValuesByDataFilterResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/spreadsheets"
                            ]
                        },
                        "clear": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/values/{range}:clear",
                            "httpMethod": "POST",
                            "id": "sheets.spreadsheets.values.clear",
                            "parameterOrder": [
                                "spreadsheetId",
                                "range"
                            ],
                            "parameters": {
                                "range": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/values/{range}:clear",
                            "request": {
                                "$ref": "ClearValuesRequest"
                            },
                            "response": {
                                "$ref": "ClearValuesResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/spreadsheets"
                            ]
                        },
                        "get": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/values/{range}",
                            "httpMethod": "GET",
                            "id": "sheets.spreadsheets.values.get",
                            "parameterOrder": [
                                "spreadsheetId",
                                "range"
                            ],
                            "parameters": {
                                "dateTimeRenderOption": {
                                    "enum": [
                                        "SERIAL_NUMBER",
                                        "FORMATTED_STRING"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "majorDimension": {
                                    "enum": [
                                        "DIMENSION_UNSPECIFIED",
                                        "ROWS",
                                        "COLUMNS"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "range": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "valueRenderOption": {
                                    "enum": [
                                        "FORMATTED_VALUE",
                                        "UNFORMATTED_VALUE",
                                        "FORMULA"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/values/{range}",
                            "response": {
                                "$ref": "ValueRange"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/drive.readonly",
                                "https://www.googleapis.com/auth/spreadsheets",
                                "https://www.googleapis.com/auth/spreadsheets.readonly"
                            ]
                        },
                        "update": {
                            "flatPath": "v4/spreadsheets/{spreadsheetId}/values/{range}",
                            "httpMethod": "PUT",
                            "id": "sheets.spreadsheets.values.update",
                            "parameterOrder": [
                                "spreadsheetId",
                                "range"
                            ],
                            "parameters": {
                                "includeValuesInResponse": {
                                    "location": "query",
                                    "type": "boolean"
                                },
                                "range": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "responseDateTimeRenderOption": {
                                    "enum": [
                                        "SERIAL_NUMBER",
                                        "FORMATTED_STRING"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "responseValueRenderOption": {
                                    "enum": [
                                        "FORMATTED_VALUE",
                                        "UNFORMATTED_VALUE",
                                        "FORMULA"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "spreadsheetId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "valueInputOption": {
                                    "enum": [
                                        "INPUT_VALUE_OPTION_UNSPECIFIED",
                                        "RAW",
                                        "USER_ENTERED"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v4/spreadsheets/{spreadsheetId}/values/{range}",
                            "request": {
                                "$ref": "ValueRange"
                            },
                            "response": {
                                "$ref": "UpdateValuesResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/spreadsheets"
                            ]
                        }
                    }
                }
            }
        }
    },
    "rootUrl": "https://sheets.googleapis.com/",
    "schemas": {
        "AddBandingRequest": {
            "id": "AddBandingRequest",
            "properties": {
                "bandedRange": {
                    "$ref": "BandedRange"
                }
            },
            "type": "object"
        },
        "AddBandingResponse": {
            "id": "AddBandingResponse",
            "properties": {
                "bandedRange": {
                    "$ref": "BandedRange"
                }
            },
            "type": "object"
        },
        "AddChartRequest": {
            "id": "AddChartRequest",
            "properties": {
                "chart": {
                    "$ref": "EmbeddedChart"
                }
            },
            "type": "object"
        },
        "AddChartResponse": {
            "id": "AddChartResponse",
            "properties": {
                "chart": {
                    "$ref": "EmbeddedChart"
                }
            },
            "type": "object"
        },
        "AddConditionalFormatRuleRequest": {
            "id": "AddConditionalFormatRuleRequest",
            "properties": {
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "rule": {
                    "$ref": "ConditionalFormatRule"
                }
            },
            "type": "object"
        },
        "AddDimensionGroupRequest": {
            "id": "AddDimensionGroupRequest",
            "properties": {
                "range": {
                    "$ref": "DimensionRange"
                }
            },
            "type": "object"
        },
        "AddDimensionGroupResponse": {
            "id": "AddDimensionGroupResponse",
            "properties": {
                "dimensionGroups": {
                    "items": {
                        "$ref": "DimensionGroup"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AddFilterViewRequest": {
            "id": "AddFilterViewRequest",
            "properties": {
                "filter": {
                    "$ref": "FilterView"
                }
            },
            "type": "object"
        },
        "AddFilterViewResponse": {
            "id": "AddFilterViewResponse",
            "properties": {
                "filter": {
                    "$ref": "FilterView"
                }
            },
            "type": "object"
        },
        "AddNamedRangeRequest": {
            "id": "AddNamedRangeRequest",
            "properties": {
                "namedRange": {
                    "$ref": "NamedRange"
                }
            },
            "type": "object"
        },
        "AddNamedRangeResponse": {
            "id": "AddNamedRangeResponse",
            "properties": {
                "namedRange": {
                    "$ref": "NamedRange"
                }
            },
            "type": "object"
        },
        "AddProtectedRangeRequest": {
            "id": "AddProtectedRangeRequest",
            "properties": {
                "protectedRange": {
                    "$ref": "ProtectedRange"
                }
            },
            "type": "object"
        },
        "AddProtectedRangeResponse": {
            "id": "AddProtectedRangeResponse",
            "properties": {
                "protectedRange": {
                    "$ref": "ProtectedRange"
                }
            },
            "type": "object"
        },
        "AddSheetRequest": {
            "id": "AddSheetRequest",
            "properties": {
                "properties": {
                    "$ref": "SheetProperties"
                }
            },
            "type": "object"
        },
        "AddSheetResponse": {
            "id": "AddSheetResponse",
            "properties": {
                "properties": {
                    "$ref": "SheetProperties"
                }
            },
            "type": "object"
        },
        "AddSlicerRequest": {
            "id": "AddSlicerRequest",
            "properties": {
                "slicer": {
                    "$ref": "Slicer"
                }
            },
            "type": "object"
        },
        "AddSlicerResponse": {
            "id": "AddSlicerResponse",
            "properties": {
                "slicer": {
                    "$ref": "Slicer"
                }
            },
            "type": "object"
        },
        "AppendCellsRequest": {
            "id": "AppendCellsRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "rows": {
                    "items": {
                        "$ref": "RowData"
                    },
                    "type": "array"
                },
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AppendDimensionRequest": {
            "id": "AppendDimensionRequest",
            "properties": {
                "dimension": {
                    "enum": [
                        "DIMENSION_UNSPECIFIED",
                        "ROWS",
                        "COLUMNS"
                    ],
                    "enumDescriptions": [
                        "The default value, do not use.",
                        "Operates on the rows of a sheet.",
                        "Operates on the columns of a sheet."
                    ],
                    "type": "string"
                },
                "length": {
                    "format": "int32",
                    "type": "integer"
                },
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AppendValuesResponse": {
            "id": "AppendValuesResponse",
            "properties": {
                "spreadsheetId": {
                    "type": "string"
                },
                "tableRange": {
                    "type": "string"
                },
                "updates": {
                    "$ref": "UpdateValuesResponse"
                }
            },
            "type": "object"
        },
        "AutoFillRequest": {
            "id": "AutoFillRequest",
            "properties": {
                "range": {
                    "$ref": "GridRange"
                },
                "sourceAndDestination": {
                    "$ref": "SourceAndDestination"
                },
                "useAlternateSeries": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "AutoResizeDimensionsRequest": {
            "id": "AutoResizeDimensionsRequest",
            "properties": {
                "dimensions": {
                    "$ref": "DimensionRange"
                }
            },
            "type": "object"
        },
        "BandedRange": {
            "id": "BandedRange",
            "properties": {
                "bandedRangeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "columnProperties": {
                    "$ref": "BandingProperties"
                },
                "range": {
                    "$ref": "GridRange"
                },
                "rowProperties": {
                    "$ref": "BandingProperties"
                }
            },
            "type": "object"
        },
        "BandingProperties": {
            "id": "BandingProperties",
            "properties": {
                "firstBandColor": {
                    "$ref": "Color"
                },
                "firstBandColorStyle": {
                    "$ref": "ColorStyle"
                },
                "footerColor": {
                    "$ref": "Color"
                },
                "footerColorStyle": {
                    "$ref": "ColorStyle"
                },
                "headerColor": {
                    "$ref": "Color"
                },
                "headerColorStyle": {
                    "$ref": "ColorStyle"
                },
                "secondBandColor": {
                    "$ref": "Color"
                },
                "secondBandColorStyle": {
                    "$ref": "ColorStyle"
                }
            },
            "type": "object"
        },
        "BaselineValueFormat": {
            "id": "BaselineValueFormat",
            "properties": {
                "comparisonType": {
                    "enum": [
                        "COMPARISON_TYPE_UNDEFINED",
                        "ABSOLUTE_DIFFERENCE",
                        "PERCENTAGE_DIFFERENCE"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "Use absolute difference between key and baseline value.",
                        "Use percentage difference between key and baseline value."
                    ],
                    "type": "string"
                },
                "negativeColor": {
                    "$ref": "Color"
                },
                "negativeColorStyle": {
                    "$ref": "ColorStyle"
                },
                "position": {
                    "$ref": "TextPosition"
                },
                "positiveColor": {
                    "$ref": "Color"
                },
                "positiveColorStyle": {
                    "$ref": "ColorStyle"
                },
                "textFormat": {
                    "$ref": "TextFormat"
                }
            },
            "type": "object"
        },
        "BasicChartAxis": {
            "id": "BasicChartAxis",
            "properties": {
                "format": {
                    "$ref": "TextFormat"
                },
                "position": {
                    "enum": [
                        "BASIC_CHART_AXIS_POSITION_UNSPECIFIED",
                        "BOTTOM_AXIS",
                        "LEFT_AXIS",
                        "RIGHT_AXIS"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "The axis rendered at the bottom of a chart.\nFor most charts, this is the standard major axis.\nFor bar charts, this is a minor axis.",
                        "The axis rendered at the left of a chart.\nFor most charts, this is a minor axis.\nFor bar charts, this is the standard major axis.",
                        "The axis rendered at the right of a chart.\nFor most charts, this is a minor axis.\nFor bar charts, this is an unusual major axis."
                    ],
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "titleTextPosition": {
                    "$ref": "TextPosition"
                },
                "viewWindowOptions": {
                    "$ref": "ChartAxisViewWindowOptions"
                }
            },
            "type": "object"
        },
        "BasicChartDomain": {
            "id": "BasicChartDomain",
            "properties": {
                "domain": {
                    "$ref": "ChartData"
                },
                "reversed": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "BasicChartSeries": {
            "id": "BasicChartSeries",
            "properties": {
                "color": {
                    "$ref": "Color"
                },
                "colorStyle": {
                    "$ref": "ColorStyle"
                },
                "lineStyle": {
                    "$ref": "LineStyle"
                },
                "series": {
                    "$ref": "ChartData"
                },
                "targetAxis": {
                    "enum": [
                        "BASIC_CHART_AXIS_POSITION_UNSPECIFIED",
                        "BOTTOM_AXIS",
                        "LEFT_AXIS",
                        "RIGHT_AXIS"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "The axis rendered at the bottom of a chart.\nFor most charts, this is the standard major axis.\nFor bar charts, this is a minor axis.",
                        "The axis rendered at the left of a chart.\nFor most charts, this is a minor axis.\nFor bar charts, this is the standard major axis.",
                        "The axis rendered at the right of a chart.\nFor most charts, this is a minor axis.\nFor bar charts, this is an unusual major axis."
                    ],
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "BASIC_CHART_TYPE_UNSPECIFIED",
                        "BAR",
                        "LINE",
                        "AREA",
                        "COLUMN",
                        "SCATTER",
                        "COMBO",
                        "STEPPED_AREA"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "A <a href=\"/chart/interactive/docs/gallery/barchart\">bar chart</a>.",
                        "A <a href=\"/chart/interactive/docs/gallery/linechart\">line chart</a>.",
                        "An <a href=\"/chart/interactive/docs/gallery/areachart\">area chart</a>.",
                        "A <a href=\"/chart/interactive/docs/gallery/columnchart\">column chart</a>.",
                        "A <a href=\"/chart/interactive/docs/gallery/scatterchart\">scatter\nchart</a>.",
                        "A <a href=\"/chart/interactive/docs/gallery/combochart\">combo chart</a>.",
                        "A <a href=\"/chart/interactive/docs/gallery/steppedareachart\">stepped area\nchart</a>."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BasicChartSpec": {
            "id": "BasicChartSpec",
            "properties": {
                "axis": {
                    "items": {
                        "$ref": "BasicChartAxis"
                    },
                    "type": "array"
                },
                "chartType": {
                    "enum": [
                        "BASIC_CHART_TYPE_UNSPECIFIED",
                        "BAR",
                        "LINE",
                        "AREA",
                        "COLUMN",
                        "SCATTER",
                        "COMBO",
                        "STEPPED_AREA"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "A <a href=\"/chart/interactive/docs/gallery/barchart\">bar chart</a>.",
                        "A <a href=\"/chart/interactive/docs/gallery/linechart\">line chart</a>.",
                        "An <a href=\"/chart/interactive/docs/gallery/areachart\">area chart</a>.",
                        "A <a href=\"/chart/interactive/docs/gallery/columnchart\">column chart</a>.",
                        "A <a href=\"/chart/interactive/docs/gallery/scatterchart\">scatter\nchart</a>.",
                        "A <a href=\"/chart/interactive/docs/gallery/combochart\">combo chart</a>.",
                        "A <a href=\"/chart/interactive/docs/gallery/steppedareachart\">stepped area\nchart</a>."
                    ],
                    "type": "string"
                },
                "compareMode": {
                    "enum": [
                        "BASIC_CHART_COMPARE_MODE_UNSPECIFIED",
                        "DATUM",
                        "CATEGORY"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "Only the focused data element is highlighted and shown in the tooltip.",
                        "All data elements with the same category (e.g., domain value) are\nhighlighted and shown in the tooltip."
                    ],
                    "type": "string"
                },
                "domains": {
                    "items": {
                        "$ref": "BasicChartDomain"
                    },
                    "type": "array"
                },
                "headerCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "interpolateNulls": {
                    "type": "boolean"
                },
                "legendPosition": {
                    "enum": [
                        "BASIC_CHART_LEGEND_POSITION_UNSPECIFIED",
                        "BOTTOM_LEGEND",
                        "LEFT_LEGEND",
                        "RIGHT_LEGEND",
                        "TOP_LEGEND",
                        "NO_LEGEND"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "The legend is rendered on the bottom of the chart.",
                        "The legend is rendered on the left of the chart.",
                        "The legend is rendered on the right of the chart.",
                        "The legend is rendered on the top of the chart.",
                        "No legend is rendered."
                    ],
                    "type": "string"
                },
                "lineSmoothing": {
                    "type": "boolean"
                },
                "series": {
                    "items": {
                        "$ref": "BasicChartSeries"
                    },
                    "type": "array"
                },
                "stackedType": {
                    "enum": [
                        "BASIC_CHART_STACKED_TYPE_UNSPECIFIED",
                        "NOT_STACKED",
                        "STACKED",
                        "PERCENT_STACKED"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "Series are not stacked.",
                        "Series values are stacked, each value is rendered vertically beginning\nfrom the top of the value below it.",
                        "Vertical stacks are stretched to reach the top of the chart, with\nvalues laid out as percentages of each other."
                    ],
                    "type": "string"
                },
                "threeDimensional": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "BasicFilter": {
            "id": "BasicFilter",
            "properties": {
                "criteria": {
                    "additionalProperties": {
                        "$ref": "FilterCriteria"
                    },
                    "type": "object"
                },
                "range": {
                    "$ref": "GridRange"
                },
                "sortSpecs": {
                    "items": {
                        "$ref": "SortSpec"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchClearValuesByDataFilterRequest": {
            "id": "BatchClearValuesByDataFilterRequest",
            "properties": {
                "dataFilters": {
                    "items": {
                        "$ref": "DataFilter"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchClearValuesByDataFilterResponse": {
            "id": "BatchClearValuesByDataFilterResponse",
            "properties": {
                "clearedRanges": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "spreadsheetId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchClearValuesRequest": {
            "id": "BatchClearValuesRequest",
            "properties": {
                "ranges": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchClearValuesResponse": {
            "id": "BatchClearValuesResponse",
            "properties": {
                "clearedRanges": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "spreadsheetId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchGetValuesByDataFilterRequest": {
            "id": "BatchGetValuesByDataFilterRequest",
            "properties": {
                "dataFilters": {
                    "items": {
                        "$ref": "DataFilter"
                    },
                    "type": "array"
                },
                "dateTimeRenderOption": {
                    "enum": [
                        "SERIAL_NUMBER",
                        "FORMATTED_STRING"
                    ],
                    "enumDescriptions": [
                        "Instructs date, time, datetime, and duration fields to be output\nas doubles in \"serial number\" format, as popularized by Lotus 1-2-3.\nThe whole number portion of the value (left of the decimal) counts\nthe days since December 30th 1899. The fractional portion (right of\nthe decimal) counts the time as a fraction of the day. For example,\nJanuary 1st 1900 at noon would be 2.5, 2 because it's 2 days after\nDecember 30st 1899, and .5 because noon is half a day.  February 1st\n1900 at 3pm would be 33.625. This correctly treats the year 1900 as\nnot a leap year.",
                        "Instructs date, time, datetime, and duration fields to be output\nas strings in their given number format (which is dependent\non the spreadsheet locale)."
                    ],
                    "type": "string"
                },
                "majorDimension": {
                    "enum": [
                        "DIMENSION_UNSPECIFIED",
                        "ROWS",
                        "COLUMNS"
                    ],
                    "enumDescriptions": [
                        "The default value, do not use.",
                        "Operates on the rows of a sheet.",
                        "Operates on the columns of a sheet."
                    ],
                    "type": "string"
                },
                "valueRenderOption": {
                    "enum": [
                        "FORMATTED_VALUE",
                        "UNFORMATTED_VALUE",
                        "FORMULA"
                    ],
                    "enumDescriptions": [
                        "Values will be calculated & formatted in the reply according to the\ncell's formatting.  Formatting is based on the spreadsheet's locale,\nnot the requesting user's locale.\nFor example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency,\nthen `A2` would return `\"$1.23\"`.",
                        "Values will be calculated, but not formatted in the reply.\nFor example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency,\nthen `A2` would return the number `1.23`.",
                        "Values will not be calculated.  The reply will include the formulas.\nFor example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency,\nthen A2 would return `\"=A1\"`."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchGetValuesByDataFilterResponse": {
            "id": "BatchGetValuesByDataFilterResponse",
            "properties": {
                "spreadsheetId": {
                    "type": "string"
                },
                "valueRanges": {
                    "items": {
                        "$ref": "MatchedValueRange"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchGetValuesResponse": {
            "id": "BatchGetValuesResponse",
            "properties": {
                "spreadsheetId": {
                    "type": "string"
                },
                "valueRanges": {
                    "items": {
                        "$ref": "ValueRange"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchUpdateSpreadsheetRequest": {
            "id": "BatchUpdateSpreadsheetRequest",
            "properties": {
                "includeSpreadsheetInResponse": {
                    "type": "boolean"
                },
                "requests": {
                    "items": {
                        "$ref": "Request"
                    },
                    "type": "array"
                },
                "responseIncludeGridData": {
                    "type": "boolean"
                },
                "responseRanges": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchUpdateSpreadsheetResponse": {
            "id": "BatchUpdateSpreadsheetResponse",
            "properties": {
                "replies": {
                    "items": {
                        "$ref": "Response"
                    },
                    "type": "array"
                },
                "spreadsheetId": {
                    "type": "string"
                },
                "updatedSpreadsheet": {
                    "$ref": "Spreadsheet"
                }
            },
            "type": "object"
        },
        "BatchUpdateValuesByDataFilterRequest": {
            "id": "BatchUpdateValuesByDataFilterRequest",
            "properties": {
                "data": {
                    "items": {
                        "$ref": "DataFilterValueRange"
                    },
                    "type": "array"
                },
                "includeValuesInResponse": {
                    "type": "boolean"
                },
                "responseDateTimeRenderOption": {
                    "enum": [
                        "SERIAL_NUMBER",
                        "FORMATTED_STRING"
                    ],
                    "enumDescriptions": [
                        "Instructs date, time, datetime, and duration fields to be output\nas doubles in \"serial number\" format, as popularized by Lotus 1-2-3.\nThe whole number portion of the value (left of the decimal) counts\nthe days since December 30th 1899. The fractional portion (right of\nthe decimal) counts the time as a fraction of the day. For example,\nJanuary 1st 1900 at noon would be 2.5, 2 because it's 2 days after\nDecember 30st 1899, and .5 because noon is half a day.  February 1st\n1900 at 3pm would be 33.625. This correctly treats the year 1900 as\nnot a leap year.",
                        "Instructs date, time, datetime, and duration fields to be output\nas strings in their given number format (which is dependent\non the spreadsheet locale)."
                    ],
                    "type": "string"
                },
                "responseValueRenderOption": {
                    "enum": [
                        "FORMATTED_VALUE",
                        "UNFORMATTED_VALUE",
                        "FORMULA"
                    ],
                    "enumDescriptions": [
                        "Values will be calculated & formatted in the reply according to the\ncell's formatting.  Formatting is based on the spreadsheet's locale,\nnot the requesting user's locale.\nFor example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency,\nthen `A2` would return `\"$1.23\"`.",
                        "Values will be calculated, but not formatted in the reply.\nFor example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency,\nthen `A2` would return the number `1.23`.",
                        "Values will not be calculated.  The reply will include the formulas.\nFor example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency,\nthen A2 would return `\"=A1\"`."
                    ],
                    "type": "string"
                },
                "valueInputOption": {
                    "enum": [
                        "INPUT_VALUE_OPTION_UNSPECIFIED",
                        "RAW",
                        "USER_ENTERED"
                    ],
                    "enumDescriptions": [
                        "Default input value. This value must not be used.",
                        "The values the user has entered will not be parsed and will be stored\nas-is.",
                        "The values will be parsed as if the user typed them into the UI.\nNumbers will stay as numbers, but strings may be converted to numbers,\ndates, etc. following the same rules that are applied when entering\ntext into a cell via the Google Sheets UI."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchUpdateValuesByDataFilterResponse": {
            "id": "BatchUpdateValuesByDataFilterResponse",
            "properties": {
                "responses": {
                    "items": {
                        "$ref": "UpdateValuesByDataFilterResponse"
                    },
                    "type": "array"
                },
                "spreadsheetId": {
                    "type": "string"
                },
                "totalUpdatedCells": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalUpdatedColumns": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalUpdatedRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalUpdatedSheets": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "BatchUpdateValuesRequest": {
            "id": "BatchUpdateValuesRequest",
            "properties": {
                "data": {
                    "items": {
                        "$ref": "ValueRange"
                    },
                    "type": "array"
                },
                "includeValuesInResponse": {
                    "type": "boolean"
                },
                "responseDateTimeRenderOption": {
                    "enum": [
                        "SERIAL_NUMBER",
                        "FORMATTED_STRING"
                    ],
                    "enumDescriptions": [
                        "Instructs date, time, datetime, and duration fields to be output\nas doubles in \"serial number\" format, as popularized by Lotus 1-2-3.\nThe whole number portion of the value (left of the decimal) counts\nthe days since December 30th 1899. The fractional portion (right of\nthe decimal) counts the time as a fraction of the day. For example,\nJanuary 1st 1900 at noon would be 2.5, 2 because it's 2 days after\nDecember 30st 1899, and .5 because noon is half a day.  February 1st\n1900 at 3pm would be 33.625. This correctly treats the year 1900 as\nnot a leap year.",
                        "Instructs date, time, datetime, and duration fields to be output\nas strings in their given number format (which is dependent\non the spreadsheet locale)."
                    ],
                    "type": "string"
                },
                "responseValueRenderOption": {
                    "enum": [
                        "FORMATTED_VALUE",
                        "UNFORMATTED_VALUE",
                        "FORMULA"
                    ],
                    "enumDescriptions": [
                        "Values will be calculated & formatted in the reply according to the\ncell's formatting.  Formatting is based on the spreadsheet's locale,\nnot the requesting user's locale.\nFor example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency,\nthen `A2` would return `\"$1.23\"`.",
                        "Values will be calculated, but not formatted in the reply.\nFor example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency,\nthen `A2` would return the number `1.23`.",
                        "Values will not be calculated.  The reply will include the formulas.\nFor example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency,\nthen A2 would return `\"=A1\"`."
                    ],
                    "type": "string"
                },
                "valueInputOption": {
                    "enum": [
                        "INPUT_VALUE_OPTION_UNSPECIFIED",
                        "RAW",
                        "USER_ENTERED"
                    ],
                    "enumDescriptions": [
                        "Default input value. This value must not be used.",
                        "The values the user has entered will not be parsed and will be stored\nas-is.",
                        "The values will be parsed as if the user typed them into the UI.\nNumbers will stay as numbers, but strings may be converted to numbers,\ndates, etc. following the same rules that are applied when entering\ntext into a cell via the Google Sheets UI."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchUpdateValuesResponse": {
            "id": "BatchUpdateValuesResponse",
            "properties": {
                "responses": {
                    "items": {
                        "$ref": "UpdateValuesResponse"
                    },
                    "type": "array"
                },
                "spreadsheetId": {
                    "type": "string"
                },
                "totalUpdatedCells": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalUpdatedColumns": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalUpdatedRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalUpdatedSheets": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "BooleanCondition": {
            "id": "BooleanCondition",
            "properties": {
                "type": {
                    "enum": [
                        "CONDITION_TYPE_UNSPECIFIED",
                        "NUMBER_GREATER",
                        "NUMBER_GREATER_THAN_EQ",
                        "NUMBER_LESS",
                        "NUMBER_LESS_THAN_EQ",
                        "NUMBER_EQ",
                        "NUMBER_NOT_EQ",
                        "NUMBER_BETWEEN",
                        "NUMBER_NOT_BETWEEN",
                        "TEXT_CONTAINS",
                        "TEXT_NOT_CONTAINS",
                        "TEXT_STARTS_WITH",
                        "TEXT_ENDS_WITH",
                        "TEXT_EQ",
                        "TEXT_IS_EMAIL",
                        "TEXT_IS_URL",
                        "DATE_EQ",
                        "DATE_BEFORE",
                        "DATE_AFTER",
                        "DATE_ON_OR_BEFORE",
                        "DATE_ON_OR_AFTER",
                        "DATE_BETWEEN",
                        "DATE_NOT_BETWEEN",
                        "DATE_IS_VALID",
                        "ONE_OF_RANGE",
                        "ONE_OF_LIST",
                        "BLANK",
                        "NOT_BLANK",
                        "CUSTOM_FORMULA",
                        "BOOLEAN"
                    ],
                    "enumDescriptions": [
                        "The default value, do not use.",
                        "The cell's value must be greater than the condition's value.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must be greater than or equal to the condition's value.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must be less than the condition's value.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must be less than or equal to the condition's value.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must be equal to the condition's value.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must be not equal to the condition's value.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must be between the two condition values.\nSupported by data validation, conditional formatting and filters.\nRequires exactly two ConditionValues.",
                        "The cell's value must not be between the two condition values.\nSupported by data validation, conditional formatting and filters.\nRequires exactly two ConditionValues.",
                        "The cell's value must contain the condition's value.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must not contain the condition's value.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must start with the condition's value.\nSupported by conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must end with the condition's value.\nSupported by conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must be exactly the condition's value.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must be a valid email address.\nSupported by data validation.\nRequires no ConditionValues.",
                        "The cell's value must be a valid URL.\nSupported by data validation.\nRequires no ConditionValues.",
                        "The cell's value must be the same date as the condition's value.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must be before the date of the condition's value.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue\nthat may be a relative date.",
                        "The cell's value must be after the date of the condition's value.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue\nthat may be a relative date.",
                        "The cell's value must be on or before the date of the condition's value.\nSupported by data validation.\nRequires a single ConditionValue\nthat may be a relative date.",
                        "The cell's value must be on or after the date of the condition's value.\nSupported by data validation.\nRequires a single ConditionValue\nthat may be a relative date.",
                        "The cell's value must be between the dates of the two condition values.\nSupported by data validation.\nRequires exactly two ConditionValues.",
                        "The cell's value must be outside the dates of the two condition values.\nSupported by data validation.\nRequires exactly two ConditionValues.",
                        "The cell's value must be a date.\nSupported by data validation.\nRequires no ConditionValues.",
                        "The cell's value must be listed in the grid in condition value's range.\nSupported by data validation.\nRequires a single ConditionValue,\nand the value must be a valid range in A1 notation.",
                        "The cell's value must be in the list of condition values.\nSupported by data validation.\nSupports any number of condition values,\none per item in the list.\nFormulas are not supported in the values.",
                        "The cell's value must be empty.\nSupported by conditional formatting and filters.\nRequires no ConditionValues.",
                        "The cell's value must not be empty.\nSupported by conditional formatting and filters.\nRequires no ConditionValues.",
                        "The condition's formula must evaluate to true.\nSupported by data validation, conditional formatting and filters.\nRequires a single ConditionValue.",
                        "The cell's value must be TRUE/FALSE or in the list of condition values.\nSupported by data validation.\nRenders as a cell checkbox.\nSupports zero, one or two ConditionValues.  No\nvalues indicates the cell must be TRUE or FALSE, where TRUE renders as\nchecked and FALSE renders as unchecked.  One value indicates the cell\nwill render as checked when it contains that value and unchecked when it\nis blank.  Two values indicate that the cell will render as checked when\nit contains the first value and unchecked when it contains the second\nvalue.  For example, [\"Yes\",\"No\"] indicates that the cell will render a\nchecked box when it has the value \"Yes\" and an unchecked box when it has\nthe value \"No\"."
                    ],
                    "type": "string"
                },
                "values": {
                    "items": {
                        "$ref": "ConditionValue"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BooleanRule": {
            "id": "BooleanRule",
            "properties": {
                "condition": {
                    "$ref": "BooleanCondition"
                },
                "format": {
                    "$ref": "CellFormat"
                }
            },
            "type": "object"
        },
        "Border": {
            "id": "Border",
            "properties": {
                "color": {
                    "$ref": "Color"
                },
                "colorStyle": {
                    "$ref": "ColorStyle"
                },
                "style": {
                    "enum": [
                        "STYLE_UNSPECIFIED",
                        "DOTTED",
                        "DASHED",
                        "SOLID",
                        "SOLID_MEDIUM",
                        "SOLID_THICK",
                        "NONE",
                        "DOUBLE"
                    ],
                    "enumDescriptions": [
                        "The style is not specified. Do not use this.",
                        "The border is dotted.",
                        "The border is dashed.",
                        "The border is a thin solid line.",
                        "The border is a medium solid line.",
                        "The border is a thick solid line.",
                        "No border.\nUsed only when updating a border in order to erase it.",
                        "The border is two solid lines."
                    ],
                    "type": "string"
                },
                "width": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Borders": {
            "id": "Borders",
            "properties": {
                "bottom": {
                    "$ref": "Border"
                },
                "left": {
                    "$ref": "Border"
                },
                "right": {
                    "$ref": "Border"
                },
                "top": {
                    "$ref": "Border"
                }
            },
            "type": "object"
        },
        "BubbleChartSpec": {
            "id": "BubbleChartSpec",
            "properties": {
                "bubbleBorderColor": {
                    "$ref": "Color"
                },
                "bubbleBorderColorStyle": {
                    "$ref": "ColorStyle"
                },
                "bubbleLabels": {
                    "$ref": "ChartData"
                },
                "bubbleMaxRadiusSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "bubbleMinRadiusSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "bubbleOpacity": {
                    "format": "float",
                    "type": "number"
                },
                "bubbleSizes": {
                    "$ref": "ChartData"
                },
                "bubbleTextStyle": {
                    "$ref": "TextFormat"
                },
                "domain": {
                    "$ref": "ChartData"
                },
                "groupIds": {
                    "$ref": "ChartData"
                },
                "legendPosition": {
                    "enum": [
                        "BUBBLE_CHART_LEGEND_POSITION_UNSPECIFIED",
                        "BOTTOM_LEGEND",
                        "LEFT_LEGEND",
                        "RIGHT_LEGEND",
                        "TOP_LEGEND",
                        "NO_LEGEND",
                        "INSIDE_LEGEND"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "The legend is rendered on the bottom of the chart.",
                        "The legend is rendered on the left of the chart.",
                        "The legend is rendered on the right of the chart.",
                        "The legend is rendered on the top of the chart.",
                        "No legend is rendered.",
                        "The legend is rendered inside the chart area."
                    ],
                    "type": "string"
                },
                "series": {
                    "$ref": "ChartData"
                }
            },
            "type": "object"
        },
        "CandlestickChartSpec": {
            "id": "CandlestickChartSpec",
            "properties": {
                "data": {
                    "items": {
                        "$ref": "CandlestickData"
                    },
                    "type": "array"
                },
                "domain": {
                    "$ref": "CandlestickDomain"
                }
            },
            "type": "object"
        },
        "CandlestickData": {
            "id": "CandlestickData",
            "properties": {
                "closeSeries": {
                    "$ref": "CandlestickSeries"
                },
                "highSeries": {
                    "$ref": "CandlestickSeries"
                },
                "lowSeries": {
                    "$ref": "CandlestickSeries"
                },
                "openSeries": {
                    "$ref": "CandlestickSeries"
                }
            },
            "type": "object"
        },
        "CandlestickDomain": {
            "id": "CandlestickDomain",
            "properties": {
                "data": {
                    "$ref": "ChartData"
                },
                "reversed": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CandlestickSeries": {
            "id": "CandlestickSeries",
            "properties": {
                "data": {
                    "$ref": "ChartData"
                }
            },
            "type": "object"
        },
        "CellData": {
            "id": "CellData",
            "properties": {
                "dataValidation": {
                    "$ref": "DataValidationRule"
                },
                "effectiveFormat": {
                    "$ref": "CellFormat"
                },
                "effectiveValue": {
                    "$ref": "ExtendedValue"
                },
                "formattedValue": {
                    "type": "string"
                },
                "hyperlink": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "pivotTable": {
                    "$ref": "PivotTable"
                },
                "textFormatRuns": {
                    "items": {
                        "$ref": "TextFormatRun"
                    },
                    "type": "array"
                },
                "userEnteredFormat": {
                    "$ref": "CellFormat"
                },
                "userEnteredValue": {
                    "$ref": "ExtendedValue"
                }
            },
            "type": "object"
        },
        "CellFormat": {
            "id": "CellFormat",
            "properties": {
                "backgroundColor": {
                    "$ref": "Color"
                },
                "backgroundColorStyle": {
                    "$ref": "ColorStyle"
                },
                "borders": {
                    "$ref": "Borders"
                },
                "horizontalAlignment": {
                    "enum": [
                        "HORIZONTAL_ALIGN_UNSPECIFIED",
                        "LEFT",
                        "CENTER",
                        "RIGHT"
                    ],
                    "enumDescriptions": [
                        "The horizontal alignment is not specified. Do not use this.",
                        "The text is explicitly aligned to the left of the cell.",
                        "The text is explicitly aligned to the center of the cell.",
                        "The text is explicitly aligned to the right of the cell."
                    ],
                    "type": "string"
                },
                "hyperlinkDisplayType": {
                    "enum": [
                        "HYPERLINK_DISPLAY_TYPE_UNSPECIFIED",
                        "LINKED",
                        "PLAIN_TEXT"
                    ],
                    "enumDescriptions": [
                        "The default value: the hyperlink is rendered. Do not use this.",
                        "A hyperlink should be explicitly rendered.",
                        "A hyperlink should not be rendered."
                    ],
                    "type": "string"
                },
                "numberFormat": {
                    "$ref": "NumberFormat"
                },
                "padding": {
                    "$ref": "Padding"
                },
                "textDirection": {
                    "enum": [
                        "TEXT_DIRECTION_UNSPECIFIED",
                        "LEFT_TO_RIGHT",
                        "RIGHT_TO_LEFT"
                    ],
                    "enumDescriptions": [
                        "The text direction is not specified. Do not use this.",
                        "The text direction of left-to-right was set by the user.",
                        "The text direction of right-to-left was set by the user."
                    ],
                    "type": "string"
                },
                "textFormat": {
                    "$ref": "TextFormat"
                },
                "textRotation": {
                    "$ref": "TextRotation"
                },
                "verticalAlignment": {
                    "enum": [
                        "VERTICAL_ALIGN_UNSPECIFIED",
                        "TOP",
                        "MIDDLE",
                        "BOTTOM"
                    ],
                    "enumDescriptions": [
                        "The vertical alignment is not specified.  Do not use this.",
                        "The text is explicitly aligned to the top of the cell.",
                        "The text is explicitly aligned to the middle of the cell.",
                        "The text is explicitly aligned to the bottom of the cell."
                    ],
                    "type": "string"
                },
                "wrapStrategy": {
                    "enum": [
                        "WRAP_STRATEGY_UNSPECIFIED",
                        "OVERFLOW_CELL",
                        "LEGACY_WRAP",
                        "CLIP",
                        "WRAP"
                    ],
                    "enumDescriptions": [
                        "The default value, do not use.",
                        "Lines that are longer than the cell width will be written in the next\ncell over, so long as that cell is empty. If the next cell over is\nnon-empty, this behaves the same as CLIP. The text will never wrap\nto the next line unless the user manually inserts a new line.\nExample:\n\n    | First sentence. |\n    | Manual newline that is very long. <- Text continues into next cell\n    | Next newline.   |",
                        "This wrap strategy represents the old Google Sheets wrap strategy where\nwords that are longer than a line are clipped rather than broken. This\nstrategy is not supported on all platforms and is being phased out.\nExample:\n\n    | Cell has a |\n    | loooooooooo| <- Word is clipped.\n    | word.      |",
                        "Lines that are longer than the cell width will be clipped.\nThe text will never wrap to the next line unless the user manually\ninserts a new line.\nExample:\n\n    | First sentence. |\n    | Manual newline t| <- Text is clipped\n    | Next newline.   |",
                        "Words that are longer than a line are wrapped at the character level\nrather than clipped.\nExample:\n\n    | Cell has a |\n    | loooooooooo| <- Word is broken.\n    | ong word.  |"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ChartAxisViewWindowOptions": {
            "id": "ChartAxisViewWindowOptions",
            "properties": {
                "viewWindowMax": {
                    "format": "double",
                    "type": "number"
                },
                "viewWindowMin": {
                    "format": "double",
                    "type": "number"
                },
                "viewWindowMode": {
                    "enum": [
                        "DEFAULT_VIEW_WINDOW_MODE",
                        "VIEW_WINDOW_MODE_UNSUPPORTED",
                        "EXPLICIT",
                        "PRETTY"
                    ],
                    "enumDescriptions": [
                        "The default view window mode used in the Sheets editor for this chart\ntype. In most cases, if set, the default mode is equivalent to\n`PRETTY`.",
                        "Do not use. Represents that the currently set mode is not supported by\nthe API.",
                        "Follows the min and max exactly if specified. If a value is unspecified,\nit will fall back to the `PRETTY` value.",
                        "Chooses a min and max that make the chart look good. Both min and max are\nignored in this mode."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ChartCustomNumberFormatOptions": {
            "id": "ChartCustomNumberFormatOptions",
            "properties": {
                "prefix": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ChartData": {
            "id": "ChartData",
            "properties": {
                "sourceRange": {
                    "$ref": "ChartSourceRange"
                }
            },
            "type": "object"
        },
        "ChartSourceRange": {
            "id": "ChartSourceRange",
            "properties": {
                "sources": {
                    "items": {
                        "$ref": "GridRange"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ChartSpec": {
            "id": "ChartSpec",
            "properties": {
                "altText": {
                    "type": "string"
                },
                "backgroundColor": {
                    "$ref": "Color"
                },
                "backgroundColorStyle": {
                    "$ref": "ColorStyle"
                },
                "basicChart": {
                    "$ref": "BasicChartSpec"
                },
                "bubbleChart": {
                    "$ref": "BubbleChartSpec"
                },
                "candlestickChart": {
                    "$ref": "CandlestickChartSpec"
                },
                "fontName": {
                    "type": "string"
                },
                "hiddenDimensionStrategy": {
                    "enum": [
                        "CHART_HIDDEN_DIMENSION_STRATEGY_UNSPECIFIED",
                        "SKIP_HIDDEN_ROWS_AND_COLUMNS",
                        "SKIP_HIDDEN_ROWS",
                        "SKIP_HIDDEN_COLUMNS",
                        "SHOW_ALL"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "Charts will skip hidden rows and columns.",
                        "Charts will skip hidden rows only.",
                        "Charts will skip hidden columns only.",
                        "Charts will not skip any hidden rows or columns."
                    ],
                    "type": "string"
                },
                "histogramChart": {
                    "$ref": "HistogramChartSpec"
                },
                "maximized": {
                    "type": "boolean"
                },
                "orgChart": {
                    "$ref": "OrgChartSpec"
                },
                "pieChart": {
                    "$ref": "PieChartSpec"
                },
                "scorecardChart": {
                    "$ref": "ScorecardChartSpec"
                },
                "subtitle": {
                    "type": "string"
                },
                "subtitleTextFormat": {
                    "$ref": "TextFormat"
                },
                "subtitleTextPosition": {
                    "$ref": "TextPosition"
                },
                "title": {
                    "type": "string"
                },
                "titleTextFormat": {
                    "$ref": "TextFormat"
                },
                "titleTextPosition": {
                    "$ref": "TextPosition"
                },
                "treemapChart": {
                    "$ref": "TreemapChartSpec"
                },
                "waterfallChart": {
                    "$ref": "WaterfallChartSpec"
                }
            },
            "type": "object"
        },
        "ClearBasicFilterRequest": {
            "id": "ClearBasicFilterRequest",
            "properties": {
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ClearValuesRequest": {
            "id": "ClearValuesRequest",
            "properties": {},
            "type": "object"
        },
        "ClearValuesResponse": {
            "id": "ClearValuesResponse",
            "properties": {
                "clearedRange": {
                    "type": "string"
                },
                "spreadsheetId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Color": {
            "id": "Color",
            "properties": {
                "alpha": {
                    "format": "float",
                    "type": "number"
                },
                "blue": {
                    "format": "float",
                    "type": "number"
                },
                "green": {
                    "format": "float",
                    "type": "number"
                },
                "red": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ColorStyle": {
            "id": "ColorStyle",
            "properties": {
                "rgbColor": {
                    "$ref": "Color"
                },
                "themeColor": {
                    "enum": [
                        "THEME_COLOR_TYPE_UNSPECIFIED",
                        "TEXT",
                        "BACKGROUND",
                        "ACCENT1",
                        "ACCENT2",
                        "ACCENT3",
                        "ACCENT4",
                        "ACCENT5",
                        "ACCENT6",
                        "LINK"
                    ],
                    "enumDescriptions": [
                        "Unspecified theme color",
                        "Represents the primary text color",
                        "Represents the primary background color",
                        "Represents the first accent color",
                        "Represents the second accent color",
                        "Represents the third accent color",
                        "Represents the fourth accent color",
                        "Represents the fifth accent color",
                        "Represents the sixth accent color",
                        "Represents the color to use for hyperlinks"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConditionValue": {
            "id": "ConditionValue",
            "properties": {
                "relativeDate": {
                    "enum": [
                        "RELATIVE_DATE_UNSPECIFIED",
                        "PAST_YEAR",
                        "PAST_MONTH",
                        "PAST_WEEK",
                        "YESTERDAY",
                        "TODAY",
                        "TOMORROW"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "The value is one year before today.",
                        "The value is one month before today.",
                        "The value is one week before today.",
                        "The value is yesterday.",
                        "The value is today.",
                        "The value is tomorrow."
                    ],
                    "type": "string"
                },
                "userEnteredValue": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConditionalFormatRule": {
            "id": "ConditionalFormatRule",
            "properties": {
                "booleanRule": {
                    "$ref": "BooleanRule"
                },
                "gradientRule": {
                    "$ref": "GradientRule"
                },
                "ranges": {
                    "items": {
                        "$ref": "GridRange"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CopyPasteRequest": {
            "id": "CopyPasteRequest",
            "properties": {
                "destination": {
                    "$ref": "GridRange"
                },
                "pasteOrientation": {
                    "enum": [
                        "NORMAL",
                        "TRANSPOSE"
                    ],
                    "enumDescriptions": [
                        "Paste normally.",
                        "Paste transposed, where all rows become columns and vice versa."
                    ],
                    "type": "string"
                },
                "pasteType": {
                    "enum": [
                        "PASTE_NORMAL",
                        "PASTE_VALUES",
                        "PASTE_FORMAT",
                        "PASTE_NO_BORDERS",
                        "PASTE_FORMULA",
                        "PASTE_DATA_VALIDATION",
                        "PASTE_CONDITIONAL_FORMATTING"
                    ],
                    "enumDescriptions": [
                        "Paste values, formulas, formats, and merges.",
                        "Paste the values ONLY without formats, formulas, or merges.",
                        "Paste the format and data validation only.",
                        "Like PASTE_NORMAL but without borders.",
                        "Paste the formulas only.",
                        "Paste the data validation only.",
                        "Paste the conditional formatting rules only."
                    ],
                    "type": "string"
                },
                "source": {
                    "$ref": "GridRange"
                }
            },
            "type": "object"
        },
        "CopySheetToAnotherSpreadsheetRequest": {
            "id": "CopySheetToAnotherSpreadsheetRequest",
            "properties": {
                "destinationSpreadsheetId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateDeveloperMetadataRequest": {
            "id": "CreateDeveloperMetadataRequest",
            "properties": {
                "developerMetadata": {
                    "$ref": "DeveloperMetadata"
                }
            },
            "type": "object"
        },
        "CreateDeveloperMetadataResponse": {
            "id": "CreateDeveloperMetadataResponse",
            "properties": {
                "developerMetadata": {
                    "$ref": "DeveloperMetadata"
                }
            },
            "type": "object"
        },
        "CutPasteRequest": {
            "id": "CutPasteRequest",
            "properties": {
                "destination": {
                    "$ref": "GridCoordinate"
                },
                "pasteType": {
                    "enum": [
                        "PASTE_NORMAL",
                        "PASTE_VALUES",
                        "PASTE_FORMAT",
                        "PASTE_NO_BORDERS",
                        "PASTE_FORMULA",
                        "PASTE_DATA_VALIDATION",
                        "PASTE_CONDITIONAL_FORMATTING"
                    ],
                    "enumDescriptions": [
                        "Paste values, formulas, formats, and merges.",
                        "Paste the values ONLY without formats, formulas, or merges.",
                        "Paste the format and data validation only.",
                        "Like PASTE_NORMAL but without borders.",
                        "Paste the formulas only.",
                        "Paste the data validation only.",
                        "Paste the conditional formatting rules only."
                    ],
                    "type": "string"
                },
                "source": {
                    "$ref": "GridRange"
                }
            },
            "type": "object"
        },
        "DataFilter": {
            "id": "DataFilter",
            "properties": {
                "a1Range": {
                    "type": "string"
                },
                "developerMetadataLookup": {
                    "$ref": "DeveloperMetadataLookup"
                },
                "gridRange": {
                    "$ref": "GridRange"
                }
            },
            "type": "object"
        },
        "DataFilterValueRange": {
            "id": "DataFilterValueRange",
            "properties": {
                "dataFilter": {
                    "$ref": "DataFilter"
                },
                "majorDimension": {
                    "enum": [
                        "DIMENSION_UNSPECIFIED",
                        "ROWS",
                        "COLUMNS"
                    ],
                    "enumDescriptions": [
                        "The default value, do not use.",
                        "Operates on the rows of a sheet.",
                        "Operates on the columns of a sheet."
                    ],
                    "type": "string"
                },
                "values": {
                    "items": {
                        "items": {
                            "type": "any"
                        },
                        "type": "array"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DataValidationRule": {
            "id": "DataValidationRule",
            "properties": {
                "condition": {
                    "$ref": "BooleanCondition"
                },
                "inputMessage": {
                    "type": "string"
                },
                "showCustomUi": {
                    "type": "boolean"
                },
                "strict": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DateTimeRule": {
            "id": "DateTimeRule",
            "properties": {
                "type": {
                    "enum": [
                        "DATE_TIME_RULE_TYPE_UNSPECIFIED",
                        "SECOND",
                        "MINUTE",
                        "HOUR",
                        "HOUR_MINUTE",
                        "HOUR_MINUTE_AMPM",
                        "DAY_OF_WEEK",
                        "DAY_OF_YEAR",
                        "DAY_OF_MONTH",
                        "DAY_MONTH",
                        "MONTH",
                        "QUARTER",
                        "YEAR",
                        "YEAR_MONTH",
                        "YEAR_QUARTER",
                        "YEAR_MONTH_DAY"
                    ],
                    "enumDescriptions": [
                        "The default type, do not use.",
                        "Group dates by second, from 0 to 59.",
                        "Group dates by minute, from 0 to 59.",
                        "Group dates by hour using a 24-hour system, from 0 to 23.",
                        "Group dates by hour and minute using a 24-hour system, for example 19:45.",
                        "Group dates by hour and minute using a 12-hour system, for example 7:45\nPM. The AM/PM designation is translated based on the spreadsheet\nlocale.",
                        "Group dates by day of week, for example Sunday. The days of the week will\nbe translated based on the spreadsheet locale.",
                        "Group dates by day of year, from 1 to 366. Note that dates after Feb. 29\nfall in different buckets in leap years than in non-leap years.",
                        "Group dates by day of month, from 1 to 31.",
                        "Group dates by day and month, for example 22-Nov. The month is\ntranslated based on the spreadsheet locale.",
                        "Group dates by month, for example Nov. The month is translated based\non the spreadsheet locale.",
                        "Group dates by quarter, for example Q1 (which represents Jan-Mar).",
                        "Group dates by year, for example 2008.",
                        "Group dates by year and month, for example 2008-Nov. The month is\ntranslated based on the spreadsheet locale.",
                        "Group dates by year and quarter, for example 2008 Q4.",
                        "Group dates by year, month, and day, for example 2008-11-22."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeleteBandingRequest": {
            "id": "DeleteBandingRequest",
            "properties": {
                "bandedRangeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeleteConditionalFormatRuleRequest": {
            "id": "DeleteConditionalFormatRuleRequest",
            "properties": {
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeleteConditionalFormatRuleResponse": {
            "id": "DeleteConditionalFormatRuleResponse",
            "properties": {
                "rule": {
                    "$ref": "ConditionalFormatRule"
                }
            },
            "type": "object"
        },
        "DeleteDeveloperMetadataRequest": {
            "id": "DeleteDeveloperMetadataRequest",
            "properties": {
                "dataFilter": {
                    "$ref": "DataFilter"
                }
            },
            "type": "object"
        },
        "DeleteDeveloperMetadataResponse": {
            "id": "DeleteDeveloperMetadataResponse",
            "properties": {
                "deletedDeveloperMetadata": {
                    "items": {
                        "$ref": "DeveloperMetadata"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeleteDimensionGroupRequest": {
            "id": "DeleteDimensionGroupRequest",
            "properties": {
                "range": {
                    "$ref": "DimensionRange"
                }
            },
            "type": "object"
        },
        "DeleteDimensionGroupResponse": {
            "id": "DeleteDimensionGroupResponse",
            "properties": {
                "dimensionGroups": {
                    "items": {
                        "$ref": "DimensionGroup"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeleteDimensionRequest": {
            "id": "DeleteDimensionRequest",
            "properties": {
                "range": {
                    "$ref": "DimensionRange"
                }
            },
            "type": "object"
        },
        "DeleteDuplicatesRequest": {
            "id": "DeleteDuplicatesRequest",
            "properties": {
                "comparisonColumns": {
                    "items": {
                        "$ref": "DimensionRange"
                    },
                    "type": "array"
                },
                "range": {
                    "$ref": "GridRange"
                }
            },
            "type": "object"
        },
        "DeleteDuplicatesResponse": {
            "id": "DeleteDuplicatesResponse",
            "properties": {
                "duplicatesRemovedCount": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeleteEmbeddedObjectRequest": {
            "id": "DeleteEmbeddedObjectRequest",
            "properties": {
                "objectId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeleteFilterViewRequest": {
            "id": "DeleteFilterViewRequest",
            "properties": {
                "filterId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeleteNamedRangeRequest": {
            "id": "DeleteNamedRangeRequest",
            "properties": {
                "namedRangeId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeleteProtectedRangeRequest": {
            "id": "DeleteProtectedRangeRequest",
            "properties": {
                "protectedRangeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeleteRangeRequest": {
            "id": "DeleteRangeRequest",
            "properties": {
                "range": {
                    "$ref": "GridRange"
                },
                "shiftDimension": {
                    "enum": [
                        "DIMENSION_UNSPECIFIED",
                        "ROWS",
                        "COLUMNS"
                    ],
                    "enumDescriptions": [
                        "The default value, do not use.",
                        "Operates on the rows of a sheet.",
                        "Operates on the columns of a sheet."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeleteSheetRequest": {
            "id": "DeleteSheetRequest",
            "properties": {
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeveloperMetadata": {
            "id": "DeveloperMetadata",
            "properties": {
                "location": {
                    "$ref": "DeveloperMetadataLocation"
                },
                "metadataId": {
                    "format": "int32",
                    "type": "integer"
                },
                "metadataKey": {
                    "type": "string"
                },
                "metadataValue": {
                    "type": "string"
                },
                "visibility": {
                    "enum": [
                        "DEVELOPER_METADATA_VISIBILITY_UNSPECIFIED",
                        "DOCUMENT",
                        "PROJECT"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Document-visible metadata is accessible from any developer project with\naccess to the document.",
                        "Project-visible metadata is only visible to and accessible by the developer\nproject that created the metadata."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeveloperMetadataLocation": {
            "id": "DeveloperMetadataLocation",
            "properties": {
                "dimensionRange": {
                    "$ref": "DimensionRange"
                },
                "locationType": {
                    "enum": [
                        "DEVELOPER_METADATA_LOCATION_TYPE_UNSPECIFIED",
                        "ROW",
                        "COLUMN",
                        "SHEET",
                        "SPREADSHEET"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Developer metadata associated on an entire row dimension.",
                        "Developer metadata associated on an entire column dimension.",
                        "Developer metadata associated on an entire sheet.",
                        "Developer metadata associated on the entire spreadsheet."
                    ],
                    "type": "string"
                },
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                },
                "spreadsheet": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DeveloperMetadataLookup": {
            "id": "DeveloperMetadataLookup",
            "properties": {
                "locationMatchingStrategy": {
                    "enum": [
                        "DEVELOPER_METADATA_LOCATION_MATCHING_STRATEGY_UNSPECIFIED",
                        "EXACT_LOCATION",
                        "INTERSECTING_LOCATION"
                    ],
                    "enumDescriptions": [
                        "Default value. This value must not be used.",
                        "Indicates that a specified location should be matched exactly.  For\nexample, if row three were specified as a location this matching strategy\nwould only match developer metadata also associated on row three.  Metadata\nassociated on other locations would not be considered.",
                        "Indicates that a specified location should match that exact location as\nwell as any intersecting locations.  For example, if row three were\nspecified as a location this matching strategy would match developer\nmetadata associated on row three as well as metadata associated on\nlocations that intersect row three.  If, for instance, there was developer\nmetadata associated on column B, this matching strategy would also match\nthat location because column B intersects row three."
                    ],
                    "type": "string"
                },
                "locationType": {
                    "enum": [
                        "DEVELOPER_METADATA_LOCATION_TYPE_UNSPECIFIED",
                        "ROW",
                        "COLUMN",
                        "SHEET",
                        "SPREADSHEET"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Developer metadata associated on an entire row dimension.",
                        "Developer metadata associated on an entire column dimension.",
                        "Developer metadata associated on an entire sheet.",
                        "Developer metadata associated on the entire spreadsheet."
                    ],
                    "type": "string"
                },
                "metadataId": {
                    "format": "int32",
                    "type": "integer"
                },
                "metadataKey": {
                    "type": "string"
                },
                "metadataLocation": {
                    "$ref": "DeveloperMetadataLocation"
                },
                "metadataValue": {
                    "type": "string"
                },
                "visibility": {
                    "enum": [
                        "DEVELOPER_METADATA_VISIBILITY_UNSPECIFIED",
                        "DOCUMENT",
                        "PROJECT"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Document-visible metadata is accessible from any developer project with\naccess to the document.",
                        "Project-visible metadata is only visible to and accessible by the developer\nproject that created the metadata."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DimensionGroup": {
            "id": "DimensionGroup",
            "properties": {
                "collapsed": {
                    "type": "boolean"
                },
                "depth": {
                    "format": "int32",
                    "type": "integer"
                },
                "range": {
                    "$ref": "DimensionRange"
                }
            },
            "type": "object"
        },
        "DimensionProperties": {
            "id": "DimensionProperties",
            "properties": {
                "developerMetadata": {
                    "items": {
                        "$ref": "DeveloperMetadata"
                    },
                    "type": "array"
                },
                "hiddenByFilter": {
                    "type": "boolean"
                },
                "hiddenByUser": {
                    "type": "boolean"
                },
                "pixelSize": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DimensionRange": {
            "id": "DimensionRange",
            "properties": {
                "dimension": {
                    "enum": [
                        "DIMENSION_UNSPECIFIED",
                        "ROWS",
                        "COLUMNS"
                    ],
                    "enumDescriptions": [
                        "The default value, do not use.",
                        "Operates on the rows of a sheet.",
                        "Operates on the columns of a sheet."
                    ],
                    "type": "string"
                },
                "endIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                },
                "startIndex": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DuplicateFilterViewRequest": {
            "id": "DuplicateFilterViewRequest",
            "properties": {
                "filterId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DuplicateFilterViewResponse": {
            "id": "DuplicateFilterViewResponse",
            "properties": {
                "filter": {
                    "$ref": "FilterView"
                }
            },
            "type": "object"
        },
        "DuplicateSheetRequest": {
            "id": "DuplicateSheetRequest",
            "properties": {
                "insertSheetIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "newSheetId": {
                    "format": "int32",
                    "type": "integer"
                },
                "newSheetName": {
                    "type": "string"
                },
                "sourceSheetId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DuplicateSheetResponse": {
            "id": "DuplicateSheetResponse",
            "properties": {
                "properties": {
                    "$ref": "SheetProperties"
                }
            },
            "type": "object"
        },
        "Editors": {
            "id": "Editors",
            "properties": {
                "domainUsersCanEdit": {
                    "type": "boolean"
                },
                "groups": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "users": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EmbeddedChart": {
            "id": "EmbeddedChart",
            "properties": {
                "chartId": {
                    "format": "int32",
                    "type": "integer"
                },
                "position": {
                    "$ref": "EmbeddedObjectPosition"
                },
                "spec": {
                    "$ref": "ChartSpec"
                }
            },
            "type": "object"
        },
        "EmbeddedObjectPosition": {
            "id": "EmbeddedObjectPosition",
            "properties": {
                "newSheet": {
                    "type": "boolean"
                },
                "overlayPosition": {
                    "$ref": "OverlayPosition"
                },
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ErrorValue": {
            "id": "ErrorValue",
            "properties": {
                "message": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "ERROR_TYPE_UNSPECIFIED",
                        "ERROR",
                        "NULL_VALUE",
                        "DIVIDE_BY_ZERO",
                        "VALUE",
                        "REF",
                        "NAME",
                        "NUM",
                        "N_A",
                        "LOADING"
                    ],
                    "enumDescriptions": [
                        "The default error type, do not use this.",
                        "Corresponds to the `#ERROR!` error.",
                        "Corresponds to the `#NULL!` error.",
                        "Corresponds to the `#DIV/0` error.",
                        "Corresponds to the `#VALUE!` error.",
                        "Corresponds to the `#REF!` error.",
                        "Corresponds to the `#NAME?` error.",
                        "Corresponds to the `#NUM`! error.",
                        "Corresponds to the `#N/A` error.",
                        "Corresponds to the `Loading...` state."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExtendedValue": {
            "id": "ExtendedValue",
            "properties": {
                "boolValue": {
                    "type": "boolean"
                },
                "errorValue": {
                    "$ref": "ErrorValue"
                },
                "formulaValue": {
                    "type": "string"
                },
                "numberValue": {
                    "format": "double",
                    "type": "number"
                },
                "stringValue": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FilterCriteria": {
            "id": "FilterCriteria",
            "properties": {
                "condition": {
                    "$ref": "BooleanCondition"
                },
                "hiddenValues": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "visibleBackgroundColor": {
                    "$ref": "Color"
                },
                "visibleBackgroundColorStyle": {
                    "$ref": "ColorStyle"
                },
                "visibleForegroundColor": {
                    "$ref": "Color"
                },
                "visibleForegroundColorStyle": {
                    "$ref": "ColorStyle"
                }
            },
            "type": "object"
        },
        "FilterView": {
            "id": "FilterView",
            "properties": {
                "criteria": {
                    "additionalProperties": {
                        "$ref": "FilterCriteria"
                    },
                    "type": "object"
                },
                "filterViewId": {
                    "format": "int32",
                    "type": "integer"
                },
                "namedRangeId": {
                    "type": "string"
                },
                "range": {
                    "$ref": "GridRange"
                },
                "sortSpecs": {
                    "items": {
                        "$ref": "SortSpec"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FindReplaceRequest": {
            "id": "FindReplaceRequest",
            "properties": {
                "allSheets": {
                    "type": "boolean"
                },
                "find": {
                    "type": "string"
                },
                "includeFormulas": {
                    "type": "boolean"
                },
                "matchCase": {
                    "type": "boolean"
                },
                "matchEntireCell": {
                    "type": "boolean"
                },
                "range": {
                    "$ref": "GridRange"
                },
                "replacement": {
                    "type": "string"
                },
                "searchByRegex": {
                    "type": "boolean"
                },
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "FindReplaceResponse": {
            "id": "FindReplaceResponse",
            "properties": {
                "formulasChanged": {
                    "format": "int32",
                    "type": "integer"
                },
                "occurrencesChanged": {
                    "format": "int32",
                    "type": "integer"
                },
                "rowsChanged": {
                    "format": "int32",
                    "type": "integer"
                },
                "sheetsChanged": {
                    "format": "int32",
                    "type": "integer"
                },
                "valuesChanged": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GetSpreadsheetByDataFilterRequest": {
            "id": "GetSpreadsheetByDataFilterRequest",
            "properties": {
                "dataFilters": {
                    "items": {
                        "$ref": "DataFilter"
                    },
                    "type": "array"
                },
                "includeGridData": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GradientRule": {
            "id": "GradientRule",
            "properties": {
                "maxpoint": {
                    "$ref": "InterpolationPoint"
                },
                "midpoint": {
                    "$ref": "InterpolationPoint"
                },
                "minpoint": {
                    "$ref": "InterpolationPoint"
                }
            },
            "type": "object"
        },
        "GridCoordinate": {
            "id": "GridCoordinate",
            "properties": {
                "columnIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "rowIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GridData": {
            "id": "GridData",
            "properties": {
                "columnMetadata": {
                    "items": {
                        "$ref": "DimensionProperties"
                    },
                    "type": "array"
                },
                "rowData": {
                    "items": {
                        "$ref": "RowData"
                    },
                    "type": "array"
                },
                "rowMetadata": {
                    "items": {
                        "$ref": "DimensionProperties"
                    },
                    "type": "array"
                },
                "startColumn": {
                    "format": "int32",
                    "type": "integer"
                },
                "startRow": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GridProperties": {
            "id": "GridProperties",
            "properties": {
                "columnCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "columnGroupControlAfter": {
                    "type": "boolean"
                },
                "frozenColumnCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "frozenRowCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "hideGridlines": {
                    "type": "boolean"
                },
                "rowCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "rowGroupControlAfter": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GridRange": {
            "id": "GridRange",
            "properties": {
                "endColumnIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "endRowIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                },
                "startColumnIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "startRowIndex": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "HistogramChartSpec": {
            "id": "HistogramChartSpec",
            "properties": {
                "bucketSize": {
                    "format": "double",
                    "type": "number"
                },
                "legendPosition": {
                    "enum": [
                        "HISTOGRAM_CHART_LEGEND_POSITION_UNSPECIFIED",
                        "BOTTOM_LEGEND",
                        "LEFT_LEGEND",
                        "RIGHT_LEGEND",
                        "TOP_LEGEND",
                        "NO_LEGEND",
                        "INSIDE_LEGEND"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "The legend is rendered on the bottom of the chart.",
                        "The legend is rendered on the left of the chart.",
                        "The legend is rendered on the right of the chart.",
                        "The legend is rendered on the top of the chart.",
                        "No legend is rendered.",
                        "The legend is rendered inside the chart area."
                    ],
                    "type": "string"
                },
                "outlierPercentile": {
                    "format": "double",
                    "type": "number"
                },
                "series": {
                    "items": {
                        "$ref": "HistogramSeries"
                    },
                    "type": "array"
                },
                "showItemDividers": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "HistogramRule": {
            "id": "HistogramRule",
            "properties": {
                "end": {
                    "format": "double",
                    "type": "number"
                },
                "interval": {
                    "format": "double",
                    "type": "number"
                },
                "start": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "HistogramSeries": {
            "id": "HistogramSeries",
            "properties": {
                "barColor": {
                    "$ref": "Color"
                },
                "barColorStyle": {
                    "$ref": "ColorStyle"
                },
                "data": {
                    "$ref": "ChartData"
                }
            },
            "type": "object"
        },
        "InsertDimensionRequest": {
            "id": "InsertDimensionRequest",
            "properties": {
                "inheritFromBefore": {
                    "type": "boolean"
                },
                "range": {
                    "$ref": "DimensionRange"
                }
            },
            "type": "object"
        },
        "InsertRangeRequest": {
            "id": "InsertRangeRequest",
            "properties": {
                "range": {
                    "$ref": "GridRange"
                },
                "shiftDimension": {
                    "enum": [
                        "DIMENSION_UNSPECIFIED",
                        "ROWS",
                        "COLUMNS"
                    ],
                    "enumDescriptions": [
                        "The default value, do not use.",
                        "Operates on the rows of a sheet.",
                        "Operates on the columns of a sheet."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InterpolationPoint": {
            "id": "InterpolationPoint",
            "properties": {
                "color": {
                    "$ref": "Color"
                },
                "colorStyle": {
                    "$ref": "ColorStyle"
                },
                "type": {
                    "enum": [
                        "INTERPOLATION_POINT_TYPE_UNSPECIFIED",
                        "MIN",
                        "MAX",
                        "NUMBER",
                        "PERCENT",
                        "PERCENTILE"
                    ],
                    "enumDescriptions": [
                        "The default value, do not use.",
                        "The interpolation point uses the minimum value in the\ncells over the range of the conditional format.",
                        "The interpolation point uses the maximum value in the\ncells over the range of the conditional format.",
                        "The interpolation point uses exactly the value in\nInterpolationPoint.value.",
                        "The interpolation point is the given percentage over\nall the cells in the range of the conditional format.\nThis is equivalent to NUMBER if the value was:\n`=(MAX(FLATTEN(range)) * (value / 100))\n  + (MIN(FLATTEN(range)) * (1 - (value / 100)))`\n(where errors in the range are ignored when flattening).",
                        "The interpolation point is the given percentile\nover all the cells in the range of the conditional format.\nThis is equivalent to NUMBER if the value was:\n`=PERCENTILE(FLATTEN(range), value / 100)`\n(where errors in the range are ignored when flattening)."
                    ],
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IterativeCalculationSettings": {
            "id": "IterativeCalculationSettings",
            "properties": {
                "convergenceThreshold": {
                    "format": "double",
                    "type": "number"
                },
                "maxIterations": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "KeyValueFormat": {
            "id": "KeyValueFormat",
            "properties": {
                "position": {
                    "$ref": "TextPosition"
                },
                "textFormat": {
                    "$ref": "TextFormat"
                }
            },
            "type": "object"
        },
        "LineStyle": {
            "id": "LineStyle",
            "properties": {
                "type": {
                    "enum": [
                        "LINE_DASH_TYPE_UNSPECIFIED",
                        "INVISIBLE",
                        "CUSTOM",
                        "SOLID",
                        "DOTTED",
                        "MEDIUM_DASHED",
                        "MEDIUM_DASHED_DOTTED",
                        "LONG_DASHED",
                        "LONG_DASHED_DOTTED"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "No dash type, which is equivalent to a non-visible line.",
                        "A custom dash for a line. Modifying the exact custom dash style is\ncurrently unsupported.",
                        "A solid line.",
                        "A dotted line.",
                        "A dashed line where the dashes have \"medium\" length.",
                        "A line that alternates between a \"medium\" dash and a dot.",
                        "A dashed line where the dashes have \"long\" length.",
                        "A line that alternates between a \"long\" dash and a dot."
                    ],
                    "type": "string"
                },
                "width": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ManualRule": {
            "id": "ManualRule",
            "properties": {
                "groups": {
                    "items": {
                        "$ref": "ManualRuleGroup"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ManualRuleGroup": {
            "id": "ManualRuleGroup",
            "properties": {
                "groupName": {
                    "$ref": "ExtendedValue"
                },
                "items": {
                    "items": {
                        "$ref": "ExtendedValue"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MatchedDeveloperMetadata": {
            "id": "MatchedDeveloperMetadata",
            "properties": {
                "dataFilters": {
                    "items": {
                        "$ref": "DataFilter"
                    },
                    "type": "array"
                },
                "developerMetadata": {
                    "$ref": "DeveloperMetadata"
                }
            },
            "type": "object"
        },
        "MatchedValueRange": {
            "id": "MatchedValueRange",
            "properties": {
                "dataFilters": {
                    "items": {
                        "$ref": "DataFilter"
                    },
                    "type": "array"
                },
                "valueRange": {
                    "$ref": "ValueRange"
                }
            },
            "type": "object"
        },
        "MergeCellsRequest": {
            "id": "MergeCellsRequest",
            "properties": {
                "mergeType": {
                    "enum": [
                        "MERGE_ALL",
                        "MERGE_COLUMNS",
                        "MERGE_ROWS"
                    ],
                    "enumDescriptions": [
                        "Create a single merge from the range",
                        "Create a merge for each column in the range",
                        "Create a merge for each row in the range"
                    ],
                    "type": "string"
                },
                "range": {
                    "$ref": "GridRange"
                }
            },
            "type": "object"
        },
        "MoveDimensionRequest": {
            "id": "MoveDimensionRequest",
            "properties": {
                "destinationIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "source": {
                    "$ref": "DimensionRange"
                }
            },
            "type": "object"
        },
        "NamedRange": {
            "id": "NamedRange",
            "properties": {
                "name": {
                    "type": "string"
                },
                "namedRangeId": {
                    "type": "string"
                },
                "range": {
                    "$ref": "GridRange"
                }
            },
            "type": "object"
        },
        "NumberFormat": {
            "id": "NumberFormat",
            "properties": {
                "pattern": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "NUMBER_FORMAT_TYPE_UNSPECIFIED",
                        "TEXT",
                        "NUMBER",
                        "PERCENT",
                        "CURRENCY",
                        "DATE",
                        "TIME",
                        "DATE_TIME",
                        "SCIENTIFIC"
                    ],
                    "enumDescriptions": [
                        "The number format is not specified\nand is based on the contents of the cell.\nDo not explicitly use this.",
                        "Text formatting, e.g `1000.12`",
                        "Number formatting, e.g, `1,000.12`",
                        "Percent formatting, e.g `10.12%`",
                        "Currency formatting, e.g `$1,000.12`",
                        "Date formatting, e.g `9/26/2008`",
                        "Time formatting, e.g `3:59:00 PM`",
                        "Date+Time formatting, e.g `9/26/08 15:59:00`",
                        "Scientific number formatting, e.g `1.01E+03`"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OrgChartSpec": {
            "id": "OrgChartSpec",
            "properties": {
                "labels": {
                    "$ref": "ChartData"
                },
                "nodeColor": {
                    "$ref": "Color"
                },
                "nodeColorStyle": {
                    "$ref": "ColorStyle"
                },
                "nodeSize": {
                    "enum": [
                        "ORG_CHART_LABEL_SIZE_UNSPECIFIED",
                        "SMALL",
                        "MEDIUM",
                        "LARGE"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "The small org chart node size.",
                        "The medium org chart node size.",
                        "The large org chart node size."
                    ],
                    "type": "string"
                },
                "parentLabels": {
                    "$ref": "ChartData"
                },
                "selectedNodeColor": {
                    "$ref": "Color"
                },
                "selectedNodeColorStyle": {
                    "$ref": "ColorStyle"
                },
                "tooltips": {
                    "$ref": "ChartData"
                }
            },
            "type": "object"
        },
        "OverlayPosition": {
            "id": "OverlayPosition",
            "properties": {
                "anchorCell": {
                    "$ref": "GridCoordinate"
                },
                "heightPixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "offsetXPixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "offsetYPixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "widthPixels": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Padding": {
            "id": "Padding",
            "properties": {
                "bottom": {
                    "format": "int32",
                    "type": "integer"
                },
                "left": {
                    "format": "int32",
                    "type": "integer"
                },
                "right": {
                    "format": "int32",
                    "type": "integer"
                },
                "top": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PasteDataRequest": {
            "id": "PasteDataRequest",
            "properties": {
                "coordinate": {
                    "$ref": "GridCoordinate"
                },
                "data": {
                    "type": "string"
                },
                "delimiter": {
                    "type": "string"
                },
                "html": {
                    "type": "boolean"
                },
                "type": {
                    "enum": [
                        "PASTE_NORMAL",
                        "PASTE_VALUES",
                        "PASTE_FORMAT",
                        "PASTE_NO_BORDERS",
                        "PASTE_FORMULA",
                        "PASTE_DATA_VALIDATION",
                        "PASTE_CONDITIONAL_FORMATTING"
                    ],
                    "enumDescriptions": [
                        "Paste values, formulas, formats, and merges.",
                        "Paste the values ONLY without formats, formulas, or merges.",
                        "Paste the format and data validation only.",
                        "Like PASTE_NORMAL but without borders.",
                        "Paste the formulas only.",
                        "Paste the data validation only.",
                        "Paste the conditional formatting rules only."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PieChartSpec": {
            "id": "PieChartSpec",
            "properties": {
                "domain": {
                    "$ref": "ChartData"
                },
                "legendPosition": {
                    "enum": [
                        "PIE_CHART_LEGEND_POSITION_UNSPECIFIED",
                        "BOTTOM_LEGEND",
                        "LEFT_LEGEND",
                        "RIGHT_LEGEND",
                        "TOP_LEGEND",
                        "NO_LEGEND",
                        "LABELED_LEGEND"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "The legend is rendered on the bottom of the chart.",
                        "The legend is rendered on the left of the chart.",
                        "The legend is rendered on the right of the chart.",
                        "The legend is rendered on the top of the chart.",
                        "No legend is rendered.",
                        "Each pie slice has a label attached to it."
                    ],
                    "type": "string"
                },
                "pieHole": {
                    "format": "double",
                    "type": "number"
                },
                "series": {
                    "$ref": "ChartData"
                },
                "threeDimensional": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PivotFilterCriteria": {
            "id": "PivotFilterCriteria",
            "properties": {
                "visibleValues": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PivotGroup": {
            "id": "PivotGroup",
            "properties": {
                "groupRule": {
                    "$ref": "PivotGroupRule"
                },
                "label": {
                    "type": "string"
                },
                "repeatHeadings": {
                    "type": "boolean"
                },
                "showTotals": {
                    "type": "boolean"
                },
                "sortOrder": {
                    "enum": [
                        "SORT_ORDER_UNSPECIFIED",
                        "ASCENDING",
                        "DESCENDING"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use this.",
                        "Sort ascending.",
                        "Sort descending."
                    ],
                    "type": "string"
                },
                "sourceColumnOffset": {
                    "format": "int32",
                    "type": "integer"
                },
                "valueBucket": {
                    "$ref": "PivotGroupSortValueBucket"
                },
                "valueMetadata": {
                    "items": {
                        "$ref": "PivotGroupValueMetadata"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PivotGroupRule": {
            "id": "PivotGroupRule",
            "properties": {
                "dateTimeRule": {
                    "$ref": "DateTimeRule"
                },
                "histogramRule": {
                    "$ref": "HistogramRule"
                },
                "manualRule": {
                    "$ref": "ManualRule"
                }
            },
            "type": "object"
        },
        "PivotGroupSortValueBucket": {
            "id": "PivotGroupSortValueBucket",
            "properties": {
                "buckets": {
                    "items": {
                        "$ref": "ExtendedValue"
                    },
                    "type": "array"
                },
                "valuesIndex": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PivotGroupValueMetadata": {
            "id": "PivotGroupValueMetadata",
            "properties": {
                "collapsed": {
                    "type": "boolean"
                },
                "value": {
                    "$ref": "ExtendedValue"
                }
            },
            "type": "object"
        },
        "PivotTable": {
            "id": "PivotTable",
            "properties": {
                "columns": {
                    "items": {
                        "$ref": "PivotGroup"
                    },
                    "type": "array"
                },
                "criteria": {
                    "additionalProperties": {
                        "$ref": "PivotFilterCriteria"
                    },
                    "type": "object"
                },
                "rows": {
                    "items": {
                        "$ref": "PivotGroup"
                    },
                    "type": "array"
                },
                "source": {
                    "$ref": "GridRange"
                },
                "valueLayout": {
                    "enum": [
                        "HORIZONTAL",
                        "VERTICAL"
                    ],
                    "enumDescriptions": [
                        "Values are laid out horizontally (as columns).",
                        "Values are laid out vertically (as rows)."
                    ],
                    "type": "string"
                },
                "values": {
                    "items": {
                        "$ref": "PivotValue"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PivotValue": {
            "id": "PivotValue",
            "properties": {
                "calculatedDisplayType": {
                    "enum": [
                        "PIVOT_VALUE_CALCULATED_DISPLAY_TYPE_UNSPECIFIED",
                        "PERCENT_OF_ROW_TOTAL",
                        "PERCENT_OF_COLUMN_TOTAL",
                        "PERCENT_OF_GRAND_TOTAL"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "Shows the pivot values as percentage of the row total values.",
                        "Shows the pivot values as percentage of the column total values.",
                        "Shows the pivot values as percentage of the grand total values."
                    ],
                    "type": "string"
                },
                "formula": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sourceColumnOffset": {
                    "format": "int32",
                    "type": "integer"
                },
                "summarizeFunction": {
                    "enum": [
                        "PIVOT_STANDARD_VALUE_FUNCTION_UNSPECIFIED",
                        "SUM",
                        "COUNTA",
                        "COUNT",
                        "COUNTUNIQUE",
                        "AVERAGE",
                        "MAX",
                        "MIN",
                        "MEDIAN",
                        "PRODUCT",
                        "STDEV",
                        "STDEVP",
                        "VAR",
                        "VARP",
                        "CUSTOM"
                    ],
                    "enumDescriptions": [
                        "The default, do not use.",
                        "Corresponds to the `SUM` function.",
                        "Corresponds to the `COUNTA` function.",
                        "Corresponds to the `COUNT` function.",
                        "Corresponds to the `COUNTUNIQUE` function.",
                        "Corresponds to the `AVERAGE` function.",
                        "Corresponds to the `MAX` function.",
                        "Corresponds to the `MIN` function.",
                        "Corresponds to the `MEDIAN` function.",
                        "Corresponds to the `PRODUCT` function.",
                        "Corresponds to the `STDEV` function.",
                        "Corresponds to the `STDEVP` function.",
                        "Corresponds to the `VAR` function.",
                        "Corresponds to the `VARP` function.",
                        "Indicates the formula should be used as-is.\nOnly valid if PivotValue.formula was set."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProtectedRange": {
            "id": "ProtectedRange",
            "properties": {
                "editors": {
                    "$ref": "Editors"
                },
                "namedRangeId": {
                    "type": "string"
                },
                "protectedRangeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "range": {
                    "$ref": "GridRange"
                },
                "requestingUserCanEdit": {
                    "type": "boolean"
                },
                "unprotectedRanges": {
                    "items": {
                        "$ref": "GridRange"
                    },
                    "type": "array"
                },
                "warningOnly": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RandomizeRangeRequest": {
            "id": "RandomizeRangeRequest",
            "properties": {
                "range": {
                    "$ref": "GridRange"
                }
            },
            "type": "object"
        },
        "RepeatCellRequest": {
            "id": "RepeatCellRequest",
            "properties": {
                "cell": {
                    "$ref": "CellData"
                },
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "range": {
                    "$ref": "GridRange"
                }
            },
            "type": "object"
        },
        "Request": {
            "id": "Request",
            "properties": {
                "addBanding": {
                    "$ref": "AddBandingRequest"
                },
                "addChart": {
                    "$ref": "AddChartRequest"
                },
                "addConditionalFormatRule": {
                    "$ref": "AddConditionalFormatRuleRequest"
                },
                "addDimensionGroup": {
                    "$ref": "AddDimensionGroupRequest"
                },
                "addFilterView": {
                    "$ref": "AddFilterViewRequest"
                },
                "addNamedRange": {
                    "$ref": "AddNamedRangeRequest"
                },
                "addProtectedRange": {
                    "$ref": "AddProtectedRangeRequest"
                },
                "addSheet": {
                    "$ref": "AddSheetRequest"
                },
                "addSlicer": {
                    "$ref": "AddSlicerRequest"
                },
                "appendCells": {
                    "$ref": "AppendCellsRequest"
                },
                "appendDimension": {
                    "$ref": "AppendDimensionRequest"
                },
                "autoFill": {
                    "$ref": "AutoFillRequest"
                },
                "autoResizeDimensions": {
                    "$ref": "AutoResizeDimensionsRequest"
                },
                "clearBasicFilter": {
                    "$ref": "ClearBasicFilterRequest"
                },
                "copyPaste": {
                    "$ref": "CopyPasteRequest"
                },
                "createDeveloperMetadata": {
                    "$ref": "CreateDeveloperMetadataRequest"
                },
                "cutPaste": {
                    "$ref": "CutPasteRequest"
                },
                "deleteBanding": {
                    "$ref": "DeleteBandingRequest"
                },
                "deleteConditionalFormatRule": {
                    "$ref": "DeleteConditionalFormatRuleRequest"
                },
                "deleteDeveloperMetadata": {
                    "$ref": "DeleteDeveloperMetadataRequest"
                },
                "deleteDimension": {
                    "$ref": "DeleteDimensionRequest"
                },
                "deleteDimensionGroup": {
                    "$ref": "DeleteDimensionGroupRequest"
                },
                "deleteDuplicates": {
                    "$ref": "DeleteDuplicatesRequest"
                },
                "deleteEmbeddedObject": {
                    "$ref": "DeleteEmbeddedObjectRequest"
                },
                "deleteFilterView": {
                    "$ref": "DeleteFilterViewRequest"
                },
                "deleteNamedRange": {
                    "$ref": "DeleteNamedRangeRequest"
                },
                "deleteProtectedRange": {
                    "$ref": "DeleteProtectedRangeRequest"
                },
                "deleteRange": {
                    "$ref": "DeleteRangeRequest"
                },
                "deleteSheet": {
                    "$ref": "DeleteSheetRequest"
                },
                "duplicateFilterView": {
                    "$ref": "DuplicateFilterViewRequest"
                },
                "duplicateSheet": {
                    "$ref": "DuplicateSheetRequest"
                },
                "findReplace": {
                    "$ref": "FindReplaceRequest"
                },
                "insertDimension": {
                    "$ref": "InsertDimensionRequest"
                },
                "insertRange": {
                    "$ref": "InsertRangeRequest"
                },
                "mergeCells": {
                    "$ref": "MergeCellsRequest"
                },
                "moveDimension": {
                    "$ref": "MoveDimensionRequest"
                },
                "pasteData": {
                    "$ref": "PasteDataRequest"
                },
                "randomizeRange": {
                    "$ref": "RandomizeRangeRequest"
                },
                "repeatCell": {
                    "$ref": "RepeatCellRequest"
                },
                "setBasicFilter": {
                    "$ref": "SetBasicFilterRequest"
                },
                "setDataValidation": {
                    "$ref": "SetDataValidationRequest"
                },
                "sortRange": {
                    "$ref": "SortRangeRequest"
                },
                "textToColumns": {
                    "$ref": "TextToColumnsRequest"
                },
                "trimWhitespace": {
                    "$ref": "TrimWhitespaceRequest"
                },
                "unmergeCells": {
                    "$ref": "UnmergeCellsRequest"
                },
                "updateBanding": {
                    "$ref": "UpdateBandingRequest"
                },
                "updateBorders": {
                    "$ref": "UpdateBordersRequest"
                },
                "updateCells": {
                    "$ref": "UpdateCellsRequest"
                },
                "updateChartSpec": {
                    "$ref": "UpdateChartSpecRequest"
                },
                "updateConditionalFormatRule": {
                    "$ref": "UpdateConditionalFormatRuleRequest"
                },
                "updateDeveloperMetadata": {
                    "$ref": "UpdateDeveloperMetadataRequest"
                },
                "updateDimensionGroup": {
                    "$ref": "UpdateDimensionGroupRequest"
                },
                "updateDimensionProperties": {
                    "$ref": "UpdateDimensionPropertiesRequest"
                },
                "updateEmbeddedObjectPosition": {
                    "$ref": "UpdateEmbeddedObjectPositionRequest"
                },
                "updateFilterView": {
                    "$ref": "UpdateFilterViewRequest"
                },
                "updateNamedRange": {
                    "$ref": "UpdateNamedRangeRequest"
                },
                "updateProtectedRange": {
                    "$ref": "UpdateProtectedRangeRequest"
                },
                "updateSheetProperties": {
                    "$ref": "UpdateSheetPropertiesRequest"
                },
                "updateSlicerSpec": {
                    "$ref": "UpdateSlicerSpecRequest"
                },
                "updateSpreadsheetProperties": {
                    "$ref": "UpdateSpreadsheetPropertiesRequest"
                }
            },
            "type": "object"
        },
        "Response": {
            "id": "Response",
            "properties": {
                "addBanding": {
                    "$ref": "AddBandingResponse"
                },
                "addChart": {
                    "$ref": "AddChartResponse"
                },
                "addDimensionGroup": {
                    "$ref": "AddDimensionGroupResponse"
                },
                "addFilterView": {
                    "$ref": "AddFilterViewResponse"
                },
                "addNamedRange": {
                    "$ref": "AddNamedRangeResponse"
                },
                "addProtectedRange": {
                    "$ref": "AddProtectedRangeResponse"
                },
                "addSheet": {
                    "$ref": "AddSheetResponse"
                },
                "addSlicer": {
                    "$ref": "AddSlicerResponse"
                },
                "createDeveloperMetadata": {
                    "$ref": "CreateDeveloperMetadataResponse"
                },
                "deleteConditionalFormatRule": {
                    "$ref": "DeleteConditionalFormatRuleResponse"
                },
                "deleteDeveloperMetadata": {
                    "$ref": "DeleteDeveloperMetadataResponse"
                },
                "deleteDimensionGroup": {
                    "$ref": "DeleteDimensionGroupResponse"
                },
                "deleteDuplicates": {
                    "$ref": "DeleteDuplicatesResponse"
                },
                "duplicateFilterView": {
                    "$ref": "DuplicateFilterViewResponse"
                },
                "duplicateSheet": {
                    "$ref": "DuplicateSheetResponse"
                },
                "findReplace": {
                    "$ref": "FindReplaceResponse"
                },
                "trimWhitespace": {
                    "$ref": "TrimWhitespaceResponse"
                },
                "updateConditionalFormatRule": {
                    "$ref": "UpdateConditionalFormatRuleResponse"
                },
                "updateDeveloperMetadata": {
                    "$ref": "UpdateDeveloperMetadataResponse"
                },
                "updateEmbeddedObjectPosition": {
                    "$ref": "UpdateEmbeddedObjectPositionResponse"
                }
            },
            "type": "object"
        },
        "RowData": {
            "id": "RowData",
            "properties": {
                "values": {
                    "items": {
                        "$ref": "CellData"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ScorecardChartSpec": {
            "id": "ScorecardChartSpec",
            "properties": {
                "aggregateType": {
                    "enum": [
                        "CHART_AGGREGATE_TYPE_UNSPECIFIED",
                        "AVERAGE",
                        "COUNT",
                        "MAX",
                        "MEDIAN",
                        "MIN",
                        "SUM"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "Average aggregate function.",
                        "Count aggregate function.",
                        "Maximum aggregate function.",
                        "Median aggregate function.",
                        "Minimum aggregate function.",
                        "Sum aggregate function."
                    ],
                    "type": "string"
                },
                "baselineValueData": {
                    "$ref": "ChartData"
                },
                "baselineValueFormat": {
                    "$ref": "BaselineValueFormat"
                },
                "customFormatOptions": {
                    "$ref": "ChartCustomNumberFormatOptions"
                },
                "keyValueData": {
                    "$ref": "ChartData"
                },
                "keyValueFormat": {
                    "$ref": "KeyValueFormat"
                },
                "numberFormatSource": {
                    "enum": [
                        "CHART_NUMBER_FORMAT_SOURCE_UNDEFINED",
                        "FROM_DATA",
                        "CUSTOM"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "Inherit number formatting from data.",
                        "Apply custom formatting as specified by ChartCustomNumberFormatOptions."
                    ],
                    "type": "string"
                },
                "scaleFactor": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "SearchDeveloperMetadataRequest": {
            "id": "SearchDeveloperMetadataRequest",
            "properties": {
                "dataFilters": {
                    "items": {
                        "$ref": "DataFilter"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchDeveloperMetadataResponse": {
            "id": "SearchDeveloperMetadataResponse",
            "properties": {
                "matchedDeveloperMetadata": {
                    "items": {
                        "$ref": "MatchedDeveloperMetadata"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SetBasicFilterRequest": {
            "id": "SetBasicFilterRequest",
            "properties": {
                "filter": {
                    "$ref": "BasicFilter"
                }
            },
            "type": "object"
        },
        "SetDataValidationRequest": {
            "id": "SetDataValidationRequest",
            "properties": {
                "range": {
                    "$ref": "GridRange"
                },
                "rule": {
                    "$ref": "DataValidationRule"
                }
            },
            "type": "object"
        },
        "Sheet": {
            "id": "Sheet",
            "properties": {
                "bandedRanges": {
                    "items": {
                        "$ref": "BandedRange"
                    },
                    "type": "array"
                },
                "basicFilter": {
                    "$ref": "BasicFilter"
                },
                "charts": {
                    "items": {
                        "$ref": "EmbeddedChart"
                    },
                    "type": "array"
                },
                "columnGroups": {
                    "items": {
                        "$ref": "DimensionGroup"
                    },
                    "type": "array"
                },
                "conditionalFormats": {
                    "items": {
                        "$ref": "ConditionalFormatRule"
                    },
                    "type": "array"
                },
                "data": {
                    "items": {
                        "$ref": "GridData"
                    },
                    "type": "array"
                },
                "developerMetadata": {
                    "items": {
                        "$ref": "DeveloperMetadata"
                    },
                    "type": "array"
                },
                "filterViews": {
                    "items": {
                        "$ref": "FilterView"
                    },
                    "type": "array"
                },
                "merges": {
                    "items": {
                        "$ref": "GridRange"
                    },
                    "type": "array"
                },
                "properties": {
                    "$ref": "SheetProperties"
                },
                "protectedRanges": {
                    "items": {
                        "$ref": "ProtectedRange"
                    },
                    "type": "array"
                },
                "rowGroups": {
                    "items": {
                        "$ref": "DimensionGroup"
                    },
                    "type": "array"
                },
                "slicers": {
                    "items": {
                        "$ref": "Slicer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SheetProperties": {
            "id": "SheetProperties",
            "properties": {
                "gridProperties": {
                    "$ref": "GridProperties"
                },
                "hidden": {
                    "type": "boolean"
                },
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "rightToLeft": {
                    "type": "boolean"
                },
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                },
                "sheetType": {
                    "enum": [
                        "SHEET_TYPE_UNSPECIFIED",
                        "GRID",
                        "OBJECT"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "The sheet is a grid.",
                        "The sheet has no grid and instead has an object like a chart or image."
                    ],
                    "type": "string"
                },
                "tabColor": {
                    "$ref": "Color"
                },
                "tabColorStyle": {
                    "$ref": "ColorStyle"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Slicer": {
            "id": "Slicer",
            "properties": {
                "position": {
                    "$ref": "EmbeddedObjectPosition"
                },
                "slicerId": {
                    "format": "int32",
                    "type": "integer"
                },
                "spec": {
                    "$ref": "SlicerSpec"
                }
            },
            "type": "object"
        },
        "SlicerSpec": {
            "id": "SlicerSpec",
            "properties": {
                "applyToPivotTables": {
                    "type": "boolean"
                },
                "backgroundColor": {
                    "$ref": "Color"
                },
                "backgroundColorStyle": {
                    "$ref": "ColorStyle"
                },
                "columnIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataRange": {
                    "$ref": "GridRange"
                },
                "filterCriteria": {
                    "$ref": "FilterCriteria"
                },
                "horizontalAlignment": {
                    "enum": [
                        "HORIZONTAL_ALIGN_UNSPECIFIED",
                        "LEFT",
                        "CENTER",
                        "RIGHT"
                    ],
                    "enumDescriptions": [
                        "The horizontal alignment is not specified. Do not use this.",
                        "The text is explicitly aligned to the left of the cell.",
                        "The text is explicitly aligned to the center of the cell.",
                        "The text is explicitly aligned to the right of the cell."
                    ],
                    "type": "string"
                },
                "textFormat": {
                    "$ref": "TextFormat"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SortRangeRequest": {
            "id": "SortRangeRequest",
            "properties": {
                "range": {
                    "$ref": "GridRange"
                },
                "sortSpecs": {
                    "items": {
                        "$ref": "SortSpec"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SortSpec": {
            "id": "SortSpec",
            "properties": {
                "backgroundColor": {
                    "$ref": "Color"
                },
                "backgroundColorStyle": {
                    "$ref": "ColorStyle"
                },
                "dimensionIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "foregroundColor": {
                    "$ref": "Color"
                },
                "foregroundColorStyle": {
                    "$ref": "ColorStyle"
                },
                "sortOrder": {
                    "enum": [
                        "SORT_ORDER_UNSPECIFIED",
                        "ASCENDING",
                        "DESCENDING"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use this.",
                        "Sort ascending.",
                        "Sort descending."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SourceAndDestination": {
            "id": "SourceAndDestination",
            "properties": {
                "dimension": {
                    "enum": [
                        "DIMENSION_UNSPECIFIED",
                        "ROWS",
                        "COLUMNS"
                    ],
                    "enumDescriptions": [
                        "The default value, do not use.",
                        "Operates on the rows of a sheet.",
                        "Operates on the columns of a sheet."
                    ],
                    "type": "string"
                },
                "fillLength": {
                    "format": "int32",
                    "type": "integer"
                },
                "source": {
                    "$ref": "GridRange"
                }
            },
            "type": "object"
        },
        "Spreadsheet": {
            "id": "Spreadsheet",
            "properties": {
                "developerMetadata": {
                    "items": {
                        "$ref": "DeveloperMetadata"
                    },
                    "type": "array"
                },
                "namedRanges": {
                    "items": {
                        "$ref": "NamedRange"
                    },
                    "type": "array"
                },
                "properties": {
                    "$ref": "SpreadsheetProperties"
                },
                "sheets": {
                    "items": {
                        "$ref": "Sheet"
                    },
                    "type": "array"
                },
                "spreadsheetId": {
                    "type": "string"
                },
                "spreadsheetUrl": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SpreadsheetProperties": {
            "id": "SpreadsheetProperties",
            "properties": {
                "autoRecalc": {
                    "enum": [
                        "RECALCULATION_INTERVAL_UNSPECIFIED",
                        "ON_CHANGE",
                        "MINUTE",
                        "HOUR"
                    ],
                    "enumDescriptions": [
                        "Default value. This value must not be used.",
                        "Volatile functions are updated on every change.",
                        "Volatile functions are updated on every change and every minute.",
                        "Volatile functions are updated on every change and hourly."
                    ],
                    "type": "string"
                },
                "defaultFormat": {
                    "$ref": "CellFormat"
                },
                "iterativeCalculationSettings": {
                    "$ref": "IterativeCalculationSettings"
                },
                "locale": {
                    "type": "string"
                },
                "spreadsheetTheme": {
                    "$ref": "SpreadsheetTheme"
                },
                "timeZone": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SpreadsheetTheme": {
            "id": "SpreadsheetTheme",
            "properties": {
                "primaryFontFamily": {
                    "type": "string"
                },
                "themeColors": {
                    "items": {
                        "$ref": "ThemeColorPair"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TextFormat": {
            "id": "TextFormat",
            "properties": {
                "bold": {
                    "type": "boolean"
                },
                "fontFamily": {
                    "type": "string"
                },
                "fontSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "foregroundColor": {
                    "$ref": "Color"
                },
                "foregroundColorStyle": {
                    "$ref": "ColorStyle"
                },
                "italic": {
                    "type": "boolean"
                },
                "strikethrough": {
                    "type": "boolean"
                },
                "underline": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "TextFormatRun": {
            "id": "TextFormatRun",
            "properties": {
                "format": {
                    "$ref": "TextFormat"
                },
                "startIndex": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "TextPosition": {
            "id": "TextPosition",
            "properties": {
                "horizontalAlignment": {
                    "enum": [
                        "HORIZONTAL_ALIGN_UNSPECIFIED",
                        "LEFT",
                        "CENTER",
                        "RIGHT"
                    ],
                    "enumDescriptions": [
                        "The horizontal alignment is not specified. Do not use this.",
                        "The text is explicitly aligned to the left of the cell.",
                        "The text is explicitly aligned to the center of the cell.",
                        "The text is explicitly aligned to the right of the cell."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TextRotation": {
            "id": "TextRotation",
            "properties": {
                "angle": {
                    "format": "int32",
                    "type": "integer"
                },
                "vertical": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "TextToColumnsRequest": {
            "id": "TextToColumnsRequest",
            "properties": {
                "delimiter": {
                    "type": "string"
                },
                "delimiterType": {
                    "enum": [
                        "DELIMITER_TYPE_UNSPECIFIED",
                        "COMMA",
                        "SEMICOLON",
                        "PERIOD",
                        "SPACE",
                        "CUSTOM",
                        "AUTODETECT"
                    ],
                    "enumDescriptions": [
                        "Default value. This value must not be used.",
                        "\",\"",
                        "\";\"",
                        "\".\"",
                        "\" \"",
                        "A custom value as defined in delimiter.",
                        "Automatically detect columns."
                    ],
                    "type": "string"
                },
                "source": {
                    "$ref": "GridRange"
                }
            },
            "type": "object"
        },
        "ThemeColorPair": {
            "id": "ThemeColorPair",
            "properties": {
                "color": {
                    "$ref": "ColorStyle"
                },
                "colorType": {
                    "enum": [
                        "THEME_COLOR_TYPE_UNSPECIFIED",
                        "TEXT",
                        "BACKGROUND",
                        "ACCENT1",
                        "ACCENT2",
                        "ACCENT3",
                        "ACCENT4",
                        "ACCENT5",
                        "ACCENT6",
                        "LINK"
                    ],
                    "enumDescriptions": [
                        "Unspecified theme color",
                        "Represents the primary text color",
                        "Represents the primary background color",
                        "Represents the first accent color",
                        "Represents the second accent color",
                        "Represents the third accent color",
                        "Represents the fourth accent color",
                        "Represents the fifth accent color",
                        "Represents the sixth accent color",
                        "Represents the color to use for hyperlinks"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TreemapChartColorScale": {
            "id": "TreemapChartColorScale",
            "properties": {
                "maxValueColor": {
                    "$ref": "Color"
                },
                "maxValueColorStyle": {
                    "$ref": "ColorStyle"
                },
                "midValueColor": {
                    "$ref": "Color"
                },
                "midValueColorStyle": {
                    "$ref": "ColorStyle"
                },
                "minValueColor": {
                    "$ref": "Color"
                },
                "minValueColorStyle": {
                    "$ref": "ColorStyle"
                },
                "noDataColor": {
                    "$ref": "Color"
                },
                "noDataColorStyle": {
                    "$ref": "ColorStyle"
                }
            },
            "type": "object"
        },
        "TreemapChartSpec": {
            "id": "TreemapChartSpec",
            "properties": {
                "colorData": {
                    "$ref": "ChartData"
                },
                "colorScale": {
                    "$ref": "TreemapChartColorScale"
                },
                "headerColor": {
                    "$ref": "Color"
                },
                "headerColorStyle": {
                    "$ref": "ColorStyle"
                },
                "hideTooltips": {
                    "type": "boolean"
                },
                "hintedLevels": {
                    "format": "int32",
                    "type": "integer"
                },
                "labels": {
                    "$ref": "ChartData"
                },
                "levels": {
                    "format": "int32",
                    "type": "integer"
                },
                "maxValue": {
                    "format": "double",
                    "type": "number"
                },
                "minValue": {
                    "format": "double",
                    "type": "number"
                },
                "parentLabels": {
                    "$ref": "ChartData"
                },
                "sizeData": {
                    "$ref": "ChartData"
                },
                "textFormat": {
                    "$ref": "TextFormat"
                }
            },
            "type": "object"
        },
        "TrimWhitespaceRequest": {
            "id": "TrimWhitespaceRequest",
            "properties": {
                "range": {
                    "$ref": "GridRange"
                }
            },
            "type": "object"
        },
        "TrimWhitespaceResponse": {
            "id": "TrimWhitespaceResponse",
            "properties": {
                "cellsChangedCount": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UnmergeCellsRequest": {
            "id": "UnmergeCellsRequest",
            "properties": {
                "range": {
                    "$ref": "GridRange"
                }
            },
            "type": "object"
        },
        "UpdateBandingRequest": {
            "id": "UpdateBandingRequest",
            "properties": {
                "bandedRange": {
                    "$ref": "BandedRange"
                },
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateBordersRequest": {
            "id": "UpdateBordersRequest",
            "properties": {
                "bottom": {
                    "$ref": "Border"
                },
                "innerHorizontal": {
                    "$ref": "Border"
                },
                "innerVertical": {
                    "$ref": "Border"
                },
                "left": {
                    "$ref": "Border"
                },
                "range": {
                    "$ref": "GridRange"
                },
                "right": {
                    "$ref": "Border"
                },
                "top": {
                    "$ref": "Border"
                }
            },
            "type": "object"
        },
        "UpdateCellsRequest": {
            "id": "UpdateCellsRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "range": {
                    "$ref": "GridRange"
                },
                "rows": {
                    "items": {
                        "$ref": "RowData"
                    },
                    "type": "array"
                },
                "start": {
                    "$ref": "GridCoordinate"
                }
            },
            "type": "object"
        },
        "UpdateChartSpecRequest": {
            "id": "UpdateChartSpecRequest",
            "properties": {
                "chartId": {
                    "format": "int32",
                    "type": "integer"
                },
                "spec": {
                    "$ref": "ChartSpec"
                }
            },
            "type": "object"
        },
        "UpdateConditionalFormatRuleRequest": {
            "id": "UpdateConditionalFormatRuleRequest",
            "properties": {
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "newIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "rule": {
                    "$ref": "ConditionalFormatRule"
                },
                "sheetId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UpdateConditionalFormatRuleResponse": {
            "id": "UpdateConditionalFormatRuleResponse",
            "properties": {
                "newIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "newRule": {
                    "$ref": "ConditionalFormatRule"
                },
                "oldIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "oldRule": {
                    "$ref": "ConditionalFormatRule"
                }
            },
            "type": "object"
        },
        "UpdateDeveloperMetadataRequest": {
            "id": "UpdateDeveloperMetadataRequest",
            "properties": {
                "dataFilters": {
                    "items": {
                        "$ref": "DataFilter"
                    },
                    "type": "array"
                },
                "developerMetadata": {
                    "$ref": "DeveloperMetadata"
                },
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateDeveloperMetadataResponse": {
            "id": "UpdateDeveloperMetadataResponse",
            "properties": {
                "developerMetadata": {
                    "items": {
                        "$ref": "DeveloperMetadata"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "UpdateDimensionGroupRequest": {
            "id": "UpdateDimensionGroupRequest",
            "properties": {
                "dimensionGroup": {
                    "$ref": "DimensionGroup"
                },
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateDimensionPropertiesRequest": {
            "id": "UpdateDimensionPropertiesRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "properties": {
                    "$ref": "DimensionProperties"
                },
                "range": {
                    "$ref": "DimensionRange"
                }
            },
            "type": "object"
        },
        "UpdateEmbeddedObjectPositionRequest": {
            "id": "UpdateEmbeddedObjectPositionRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "newPosition": {
                    "$ref": "EmbeddedObjectPosition"
                },
                "objectId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UpdateEmbeddedObjectPositionResponse": {
            "id": "UpdateEmbeddedObjectPositionResponse",
            "properties": {
                "position": {
                    "$ref": "EmbeddedObjectPosition"
                }
            },
            "type": "object"
        },
        "UpdateFilterViewRequest": {
            "id": "UpdateFilterViewRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "filter": {
                    "$ref": "FilterView"
                }
            },
            "type": "object"
        },
        "UpdateNamedRangeRequest": {
            "id": "UpdateNamedRangeRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "namedRange": {
                    "$ref": "NamedRange"
                }
            },
            "type": "object"
        },
        "UpdateProtectedRangeRequest": {
            "id": "UpdateProtectedRangeRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "protectedRange": {
                    "$ref": "ProtectedRange"
                }
            },
            "type": "object"
        },
        "UpdateSheetPropertiesRequest": {
            "id": "UpdateSheetPropertiesRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "properties": {
                    "$ref": "SheetProperties"
                }
            },
            "type": "object"
        },
        "UpdateSlicerSpecRequest": {
            "id": "UpdateSlicerSpecRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "slicerId": {
                    "format": "int32",
                    "type": "integer"
                },
                "spec": {
                    "$ref": "SlicerSpec"
                }
            },
            "type": "object"
        },
        "UpdateSpreadsheetPropertiesRequest": {
            "id": "UpdateSpreadsheetPropertiesRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "properties": {
                    "$ref": "SpreadsheetProperties"
                }
            },
            "type": "object"
        },
        "UpdateValuesByDataFilterResponse": {
            "id": "UpdateValuesByDataFilterResponse",
            "properties": {
                "dataFilter": {
                    "$ref": "DataFilter"
                },
                "updatedCells": {
                    "format": "int32",
                    "type": "integer"
                },
                "updatedColumns": {
                    "format": "int32",
                    "type": "integer"
                },
                "updatedData": {
                    "$ref": "ValueRange"
                },
                "updatedRange": {
                    "type": "string"
                },
                "updatedRows": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UpdateValuesResponse": {
            "id": "UpdateValuesResponse",
            "properties": {
                "spreadsheetId": {
                    "type": "string"
                },
                "updatedCells": {
                    "format": "int32",
                    "type": "integer"
                },
                "updatedColumns": {
                    "format": "int32",
                    "type": "integer"
                },
                "updatedData": {
                    "$ref": "ValueRange"
                },
                "updatedRange": {
                    "type": "string"
                },
                "updatedRows": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ValueRange": {
            "id": "ValueRange",
            "properties": {
                "majorDimension": {
                    "enum": [
                        "DIMENSION_UNSPECIFIED",
                        "ROWS",
                        "COLUMNS"
                    ],
                    "enumDescriptions": [
                        "The default value, do not use.",
                        "Operates on the rows of a sheet.",
                        "Operates on the columns of a sheet."
                    ],
                    "type": "string"
                },
                "range": {
                    "type": "string"
                },
                "values": {
                    "items": {
                        "items": {
                            "type": "any"
                        },
                        "type": "array"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WaterfallChartColumnStyle": {
            "id": "WaterfallChartColumnStyle",
            "properties": {
                "color": {
                    "$ref": "Color"
                },
                "colorStyle": {
                    "$ref": "ColorStyle"
                },
                "label": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WaterfallChartCustomSubtotal": {
            "id": "WaterfallChartCustomSubtotal",
            "properties": {
                "dataIsSubtotal": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "subtotalIndex": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WaterfallChartDomain": {
            "id": "WaterfallChartDomain",
            "properties": {
                "data": {
                    "$ref": "ChartData"
                },
                "reversed": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "WaterfallChartSeries": {
            "id": "WaterfallChartSeries",
            "properties": {
                "customSubtotals": {
                    "items": {
                        "$ref": "WaterfallChartCustomSubtotal"
                    },
                    "type": "array"
                },
                "data": {
                    "$ref": "ChartData"
                },
                "hideTrailingSubtotal": {
                    "type": "boolean"
                },
                "negativeColumnsStyle": {
                    "$ref": "WaterfallChartColumnStyle"
                },
                "positiveColumnsStyle": {
                    "$ref": "WaterfallChartColumnStyle"
                },
                "subtotalColumnsStyle": {
                    "$ref": "WaterfallChartColumnStyle"
                }
            },
            "type": "object"
        },
        "WaterfallChartSpec": {
            "id": "WaterfallChartSpec",
            "properties": {
                "connectorLineStyle": {
                    "$ref": "LineStyle"
                },
                "domain": {
                    "$ref": "WaterfallChartDomain"
                },
                "firstValueIsTotal": {
                    "type": "boolean"
                },
                "hideConnectorLines": {
                    "type": "boolean"
                },
                "series": {
                    "items": {
                        "$ref": "WaterfallChartSeries"
                    },
                    "type": "array"
                },
                "stackedType": {
                    "enum": [
                        "WATERFALL_STACKED_TYPE_UNSPECIFIED",
                        "STACKED",
                        "SEQUENTIAL"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use.",
                        "Values corresponding to the same domain (horizontal axis) value will be\nstacked vertically.",
                        "Series will spread out along the horizontal axis."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Google Sheets API",
    "version": "v4",
    "version_module": true
}