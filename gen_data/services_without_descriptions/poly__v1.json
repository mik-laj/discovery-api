{
    "basePath": "",
    "baseUrl": "https://poly.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Poly Service",
    "discoveryVersion": "v1",
    "documentationLink": "https://developers.google.com/poly/",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "poly:v1",
    "kind": "discovery#restDescription",
    "mtlsRootUrl": "https://poly.mtls.googleapis.com/",
    "name": "poly",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "location": "query",
            "type": "string"
        },
        "fields": {
            "location": "query",
            "type": "string"
        },
        "key": {
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "assets": {
            "methods": {
                "get": {
                    "flatPath": "v1/assets/{assetsId}",
                    "httpMethod": "GET",
                    "id": "poly.assets.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "location": "path",
                            "pattern": "^assets/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "Asset"
                    }
                },
                "list": {
                    "flatPath": "v1/assets",
                    "httpMethod": "GET",
                    "id": "poly.assets.list",
                    "parameterOrder": [],
                    "parameters": {
                        "category": {
                            "location": "query",
                            "type": "string"
                        },
                        "curated": {
                            "location": "query",
                            "type": "boolean"
                        },
                        "format": {
                            "location": "query",
                            "type": "string"
                        },
                        "keywords": {
                            "location": "query",
                            "type": "string"
                        },
                        "maxComplexity": {
                            "enum": [
                                "COMPLEXITY_UNSPECIFIED",
                                "COMPLEX",
                                "MEDIUM",
                                "SIMPLE"
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "orderBy": {
                            "location": "query",
                            "type": "string"
                        },
                        "pageSize": {
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "pageToken": {
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v1/assets",
                    "response": {
                        "$ref": "ListAssetsResponse"
                    }
                }
            }
        },
        "users": {
            "resources": {
                "assets": {
                    "methods": {
                        "list": {
                            "flatPath": "v1/users/{usersId}/assets",
                            "httpMethod": "GET",
                            "id": "poly.users.assets.list",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "format": {
                                    "location": "query",
                                    "type": "string"
                                },
                                "name": {
                                    "location": "path",
                                    "pattern": "^users/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "orderBy": {
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "location": "query",
                                    "type": "string"
                                },
                                "visibility": {
                                    "enum": [
                                        "VISIBILITY_UNSPECIFIED",
                                        "PUBLISHED",
                                        "PRIVATE"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+name}/assets",
                            "response": {
                                "$ref": "ListUserAssetsResponse"
                            }
                        }
                    }
                },
                "likedassets": {
                    "methods": {
                        "list": {
                            "flatPath": "v1/users/{usersId}/likedassets",
                            "httpMethod": "GET",
                            "id": "poly.users.likedassets.list",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "format": {
                                    "location": "query",
                                    "type": "string"
                                },
                                "name": {
                                    "location": "path",
                                    "pattern": "^users/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "orderBy": {
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+name}/likedassets",
                            "response": {
                                "$ref": "ListLikedAssetsResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "rootUrl": "https://poly.googleapis.com/",
    "schemas": {
        "Asset": {
            "id": "Asset",
            "properties": {
                "authorName": {
                    "type": "string"
                },
                "createTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "formats": {
                    "items": {
                        "$ref": "Format"
                    },
                    "type": "array"
                },
                "isCurated": {
                    "type": "boolean"
                },
                "license": {
                    "enum": [
                        "UNKNOWN",
                        "CREATIVE_COMMONS_BY",
                        "ALL_RIGHTS_RESERVED"
                    ],
                    "enumDescriptions": [
                        "Unknown license value.",
                        "Creative Commons CC-BY 3.0. https://creativecommons.org/licenses/by/3.0/",
                        "Unlicensed: All Rights Reserved by the author. Unlicensed assets are\n**not** returned by List Assets."
                    ],
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "presentationParams": {
                    "$ref": "PresentationParams"
                },
                "remixInfo": {
                    "$ref": "RemixInfo"
                },
                "thumbnail": {
                    "$ref": "File"
                },
                "updateTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "visibility": {
                    "enum": [
                        "VISIBILITY_UNSPECIFIED",
                        "PRIVATE",
                        "UNLISTED",
                        "PUBLIC"
                    ],
                    "enumDescriptions": [
                        "Unknown (and invalid) visibility.",
                        "Access to the asset and its underlying files and resources is restricted to\nthe author.\n**Authentication:** You must supply an OAuth token that corresponds to the\nauthor's account.",
                        "Access to the asset and its underlying files and resources is available to\nanyone with the asset's name. Unlisted assets are **not**\nreturned by List Assets.",
                        "Access to the asset and its underlying files and resources is available\nto anyone."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AssetImportMessage": {
            "id": "AssetImportMessage",
            "properties": {
                "code": {
                    "enum": [
                        "CODE_UNSPECIFIED",
                        "NO_IMPORTABLE_FILE",
                        "EMPTY_MODEL",
                        "OBJ_PARSE_ERROR",
                        "EXPIRED",
                        "IMAGE_ERROR",
                        "EXTRA_FILES_WITH_ARCHIVE",
                        "DEFAULT_MATERIALS",
                        "FATAL_ERROR",
                        "INVALID_ELEMENT_TYPE"
                    ],
                    "enumDescriptions": [
                        "Unknown error code.",
                        "The asset import did not include any file that we can import (i.e. an OBJ\nfile).",
                        "When generating the preview for the import, no geometry was found.",
                        "A problem was encountered while parsing the OBJ file. The converter makes\na 'best effort' attempt to continue when encountering such issues. In\nsome cases the resulting preview model may still be acceptable. The\ndetails can be found in the parse error message.",
                        "The importer was not able to import the model before the expiration time.",
                        "The importer encountered a problem reading an image file.",
                        "Multiple files were encountered in addition to a ZIP archive. When\nuploading an archive only one file is permitted.",
                        "Default materials are used in the model. This means that one or more\nfaces is using default materials either because no usemtl statement was\nspecified or because the requested material was not found due to a\nmissing material file or bad material name. This does not cover the case\nof missing textures.",
                        "The importer encountered a fatal error and was unable to import the\nmodel.",
                        "The import includes a file of an unsupported element type. The file path\nis specified."
                    ],
                    "type": "string"
                },
                "filePath": {
                    "type": "string"
                },
                "imageError": {
                    "$ref": "ImageError"
                },
                "objParseError": {
                    "$ref": "ObjParseError"
                }
            },
            "type": "object"
        },
        "File": {
            "id": "File",
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "relativePath": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Format": {
            "id": "Format",
            "properties": {
                "formatComplexity": {
                    "$ref": "FormatComplexity"
                },
                "formatType": {
                    "type": "string"
                },
                "resources": {
                    "items": {
                        "$ref": "File"
                    },
                    "type": "array"
                },
                "root": {
                    "$ref": "File"
                }
            },
            "type": "object"
        },
        "FormatComplexity": {
            "id": "FormatComplexity",
            "properties": {
                "lodHint": {
                    "format": "int32",
                    "type": "integer"
                },
                "triangleCount": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ImageError": {
            "id": "ImageError",
            "properties": {
                "code": {
                    "enum": [
                        "CODE_UNSPECIFIED",
                        "INVALID_IMAGE",
                        "IMAGE_TOO_BIG",
                        "WRONG_IMAGE_TYPE"
                    ],
                    "enumDescriptions": [
                        "Unknown error code.",
                        "We were unable to read the image file.",
                        "The image size is too large.",
                        "The image data does not match the expected MIME type of the image."
                    ],
                    "type": "string"
                },
                "filePath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListAssetsResponse": {
            "id": "ListAssetsResponse",
            "properties": {
                "assets": {
                    "items": {
                        "$ref": "Asset"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "type": "string"
                },
                "totalSize": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ListLikedAssetsResponse": {
            "id": "ListLikedAssetsResponse",
            "properties": {
                "assets": {
                    "items": {
                        "$ref": "Asset"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "type": "string"
                },
                "totalSize": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ListUserAssetsResponse": {
            "id": "ListUserAssetsResponse",
            "properties": {
                "nextPageToken": {
                    "type": "string"
                },
                "totalSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "userAssets": {
                    "items": {
                        "$ref": "UserAsset"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ObjParseError": {
            "id": "ObjParseError",
            "properties": {
                "code": {
                    "enum": [
                        "CODE_UNSPECIFIED",
                        "INCONSISTENT_VERTEX_REFS",
                        "INVALID_COMMAND",
                        "INVALID_NUMBER",
                        "INVALID_VERTEX_REF",
                        "MISSING_GEOMETRIC_VERTEX",
                        "MISSING_TOKEN",
                        "TOO_FEW_DIMENSIONS",
                        "TOO_FEW_VERTICES",
                        "TOO_MANY_DIMENSIONS",
                        "UNSUPPORTED_COMMAND",
                        "UNUSED_TOKENS",
                        "VERTEX_NOT_FOUND",
                        "NUMBER_OUT_OF_RANGE",
                        "INVALID_VALUE",
                        "INVALID_TEXTURE_OPTION",
                        "TOO_MANY_PROBLEMS",
                        "MISSING_FILE_NAME",
                        "FILE_NOT_FOUND",
                        "UNKNOWN_MATERIAL",
                        "NO_MATERIAL_DEFINED",
                        "INVALID_SMOOTHING_GROUP",
                        "MISSING_VERTEX_COLORS",
                        "FILE_SUBSTITUTION",
                        "LINE_TOO_LONG",
                        "INVALID_FILE_PATH"
                    ],
                    "enumDescriptions": [
                        "Unknown error code.",
                        "Vertex references are specified in an inconsistent style for a face (e.g.\nsome vertices specify texture vertices but some don't).",
                        "The command is invalid.",
                        "A invalid number was specified.",
                        "An invalid vertex reference was specified.",
                        "A vertex reference does not specify a geometric vertex.",
                        "An expected token was not found.",
                        "The vertex specified too few dimensions for its usage.",
                        "The face specified too few vertices.",
                        "The vertex specified too many dimensions for its usage.",
                        "This command is a valid OBJ command but is not supported. This error is\nonly generated for the first instance of such a command.",
                        "This line ended with unparsed token characters.",
                        "The specified vertex was not found.",
                        "The specified number was too large or small for its usage.",
                        "The specified parameter value was not recognized.",
                        "The specified texture option is not valid.",
                        "The maximum number of problems to report was reached. Parsing continues,\nbut further problems will be ignored.",
                        "An expected file name was not specified.",
                        "The specified file was not found in the import.",
                        "The specified material was not found in any material definition in the\nimport.",
                        "Material parameters were specified before the first material definition.",
                        "The smoothing group is not valid.",
                        "Vertex colors were specified for only some vertices of a face.",
                        "A missing file was found at a different file path.",
                        "A line in an OBJ or MTL file exceeded the maximum line length.",
                        "The file path was invalid. Only relative paths are supported."
                    ],
                    "type": "string"
                },
                "endIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "filePath": {
                    "type": "string"
                },
                "line": {
                    "type": "string"
                },
                "lineNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "startIndex": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PresentationParams": {
            "id": "PresentationParams",
            "properties": {
                "backgroundColor": {
                    "type": "string"
                },
                "colorSpace": {
                    "enum": [
                        "UNKNOWN",
                        "LINEAR",
                        "GAMMA"
                    ],
                    "enumDescriptions": [
                        "Invalid color value.",
                        "Linear color values. Default.",
                        "Colors should be converted to linear by assuming gamma = 2.0."
                    ],
                    "type": "string"
                },
                "orientingRotation": {
                    "$ref": "Quaternion"
                }
            },
            "type": "object"
        },
        "Quaternion": {
            "id": "Quaternion",
            "properties": {
                "w": {
                    "format": "double",
                    "type": "number"
                },
                "x": {
                    "format": "double",
                    "type": "number"
                },
                "y": {
                    "format": "double",
                    "type": "number"
                },
                "z": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RemixInfo": {
            "id": "RemixInfo",
            "properties": {
                "sourceAsset": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StartAssetImportResponse": {
            "id": "StartAssetImportResponse",
            "properties": {
                "assetId": {
                    "type": "string"
                },
                "assetImportId": {
                    "type": "string"
                },
                "assetImportMessages": {
                    "items": {
                        "$ref": "AssetImportMessage"
                    },
                    "type": "array"
                },
                "publishUrl": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserAsset": {
            "id": "UserAsset",
            "properties": {
                "asset": {
                    "$ref": "Asset"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Poly API",
    "version": "v1",
    "version_module": true
}