{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/drive": {},
                "https://www.googleapis.com/auth/drive.file": {},
                "https://www.googleapis.com/auth/drive.readonly": {},
                "https://www.googleapis.com/auth/presentations": {},
                "https://www.googleapis.com/auth/presentations.readonly": {},
                "https://www.googleapis.com/auth/spreadsheets": {},
                "https://www.googleapis.com/auth/spreadsheets.readonly": {}
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://slides.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Slides",
    "discoveryVersion": "v1",
    "documentationLink": "https://developers.google.com/slides/",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "slides:v1",
    "kind": "discovery#restDescription",
    "mtlsRootUrl": "https://slides.mtls.googleapis.com/",
    "name": "slides",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "location": "query",
            "type": "string"
        },
        "fields": {
            "location": "query",
            "type": "string"
        },
        "key": {
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "presentations": {
            "methods": {
                "batchUpdate": {
                    "flatPath": "v1/presentations/{presentationId}:batchUpdate",
                    "httpMethod": "POST",
                    "id": "slides.presentations.batchUpdate",
                    "parameterOrder": [
                        "presentationId"
                    ],
                    "parameters": {
                        "presentationId": {
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/presentations/{presentationId}:batchUpdate",
                    "request": {
                        "$ref": "BatchUpdatePresentationRequest"
                    },
                    "response": {
                        "$ref": "BatchUpdatePresentationResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/drive",
                        "https://www.googleapis.com/auth/drive.file",
                        "https://www.googleapis.com/auth/drive.readonly",
                        "https://www.googleapis.com/auth/presentations",
                        "https://www.googleapis.com/auth/spreadsheets",
                        "https://www.googleapis.com/auth/spreadsheets.readonly"
                    ]
                },
                "create": {
                    "flatPath": "v1/presentations",
                    "httpMethod": "POST",
                    "id": "slides.presentations.create",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/presentations",
                    "request": {
                        "$ref": "Presentation"
                    },
                    "response": {
                        "$ref": "Presentation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/drive",
                        "https://www.googleapis.com/auth/drive.file",
                        "https://www.googleapis.com/auth/presentations"
                    ]
                },
                "get": {
                    "flatPath": "v1/presentations/{presentationsId}",
                    "httpMethod": "GET",
                    "id": "slides.presentations.get",
                    "parameterOrder": [
                        "presentationId"
                    ],
                    "parameters": {
                        "presentationId": {
                            "location": "path",
                            "pattern": "^[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/presentations/{+presentationId}",
                    "response": {
                        "$ref": "Presentation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/drive",
                        "https://www.googleapis.com/auth/drive.file",
                        "https://www.googleapis.com/auth/drive.readonly",
                        "https://www.googleapis.com/auth/presentations",
                        "https://www.googleapis.com/auth/presentations.readonly"
                    ]
                }
            },
            "resources": {
                "pages": {
                    "methods": {
                        "get": {
                            "flatPath": "v1/presentations/{presentationId}/pages/{pageObjectId}",
                            "httpMethod": "GET",
                            "id": "slides.presentations.pages.get",
                            "parameterOrder": [
                                "presentationId",
                                "pageObjectId"
                            ],
                            "parameters": {
                                "pageObjectId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "presentationId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/presentations/{presentationId}/pages/{pageObjectId}",
                            "response": {
                                "$ref": "Page"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/drive.readonly",
                                "https://www.googleapis.com/auth/presentations",
                                "https://www.googleapis.com/auth/presentations.readonly"
                            ]
                        },
                        "getThumbnail": {
                            "flatPath": "v1/presentations/{presentationId}/pages/{pageObjectId}/thumbnail",
                            "httpMethod": "GET",
                            "id": "slides.presentations.pages.getThumbnail",
                            "parameterOrder": [
                                "presentationId",
                                "pageObjectId"
                            ],
                            "parameters": {
                                "pageObjectId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "presentationId": {
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "thumbnailProperties.mimeType": {
                                    "enum": [
                                        "PNG"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "thumbnailProperties.thumbnailSize": {
                                    "enum": [
                                        "THUMBNAIL_SIZE_UNSPECIFIED",
                                        "LARGE",
                                        "MEDIUM",
                                        "SMALL"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1/presentations/{presentationId}/pages/{pageObjectId}/thumbnail",
                            "response": {
                                "$ref": "Thumbnail"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/drive",
                                "https://www.googleapis.com/auth/drive.file",
                                "https://www.googleapis.com/auth/drive.readonly",
                                "https://www.googleapis.com/auth/presentations",
                                "https://www.googleapis.com/auth/presentations.readonly"
                            ]
                        }
                    }
                }
            }
        }
    },
    "rootUrl": "https://slides.googleapis.com/",
    "schemas": {
        "AffineTransform": {
            "id": "AffineTransform",
            "properties": {
                "scaleX": {
                    "format": "double",
                    "type": "number"
                },
                "scaleY": {
                    "format": "double",
                    "type": "number"
                },
                "shearX": {
                    "format": "double",
                    "type": "number"
                },
                "shearY": {
                    "format": "double",
                    "type": "number"
                },
                "translateX": {
                    "format": "double",
                    "type": "number"
                },
                "translateY": {
                    "format": "double",
                    "type": "number"
                },
                "unit": {
                    "enum": [
                        "UNIT_UNSPECIFIED",
                        "EMU",
                        "PT"
                    ],
                    "enumDescriptions": [
                        "The units are unknown.",
                        "An English Metric Unit (EMU) is defined as 1/360,000 of a centimeter\nand thus there are 914,400 EMUs per inch, and 12,700 EMUs per point.",
                        "A point, 1/72 of an inch."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AutoText": {
            "id": "AutoText",
            "properties": {
                "content": {
                    "type": "string"
                },
                "style": {
                    "$ref": "TextStyle"
                },
                "type": {
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "SLIDE_NUMBER"
                    ],
                    "enumDescriptions": [
                        "An unspecified autotext type.",
                        "Type for autotext that represents the current slide number."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchUpdatePresentationRequest": {
            "id": "BatchUpdatePresentationRequest",
            "properties": {
                "requests": {
                    "items": {
                        "$ref": "Request"
                    },
                    "type": "array"
                },
                "writeControl": {
                    "$ref": "WriteControl"
                }
            },
            "type": "object"
        },
        "BatchUpdatePresentationResponse": {
            "id": "BatchUpdatePresentationResponse",
            "properties": {
                "presentationId": {
                    "type": "string"
                },
                "replies": {
                    "items": {
                        "$ref": "Response"
                    },
                    "type": "array"
                },
                "writeControl": {
                    "$ref": "WriteControl"
                }
            },
            "type": "object"
        },
        "Bullet": {
            "id": "Bullet",
            "properties": {
                "bulletStyle": {
                    "$ref": "TextStyle"
                },
                "glyph": {
                    "type": "string"
                },
                "listId": {
                    "type": "string"
                },
                "nestingLevel": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ColorScheme": {
            "id": "ColorScheme",
            "properties": {
                "colors": {
                    "items": {
                        "$ref": "ThemeColorPair"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ColorStop": {
            "id": "ColorStop",
            "properties": {
                "alpha": {
                    "format": "float",
                    "type": "number"
                },
                "color": {
                    "$ref": "OpaqueColor"
                },
                "position": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "CreateImageRequest": {
            "id": "CreateImageRequest",
            "properties": {
                "elementProperties": {
                    "$ref": "PageElementProperties"
                },
                "objectId": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateImageResponse": {
            "id": "CreateImageResponse",
            "properties": {
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateLineRequest": {
            "id": "CreateLineRequest",
            "properties": {
                "category": {
                    "enum": [
                        "LINE_CATEGORY_UNSPECIFIED",
                        "STRAIGHT",
                        "BENT",
                        "CURVED"
                    ],
                    "enumDescriptions": [
                        "Unspecified line category.",
                        "Straight connectors, including straight connector 1.",
                        "Bent connectors, including bent connector 2 to 5.",
                        "Curved connectors, including curved connector 2 to 5."
                    ],
                    "type": "string"
                },
                "elementProperties": {
                    "$ref": "PageElementProperties"
                },
                "lineCategory": {
                    "enum": [
                        "STRAIGHT",
                        "BENT",
                        "CURVED"
                    ],
                    "enumDescriptions": [
                        "Straight connectors, including straight connector 1. The is the default\ncategory when one is not specified.",
                        "Bent connectors, including bent connector 2 to 5.",
                        "Curved connectors, including curved connector 2 to 5."
                    ],
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateLineResponse": {
            "id": "CreateLineResponse",
            "properties": {
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateParagraphBulletsRequest": {
            "id": "CreateParagraphBulletsRequest",
            "properties": {
                "bulletPreset": {
                    "enum": [
                        "BULLET_DISC_CIRCLE_SQUARE",
                        "BULLET_DIAMONDX_ARROW3D_SQUARE",
                        "BULLET_CHECKBOX",
                        "BULLET_ARROW_DIAMOND_DISC",
                        "BULLET_STAR_CIRCLE_SQUARE",
                        "BULLET_ARROW3D_CIRCLE_SQUARE",
                        "BULLET_LEFTTRIANGLE_DIAMOND_DISC",
                        "BULLET_DIAMONDX_HOLLOWDIAMOND_SQUARE",
                        "BULLET_DIAMOND_CIRCLE_SQUARE",
                        "NUMBERED_DIGIT_ALPHA_ROMAN",
                        "NUMBERED_DIGIT_ALPHA_ROMAN_PARENS",
                        "NUMBERED_DIGIT_NESTED",
                        "NUMBERED_UPPERALPHA_ALPHA_ROMAN",
                        "NUMBERED_UPPERROMAN_UPPERALPHA_DIGIT",
                        "NUMBERED_ZERODIGIT_ALPHA_ROMAN"
                    ],
                    "enumDescriptions": [
                        "A bulleted list with a `DISC`, `CIRCLE` and `SQUARE` bullet glyph for the\nfirst 3 list nesting levels.",
                        "A bulleted list with a `DIAMONDX`, `ARROW3D` and `SQUARE` bullet glyph for\nthe first 3 list nesting levels.",
                        "A bulleted list with `CHECKBOX` bullet glyphs for all list nesting levels.",
                        "A bulleted list with a `ARROW`, `DIAMOND` and `DISC` bullet glyph for\nthe first 3 list nesting levels.",
                        "A bulleted list with a `STAR`, `CIRCLE` and `SQUARE` bullet glyph for\nthe first 3 list nesting levels.",
                        "A bulleted list with a `ARROW3D`, `CIRCLE` and `SQUARE` bullet glyph for\nthe first 3 list nesting levels.",
                        "A bulleted list with a `LEFTTRIANGLE`, `DIAMOND` and `DISC` bullet glyph\nfor the first 3 list nesting levels.",
                        "A bulleted list with a `DIAMONDX`, `HOLLOWDIAMOND` and `SQUARE` bullet\nglyph for the first 3 list nesting levels.",
                        "A bulleted list with a `DIAMOND`, `CIRCLE` and `SQUARE` bullet glyph\nfor the first 3 list nesting levels.",
                        "A numbered list with `DIGIT`, `ALPHA` and `ROMAN` numeric glyphs for\nthe first 3 list nesting levels, followed by periods.",
                        "A numbered list with `DIGIT`, `ALPHA` and `ROMAN` numeric glyphs for\nthe first 3 list nesting levels, followed by parenthesis.",
                        "A numbered list with `DIGIT` numeric glyphs separated by periods, where\neach nesting level uses the previous nesting level's glyph as a prefix.\nFor example: '1.', '1.1.', '2.', '2.2.'.",
                        "A numbered list with `UPPERALPHA`, `ALPHA` and `ROMAN` numeric glyphs for\nthe first 3 list nesting levels, followed by periods.",
                        "A numbered list with `UPPERROMAN`, `UPPERALPHA` and `DIGIT` numeric glyphs\nfor the first 3 list nesting levels, followed by periods.",
                        "A numbered list with `ZERODIGIT`, `ALPHA` and `ROMAN` numeric glyphs for\nthe first 3 list nesting levels, followed by periods."
                    ],
                    "type": "string"
                },
                "cellLocation": {
                    "$ref": "TableCellLocation"
                },
                "objectId": {
                    "type": "string"
                },
                "textRange": {
                    "$ref": "Range"
                }
            },
            "type": "object"
        },
        "CreateShapeRequest": {
            "id": "CreateShapeRequest",
            "properties": {
                "elementProperties": {
                    "$ref": "PageElementProperties"
                },
                "objectId": {
                    "type": "string"
                },
                "shapeType": {
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TEXT_BOX",
                        "RECTANGLE",
                        "ROUND_RECTANGLE",
                        "ELLIPSE",
                        "ARC",
                        "BENT_ARROW",
                        "BENT_UP_ARROW",
                        "BEVEL",
                        "BLOCK_ARC",
                        "BRACE_PAIR",
                        "BRACKET_PAIR",
                        "CAN",
                        "CHEVRON",
                        "CHORD",
                        "CLOUD",
                        "CORNER",
                        "CUBE",
                        "CURVED_DOWN_ARROW",
                        "CURVED_LEFT_ARROW",
                        "CURVED_RIGHT_ARROW",
                        "CURVED_UP_ARROW",
                        "DECAGON",
                        "DIAGONAL_STRIPE",
                        "DIAMOND",
                        "DODECAGON",
                        "DONUT",
                        "DOUBLE_WAVE",
                        "DOWN_ARROW",
                        "DOWN_ARROW_CALLOUT",
                        "FOLDED_CORNER",
                        "FRAME",
                        "HALF_FRAME",
                        "HEART",
                        "HEPTAGON",
                        "HEXAGON",
                        "HOME_PLATE",
                        "HORIZONTAL_SCROLL",
                        "IRREGULAR_SEAL_1",
                        "IRREGULAR_SEAL_2",
                        "LEFT_ARROW",
                        "LEFT_ARROW_CALLOUT",
                        "LEFT_BRACE",
                        "LEFT_BRACKET",
                        "LEFT_RIGHT_ARROW",
                        "LEFT_RIGHT_ARROW_CALLOUT",
                        "LEFT_RIGHT_UP_ARROW",
                        "LEFT_UP_ARROW",
                        "LIGHTNING_BOLT",
                        "MATH_DIVIDE",
                        "MATH_EQUAL",
                        "MATH_MINUS",
                        "MATH_MULTIPLY",
                        "MATH_NOT_EQUAL",
                        "MATH_PLUS",
                        "MOON",
                        "NO_SMOKING",
                        "NOTCHED_RIGHT_ARROW",
                        "OCTAGON",
                        "PARALLELOGRAM",
                        "PENTAGON",
                        "PIE",
                        "PLAQUE",
                        "PLUS",
                        "QUAD_ARROW",
                        "QUAD_ARROW_CALLOUT",
                        "RIBBON",
                        "RIBBON_2",
                        "RIGHT_ARROW",
                        "RIGHT_ARROW_CALLOUT",
                        "RIGHT_BRACE",
                        "RIGHT_BRACKET",
                        "ROUND_1_RECTANGLE",
                        "ROUND_2_DIAGONAL_RECTANGLE",
                        "ROUND_2_SAME_RECTANGLE",
                        "RIGHT_TRIANGLE",
                        "SMILEY_FACE",
                        "SNIP_1_RECTANGLE",
                        "SNIP_2_DIAGONAL_RECTANGLE",
                        "SNIP_2_SAME_RECTANGLE",
                        "SNIP_ROUND_RECTANGLE",
                        "STAR_10",
                        "STAR_12",
                        "STAR_16",
                        "STAR_24",
                        "STAR_32",
                        "STAR_4",
                        "STAR_5",
                        "STAR_6",
                        "STAR_7",
                        "STAR_8",
                        "STRIPED_RIGHT_ARROW",
                        "SUN",
                        "TRAPEZOID",
                        "TRIANGLE",
                        "UP_ARROW",
                        "UP_ARROW_CALLOUT",
                        "UP_DOWN_ARROW",
                        "UTURN_ARROW",
                        "VERTICAL_SCROLL",
                        "WAVE",
                        "WEDGE_ELLIPSE_CALLOUT",
                        "WEDGE_RECTANGLE_CALLOUT",
                        "WEDGE_ROUND_RECTANGLE_CALLOUT",
                        "FLOW_CHART_ALTERNATE_PROCESS",
                        "FLOW_CHART_COLLATE",
                        "FLOW_CHART_CONNECTOR",
                        "FLOW_CHART_DECISION",
                        "FLOW_CHART_DELAY",
                        "FLOW_CHART_DISPLAY",
                        "FLOW_CHART_DOCUMENT",
                        "FLOW_CHART_EXTRACT",
                        "FLOW_CHART_INPUT_OUTPUT",
                        "FLOW_CHART_INTERNAL_STORAGE",
                        "FLOW_CHART_MAGNETIC_DISK",
                        "FLOW_CHART_MAGNETIC_DRUM",
                        "FLOW_CHART_MAGNETIC_TAPE",
                        "FLOW_CHART_MANUAL_INPUT",
                        "FLOW_CHART_MANUAL_OPERATION",
                        "FLOW_CHART_MERGE",
                        "FLOW_CHART_MULTIDOCUMENT",
                        "FLOW_CHART_OFFLINE_STORAGE",
                        "FLOW_CHART_OFFPAGE_CONNECTOR",
                        "FLOW_CHART_ONLINE_STORAGE",
                        "FLOW_CHART_OR",
                        "FLOW_CHART_PREDEFINED_PROCESS",
                        "FLOW_CHART_PREPARATION",
                        "FLOW_CHART_PROCESS",
                        "FLOW_CHART_PUNCHED_CARD",
                        "FLOW_CHART_PUNCHED_TAPE",
                        "FLOW_CHART_SORT",
                        "FLOW_CHART_SUMMING_JUNCTION",
                        "FLOW_CHART_TERMINATOR",
                        "ARROW_EAST",
                        "ARROW_NORTH_EAST",
                        "ARROW_NORTH",
                        "SPEECH",
                        "STARBURST",
                        "TEARDROP",
                        "ELLIPSE_RIBBON",
                        "ELLIPSE_RIBBON_2",
                        "CLOUD_CALLOUT",
                        "CUSTOM"
                    ],
                    "enumDescriptions": [
                        "The shape type that is not predefined.",
                        "Text box shape.",
                        "Rectangle shape. Corresponds to ECMA-376 ST_ShapeType 'rect'.",
                        "Round corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'roundRect'",
                        "Ellipse shape. Corresponds to ECMA-376 ST_ShapeType 'ellipse'",
                        "Curved arc shape. Corresponds to ECMA-376 ST_ShapeType 'arc'",
                        "Bent arrow shape. Corresponds to ECMA-376 ST_ShapeType 'bentArrow'",
                        "Bent up arrow shape. Corresponds to ECMA-376 ST_ShapeType 'bentUpArrow'",
                        "Bevel shape. Corresponds to ECMA-376 ST_ShapeType 'bevel'",
                        "Block arc shape. Corresponds to ECMA-376 ST_ShapeType 'blockArc'",
                        "Brace pair shape. Corresponds to ECMA-376 ST_ShapeType 'bracePair'",
                        "Bracket pair shape. Corresponds to ECMA-376 ST_ShapeType 'bracketPair'",
                        "Can shape. Corresponds to ECMA-376 ST_ShapeType 'can'",
                        "Chevron shape. Corresponds to ECMA-376 ST_ShapeType 'chevron'",
                        "Chord shape. Corresponds to ECMA-376 ST_ShapeType 'chord'",
                        "Cloud shape. Corresponds to ECMA-376 ST_ShapeType 'cloud'",
                        "Corner shape. Corresponds to ECMA-376 ST_ShapeType 'corner'",
                        "Cube shape. Corresponds to ECMA-376 ST_ShapeType 'cube'",
                        "Curved down arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'curvedDownArrow'",
                        "Curved left arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'curvedLeftArrow'",
                        "Curved right arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'curvedRightArrow'",
                        "Curved up arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'curvedUpArrow'",
                        "Decagon shape. Corresponds to ECMA-376 ST_ShapeType 'decagon'",
                        "Diagonal stripe shape. Corresponds to ECMA-376 ST_ShapeType 'diagStripe'",
                        "Diamond shape. Corresponds to ECMA-376 ST_ShapeType 'diamond'",
                        "Dodecagon shape. Corresponds to ECMA-376 ST_ShapeType 'dodecagon'",
                        "Donut shape. Corresponds to ECMA-376 ST_ShapeType 'donut'",
                        "Double wave shape. Corresponds to ECMA-376 ST_ShapeType 'doubleWave'",
                        "Down arrow shape. Corresponds to ECMA-376 ST_ShapeType 'downArrow'",
                        "Callout down arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'downArrowCallout'",
                        "Folded corner shape. Corresponds to ECMA-376 ST_ShapeType 'foldedCorner'",
                        "Frame shape. Corresponds to ECMA-376 ST_ShapeType 'frame'",
                        "Half frame shape. Corresponds to ECMA-376 ST_ShapeType 'halfFrame'",
                        "Heart shape. Corresponds to ECMA-376 ST_ShapeType 'heart'",
                        "Heptagon shape. Corresponds to ECMA-376 ST_ShapeType 'heptagon'",
                        "Hexagon shape. Corresponds to ECMA-376 ST_ShapeType 'hexagon'",
                        "Home plate shape. Corresponds to ECMA-376 ST_ShapeType 'homePlate'",
                        "Horizontal scroll shape. Corresponds to ECMA-376 ST_ShapeType\n'horizontalScroll'",
                        "Irregular seal 1 shape. Corresponds to ECMA-376 ST_ShapeType\n'irregularSeal1'",
                        "Irregular seal 2 shape. Corresponds to ECMA-376 ST_ShapeType\n'irregularSeal2'",
                        "Left arrow shape. Corresponds to ECMA-376 ST_ShapeType 'leftArrow'",
                        "Callout left arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'leftArrowCallout'",
                        "Left brace shape. Corresponds to ECMA-376 ST_ShapeType 'leftBrace'",
                        "Left bracket shape. Corresponds to ECMA-376 ST_ShapeType 'leftBracket'",
                        "Left right arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'leftRightArrow'",
                        "Callout left right arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'leftRightArrowCallout'",
                        "Left right up arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'leftRightUpArrow'",
                        "Left up arrow shape. Corresponds to ECMA-376 ST_ShapeType 'leftUpArrow'",
                        "Lightning bolt shape. Corresponds to ECMA-376 ST_ShapeType\n'lightningBolt'",
                        "Divide math shape. Corresponds to ECMA-376 ST_ShapeType 'mathDivide'",
                        "Equal math shape. Corresponds to ECMA-376 ST_ShapeType 'mathEqual'",
                        "Minus math shape. Corresponds to ECMA-376 ST_ShapeType 'mathMinus'",
                        "Multiply math shape. Corresponds to ECMA-376 ST_ShapeType 'mathMultiply'",
                        "Not equal math shape. Corresponds to ECMA-376 ST_ShapeType 'mathNotEqual'",
                        "Plus math shape. Corresponds to ECMA-376 ST_ShapeType 'mathPlus'",
                        "Moon shape. Corresponds to ECMA-376 ST_ShapeType 'moon'",
                        "No smoking shape. Corresponds to ECMA-376 ST_ShapeType 'noSmoking'",
                        "Notched right arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'notchedRightArrow'",
                        "Octagon shape. Corresponds to ECMA-376 ST_ShapeType 'octagon'",
                        "Parallelogram shape. Corresponds to ECMA-376 ST_ShapeType 'parallelogram'",
                        "Pentagon shape. Corresponds to ECMA-376 ST_ShapeType 'pentagon'",
                        "Pie shape. Corresponds to ECMA-376 ST_ShapeType 'pie'",
                        "Plaque shape. Corresponds to ECMA-376 ST_ShapeType 'plaque'",
                        "Plus shape. Corresponds to ECMA-376 ST_ShapeType 'plus'",
                        "Quad-arrow shape. Corresponds to ECMA-376 ST_ShapeType 'quadArrow'",
                        "Callout quad-arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'quadArrowCallout'",
                        "Ribbon shape. Corresponds to ECMA-376 ST_ShapeType 'ribbon'",
                        "Ribbon 2 shape. Corresponds to ECMA-376 ST_ShapeType 'ribbon2'",
                        "Right arrow shape. Corresponds to ECMA-376 ST_ShapeType 'rightArrow'",
                        "Callout right arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'rightArrowCallout'",
                        "Right brace shape. Corresponds to ECMA-376 ST_ShapeType 'rightBrace'",
                        "Right bracket shape. Corresponds to ECMA-376 ST_ShapeType 'rightBracket'",
                        "One round corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'round1Rect'",
                        "Two diagonal round corner rectangle shape. Corresponds to ECMA-376\nST_ShapeType 'round2DiagRect'",
                        "Two same-side round corner rectangle shape. Corresponds to ECMA-376\nST_ShapeType 'round2SameRect'",
                        "Right triangle shape. Corresponds to ECMA-376 ST_ShapeType 'rtTriangle'",
                        "Smiley face shape. Corresponds to ECMA-376 ST_ShapeType 'smileyFace'",
                        "One snip corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'snip1Rect'",
                        "Two diagonal snip corner rectangle shape. Corresponds to ECMA-376\nST_ShapeType 'snip2DiagRect'",
                        "Two same-side snip corner rectangle shape. Corresponds to ECMA-376\nST_ShapeType 'snip2SameRect'",
                        "One snip one round corner rectangle shape. Corresponds to ECMA-376\nST_ShapeType 'snipRoundRect'",
                        "Ten pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star10'",
                        "Twelve pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star12'",
                        "Sixteen pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star16'",
                        "Twenty four pointed star shape. Corresponds to ECMA-376 ST_ShapeType\n'star24'",
                        "Thirty two pointed star shape. Corresponds to ECMA-376 ST_ShapeType\n'star32'",
                        "Four pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star4'",
                        "Five pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star5'",
                        "Six pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star6'",
                        "Seven pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star7'",
                        "Eight pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star8'",
                        "Striped right arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'stripedRightArrow'",
                        "Sun shape. Corresponds to ECMA-376 ST_ShapeType 'sun'",
                        "Trapezoid shape. Corresponds to ECMA-376 ST_ShapeType 'trapezoid'",
                        "Triangle shape. Corresponds to ECMA-376 ST_ShapeType 'triangle'",
                        "Up arrow shape. Corresponds to ECMA-376 ST_ShapeType 'upArrow'",
                        "Callout up arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'upArrowCallout'",
                        "Up down arrow shape. Corresponds to ECMA-376 ST_ShapeType 'upDownArrow'",
                        "U-turn arrow shape. Corresponds to ECMA-376 ST_ShapeType 'uturnArrow'",
                        "Vertical scroll shape. Corresponds to ECMA-376 ST_ShapeType\n'verticalScroll'",
                        "Wave shape. Corresponds to ECMA-376 ST_ShapeType 'wave'",
                        "Callout wedge ellipse shape. Corresponds to ECMA-376 ST_ShapeType\n'wedgeEllipseCallout'",
                        "Callout wedge rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'wedgeRectCallout'",
                        "Callout wedge round rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'wedgeRoundRectCallout'",
                        "Alternate process flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartAlternateProcess'",
                        "Collate flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartCollate'",
                        "Connector flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartConnector'",
                        "Decision flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartDecision'",
                        "Delay flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartDelay'",
                        "Display flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartDisplay'",
                        "Document flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartDocument'",
                        "Extract flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartExtract'",
                        "Input output flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartInputOutput'",
                        "Internal storage flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartInternalStorage'",
                        "Magnetic disk flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartMagneticDisk'",
                        "Magnetic drum flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartMagneticDrum'",
                        "Magnetic tape flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartMagneticTape'",
                        "Manual input flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartManualInput'",
                        "Manual operation flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartManualOperation'",
                        "Merge flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartMerge'",
                        "Multi-document flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartMultidocument'",
                        "Offline storage flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartOfflineStorage'",
                        "Off-page connector flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartOffpageConnector'",
                        "Online storage flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartOnlineStorage'",
                        "Or flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartOr'",
                        "Predefined process flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartPredefinedProcess'",
                        "Preparation flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartPreparation'",
                        "Process flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartProcess'",
                        "Punched card flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartPunchedCard'",
                        "Punched tape flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartPunchedTape'",
                        "Sort flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartSort'",
                        "Summing junction flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartSummingJunction'",
                        "Terminator flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartTerminator'",
                        "East arrow shape.",
                        "Northeast arrow shape.",
                        "North arrow shape.",
                        "Speech shape.",
                        "Star burst shape.",
                        "Teardrop shape. Corresponds to ECMA-376 ST_ShapeType 'teardrop'",
                        "Ellipse ribbon shape. Corresponds to ECMA-376 ST_ShapeType\n'ellipseRibbon'",
                        "Ellipse ribbon 2 shape. Corresponds to ECMA-376 ST_ShapeType\n'ellipseRibbon2'",
                        "Callout cloud shape. Corresponds to ECMA-376 ST_ShapeType 'cloudCallout'",
                        "Custom shape."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateShapeResponse": {
            "id": "CreateShapeResponse",
            "properties": {
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateSheetsChartRequest": {
            "id": "CreateSheetsChartRequest",
            "properties": {
                "chartId": {
                    "format": "int32",
                    "type": "integer"
                },
                "elementProperties": {
                    "$ref": "PageElementProperties"
                },
                "linkingMode": {
                    "enum": [
                        "NOT_LINKED_IMAGE",
                        "LINKED"
                    ],
                    "enumDescriptions": [
                        "The chart is not associated with the source spreadsheet and cannot be\nupdated. A chart that is not linked will be inserted as an image.",
                        "Linking the chart allows it to be updated, and other collaborators will\nsee a link to the spreadsheet."
                    ],
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "spreadsheetId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateSheetsChartResponse": {
            "id": "CreateSheetsChartResponse",
            "properties": {
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateSlideRequest": {
            "id": "CreateSlideRequest",
            "properties": {
                "insertionIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "objectId": {
                    "type": "string"
                },
                "placeholderIdMappings": {
                    "items": {
                        "$ref": "LayoutPlaceholderIdMapping"
                    },
                    "type": "array"
                },
                "slideLayoutReference": {
                    "$ref": "LayoutReference"
                }
            },
            "type": "object"
        },
        "CreateSlideResponse": {
            "id": "CreateSlideResponse",
            "properties": {
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateTableRequest": {
            "id": "CreateTableRequest",
            "properties": {
                "columns": {
                    "format": "int32",
                    "type": "integer"
                },
                "elementProperties": {
                    "$ref": "PageElementProperties"
                },
                "objectId": {
                    "type": "string"
                },
                "rows": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CreateTableResponse": {
            "id": "CreateTableResponse",
            "properties": {
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateVideoRequest": {
            "id": "CreateVideoRequest",
            "properties": {
                "elementProperties": {
                    "$ref": "PageElementProperties"
                },
                "id": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "source": {
                    "enum": [
                        "SOURCE_UNSPECIFIED",
                        "YOUTUBE",
                        "DRIVE"
                    ],
                    "enumDescriptions": [
                        "The video source is unspecified.",
                        "The video source is YouTube.",
                        "The video source is Google Drive."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateVideoResponse": {
            "id": "CreateVideoResponse",
            "properties": {
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CropProperties": {
            "id": "CropProperties",
            "properties": {
                "angle": {
                    "format": "float",
                    "type": "number"
                },
                "bottomOffset": {
                    "format": "float",
                    "type": "number"
                },
                "leftOffset": {
                    "format": "float",
                    "type": "number"
                },
                "rightOffset": {
                    "format": "float",
                    "type": "number"
                },
                "topOffset": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DeleteObjectRequest": {
            "id": "DeleteObjectRequest",
            "properties": {
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeleteParagraphBulletsRequest": {
            "id": "DeleteParagraphBulletsRequest",
            "properties": {
                "cellLocation": {
                    "$ref": "TableCellLocation"
                },
                "objectId": {
                    "type": "string"
                },
                "textRange": {
                    "$ref": "Range"
                }
            },
            "type": "object"
        },
        "DeleteTableColumnRequest": {
            "id": "DeleteTableColumnRequest",
            "properties": {
                "cellLocation": {
                    "$ref": "TableCellLocation"
                },
                "tableObjectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeleteTableRowRequest": {
            "id": "DeleteTableRowRequest",
            "properties": {
                "cellLocation": {
                    "$ref": "TableCellLocation"
                },
                "tableObjectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeleteTextRequest": {
            "id": "DeleteTextRequest",
            "properties": {
                "cellLocation": {
                    "$ref": "TableCellLocation"
                },
                "objectId": {
                    "type": "string"
                },
                "textRange": {
                    "$ref": "Range"
                }
            },
            "type": "object"
        },
        "Dimension": {
            "id": "Dimension",
            "properties": {
                "magnitude": {
                    "format": "double",
                    "type": "number"
                },
                "unit": {
                    "enum": [
                        "UNIT_UNSPECIFIED",
                        "EMU",
                        "PT"
                    ],
                    "enumDescriptions": [
                        "The units are unknown.",
                        "An English Metric Unit (EMU) is defined as 1/360,000 of a centimeter\nand thus there are 914,400 EMUs per inch, and 12,700 EMUs per point.",
                        "A point, 1/72 of an inch."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DuplicateObjectRequest": {
            "id": "DuplicateObjectRequest",
            "properties": {
                "objectId": {
                    "type": "string"
                },
                "objectIds": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DuplicateObjectResponse": {
            "id": "DuplicateObjectResponse",
            "properties": {
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Group": {
            "id": "Group",
            "properties": {
                "children": {
                    "items": {
                        "$ref": "PageElement"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GroupObjectsRequest": {
            "id": "GroupObjectsRequest",
            "properties": {
                "childrenObjectIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "groupObjectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupObjectsResponse": {
            "id": "GroupObjectsResponse",
            "properties": {
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Image": {
            "id": "Image",
            "properties": {
                "contentUrl": {
                    "type": "string"
                },
                "imageProperties": {
                    "$ref": "ImageProperties"
                },
                "sourceUrl": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ImageProperties": {
            "id": "ImageProperties",
            "properties": {
                "brightness": {
                    "format": "float",
                    "type": "number"
                },
                "contrast": {
                    "format": "float",
                    "type": "number"
                },
                "cropProperties": {
                    "$ref": "CropProperties"
                },
                "link": {
                    "$ref": "Link"
                },
                "outline": {
                    "$ref": "Outline"
                },
                "recolor": {
                    "$ref": "Recolor"
                },
                "shadow": {
                    "$ref": "Shadow"
                },
                "transparency": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "InsertTableColumnsRequest": {
            "id": "InsertTableColumnsRequest",
            "properties": {
                "cellLocation": {
                    "$ref": "TableCellLocation"
                },
                "insertRight": {
                    "type": "boolean"
                },
                "number": {
                    "format": "int32",
                    "type": "integer"
                },
                "tableObjectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InsertTableRowsRequest": {
            "id": "InsertTableRowsRequest",
            "properties": {
                "cellLocation": {
                    "$ref": "TableCellLocation"
                },
                "insertBelow": {
                    "type": "boolean"
                },
                "number": {
                    "format": "int32",
                    "type": "integer"
                },
                "tableObjectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InsertTextRequest": {
            "id": "InsertTextRequest",
            "properties": {
                "cellLocation": {
                    "$ref": "TableCellLocation"
                },
                "insertionIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "objectId": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LayoutPlaceholderIdMapping": {
            "id": "LayoutPlaceholderIdMapping",
            "properties": {
                "layoutPlaceholder": {
                    "$ref": "Placeholder"
                },
                "layoutPlaceholderObjectId": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LayoutProperties": {
            "id": "LayoutProperties",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "masterObjectId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LayoutReference": {
            "id": "LayoutReference",
            "properties": {
                "layoutId": {
                    "type": "string"
                },
                "predefinedLayout": {
                    "enum": [
                        "PREDEFINED_LAYOUT_UNSPECIFIED",
                        "BLANK",
                        "CAPTION_ONLY",
                        "TITLE",
                        "TITLE_AND_BODY",
                        "TITLE_AND_TWO_COLUMNS",
                        "TITLE_ONLY",
                        "SECTION_HEADER",
                        "SECTION_TITLE_AND_DESCRIPTION",
                        "ONE_COLUMN_TEXT",
                        "MAIN_POINT",
                        "BIG_NUMBER"
                    ],
                    "enumDescriptions": [
                        "Unspecified layout.",
                        "Blank layout, with no placeholders.",
                        "Layout with a caption at the bottom.",
                        "Layout with a title and a subtitle.",
                        "Layout with a title and body.",
                        "Layout with a title and two columns.",
                        "Layout with only a title.",
                        "Layout with a section title.",
                        "Layout with a title and subtitle on one side and description on the other.",
                        "Layout with one title and one body, arranged in a single column.",
                        "Layout with a main point.",
                        "Layout with a big number heading."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Line": {
            "id": "Line",
            "properties": {
                "lineCategory": {
                    "enum": [
                        "LINE_CATEGORY_UNSPECIFIED",
                        "STRAIGHT",
                        "BENT",
                        "CURVED"
                    ],
                    "enumDescriptions": [
                        "Unspecified line category.",
                        "Straight connectors, including straight connector 1.",
                        "Bent connectors, including bent connector 2 to 5.",
                        "Curved connectors, including curved connector 2 to 5."
                    ],
                    "type": "string"
                },
                "lineProperties": {
                    "$ref": "LineProperties"
                },
                "lineType": {
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "STRAIGHT_CONNECTOR_1",
                        "BENT_CONNECTOR_2",
                        "BENT_CONNECTOR_3",
                        "BENT_CONNECTOR_4",
                        "BENT_CONNECTOR_5",
                        "CURVED_CONNECTOR_2",
                        "CURVED_CONNECTOR_3",
                        "CURVED_CONNECTOR_4",
                        "CURVED_CONNECTOR_5",
                        "STRAIGHT_LINE"
                    ],
                    "enumDescriptions": [
                        "An unspecified line type.",
                        "Straight connector 1 form. Corresponds to ECMA-376 ST_ShapeType\n'straightConnector1'.",
                        "Bent connector 2 form. Corresponds to ECMA-376 ST_ShapeType\n'bentConnector2'.",
                        "Bent connector 3 form. Corresponds to ECMA-376 ST_ShapeType\n'bentConnector3'.",
                        "Bent connector 4 form. Corresponds to ECMA-376 ST_ShapeType\n'bentConnector4'.",
                        "Bent connector 5 form. Corresponds to ECMA-376 ST_ShapeType\n'bentConnector5'.",
                        "Curved connector 2 form. Corresponds to ECMA-376 ST_ShapeType\n'curvedConnector2'.",
                        "Curved connector 3 form. Corresponds to ECMA-376 ST_ShapeType\n'curvedConnector3'.",
                        "Curved connector 4 form. Corresponds to ECMA-376 ST_ShapeType\n'curvedConnector4'.",
                        "Curved connector 5 form. Corresponds to ECMA-376 ST_ShapeType\n'curvedConnector5'.",
                        "Straight line. Corresponds to ECMA-376 ST_ShapeType 'line'. This line\ntype is not a connector."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LineConnection": {
            "id": "LineConnection",
            "properties": {
                "connectedObjectId": {
                    "type": "string"
                },
                "connectionSiteIndex": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LineFill": {
            "id": "LineFill",
            "properties": {
                "solidFill": {
                    "$ref": "SolidFill"
                }
            },
            "type": "object"
        },
        "LineProperties": {
            "id": "LineProperties",
            "properties": {
                "dashStyle": {
                    "enum": [
                        "DASH_STYLE_UNSPECIFIED",
                        "SOLID",
                        "DOT",
                        "DASH",
                        "DASH_DOT",
                        "LONG_DASH",
                        "LONG_DASH_DOT"
                    ],
                    "enumDescriptions": [
                        "Unspecified dash style.",
                        "Solid line. Corresponds to ECMA-376 ST_PresetLineDashVal value 'solid'.\nThis is the default dash style.",
                        "Dotted line. Corresponds to ECMA-376 ST_PresetLineDashVal value 'dot'.",
                        "Dashed line. Corresponds to ECMA-376 ST_PresetLineDashVal value 'dash'.",
                        "Alternating dashes and dots. Corresponds to ECMA-376 ST_PresetLineDashVal\nvalue 'dashDot'.",
                        "Line with large dashes. Corresponds to ECMA-376 ST_PresetLineDashVal\nvalue 'lgDash'.",
                        "Alternating large dashes and dots. Corresponds to ECMA-376\nST_PresetLineDashVal value 'lgDashDot'."
                    ],
                    "type": "string"
                },
                "endArrow": {
                    "enum": [
                        "ARROW_STYLE_UNSPECIFIED",
                        "NONE",
                        "STEALTH_ARROW",
                        "FILL_ARROW",
                        "FILL_CIRCLE",
                        "FILL_SQUARE",
                        "FILL_DIAMOND",
                        "OPEN_ARROW",
                        "OPEN_CIRCLE",
                        "OPEN_SQUARE",
                        "OPEN_DIAMOND"
                    ],
                    "enumDescriptions": [
                        "An unspecified arrow style.",
                        "No arrow.",
                        "Arrow with notched back. Corresponds to ECMA-376 ST_LineEndType value\n'stealth'.",
                        "Filled arrow. Corresponds to ECMA-376 ST_LineEndType value 'triangle'.",
                        "Filled circle. Corresponds to ECMA-376 ST_LineEndType value 'oval'.",
                        "Filled square.",
                        "Filled diamond. Corresponds to ECMA-376 ST_LineEndType value 'diamond'.",
                        "Hollow arrow.",
                        "Hollow circle.",
                        "Hollow square.",
                        "Hollow diamond."
                    ],
                    "type": "string"
                },
                "endConnection": {
                    "$ref": "LineConnection"
                },
                "lineFill": {
                    "$ref": "LineFill"
                },
                "link": {
                    "$ref": "Link"
                },
                "startArrow": {
                    "enum": [
                        "ARROW_STYLE_UNSPECIFIED",
                        "NONE",
                        "STEALTH_ARROW",
                        "FILL_ARROW",
                        "FILL_CIRCLE",
                        "FILL_SQUARE",
                        "FILL_DIAMOND",
                        "OPEN_ARROW",
                        "OPEN_CIRCLE",
                        "OPEN_SQUARE",
                        "OPEN_DIAMOND"
                    ],
                    "enumDescriptions": [
                        "An unspecified arrow style.",
                        "No arrow.",
                        "Arrow with notched back. Corresponds to ECMA-376 ST_LineEndType value\n'stealth'.",
                        "Filled arrow. Corresponds to ECMA-376 ST_LineEndType value 'triangle'.",
                        "Filled circle. Corresponds to ECMA-376 ST_LineEndType value 'oval'.",
                        "Filled square.",
                        "Filled diamond. Corresponds to ECMA-376 ST_LineEndType value 'diamond'.",
                        "Hollow arrow.",
                        "Hollow circle.",
                        "Hollow square.",
                        "Hollow diamond."
                    ],
                    "type": "string"
                },
                "startConnection": {
                    "$ref": "LineConnection"
                },
                "weight": {
                    "$ref": "Dimension"
                }
            },
            "type": "object"
        },
        "Link": {
            "id": "Link",
            "properties": {
                "pageObjectId": {
                    "type": "string"
                },
                "relativeLink": {
                    "enum": [
                        "RELATIVE_SLIDE_LINK_UNSPECIFIED",
                        "NEXT_SLIDE",
                        "PREVIOUS_SLIDE",
                        "FIRST_SLIDE",
                        "LAST_SLIDE"
                    ],
                    "enumDescriptions": [
                        "An unspecified relative slide link.",
                        "A link to the next slide.",
                        "A link to the previous slide.",
                        "A link to the first slide in the presentation.",
                        "A link to the last slide in the presentation."
                    ],
                    "type": "string"
                },
                "slideIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "List": {
            "id": "List",
            "properties": {
                "listId": {
                    "type": "string"
                },
                "nestingLevel": {
                    "additionalProperties": {
                        "$ref": "NestingLevel"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MasterProperties": {
            "id": "MasterProperties",
            "properties": {
                "displayName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MergeTableCellsRequest": {
            "id": "MergeTableCellsRequest",
            "properties": {
                "objectId": {
                    "type": "string"
                },
                "tableRange": {
                    "$ref": "TableRange"
                }
            },
            "type": "object"
        },
        "NestingLevel": {
            "id": "NestingLevel",
            "properties": {
                "bulletStyle": {
                    "$ref": "TextStyle"
                }
            },
            "type": "object"
        },
        "NotesProperties": {
            "id": "NotesProperties",
            "properties": {
                "speakerNotesObjectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OpaqueColor": {
            "id": "OpaqueColor",
            "properties": {
                "rgbColor": {
                    "$ref": "RgbColor"
                },
                "themeColor": {
                    "enum": [
                        "THEME_COLOR_TYPE_UNSPECIFIED",
                        "DARK1",
                        "LIGHT1",
                        "DARK2",
                        "LIGHT2",
                        "ACCENT1",
                        "ACCENT2",
                        "ACCENT3",
                        "ACCENT4",
                        "ACCENT5",
                        "ACCENT6",
                        "HYPERLINK",
                        "FOLLOWED_HYPERLINK",
                        "TEXT1",
                        "BACKGROUND1",
                        "TEXT2",
                        "BACKGROUND2"
                    ],
                    "enumDescriptions": [
                        "Unspecified theme color. This value should not be used.",
                        "Represents the first dark color.",
                        "Represents the first light color.",
                        "Represents the second dark color.",
                        "Represents the second light color.",
                        "Represents the first accent color.",
                        "Represents the second accent color.",
                        "Represents the third accent color.",
                        "Represents the fourth accent color.",
                        "Represents the fifth accent color.",
                        "Represents the sixth accent color.",
                        "Represents the color to use for hyperlinks.",
                        "Represents the color to use for visited hyperlinks.",
                        "Represents the first text color.",
                        "Represents the first background color.",
                        "Represents the second text color.",
                        "Represents the second background color."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OptionalColor": {
            "id": "OptionalColor",
            "properties": {
                "opaqueColor": {
                    "$ref": "OpaqueColor"
                }
            },
            "type": "object"
        },
        "Outline": {
            "id": "Outline",
            "properties": {
                "dashStyle": {
                    "enum": [
                        "DASH_STYLE_UNSPECIFIED",
                        "SOLID",
                        "DOT",
                        "DASH",
                        "DASH_DOT",
                        "LONG_DASH",
                        "LONG_DASH_DOT"
                    ],
                    "enumDescriptions": [
                        "Unspecified dash style.",
                        "Solid line. Corresponds to ECMA-376 ST_PresetLineDashVal value 'solid'.\nThis is the default dash style.",
                        "Dotted line. Corresponds to ECMA-376 ST_PresetLineDashVal value 'dot'.",
                        "Dashed line. Corresponds to ECMA-376 ST_PresetLineDashVal value 'dash'.",
                        "Alternating dashes and dots. Corresponds to ECMA-376 ST_PresetLineDashVal\nvalue 'dashDot'.",
                        "Line with large dashes. Corresponds to ECMA-376 ST_PresetLineDashVal\nvalue 'lgDash'.",
                        "Alternating large dashes and dots. Corresponds to ECMA-376\nST_PresetLineDashVal value 'lgDashDot'."
                    ],
                    "type": "string"
                },
                "outlineFill": {
                    "$ref": "OutlineFill"
                },
                "propertyState": {
                    "enum": [
                        "RENDERED",
                        "NOT_RENDERED",
                        "INHERIT"
                    ],
                    "enumDescriptions": [
                        "If a property's state is RENDERED, then the element has the corresponding\nproperty when rendered on a page. If the element is a placeholder shape as\ndetermined by the placeholder\nfield, and it inherits from a placeholder shape, the corresponding field\nmay be unset, meaning that the property value is inherited from a parent\nplaceholder. If the element does not inherit, then the field will contain\nthe rendered value. This is the default value.",
                        "If a property's state is NOT_RENDERED, then the element does not have the\ncorresponding property when rendered on a page. However, the field may\nstill be set so it can be inherited by child shapes. To remove a property\nfrom a rendered element, set its property_state to NOT_RENDERED.",
                        "If a property's state is INHERIT, then the property state uses the value of\ncorresponding `property_state` field on the parent shape. Elements that do\nnot inherit will never have an INHERIT property state."
                    ],
                    "type": "string"
                },
                "weight": {
                    "$ref": "Dimension"
                }
            },
            "type": "object"
        },
        "OutlineFill": {
            "id": "OutlineFill",
            "properties": {
                "solidFill": {
                    "$ref": "SolidFill"
                }
            },
            "type": "object"
        },
        "Page": {
            "id": "Page",
            "properties": {
                "layoutProperties": {
                    "$ref": "LayoutProperties"
                },
                "masterProperties": {
                    "$ref": "MasterProperties"
                },
                "notesProperties": {
                    "$ref": "NotesProperties"
                },
                "objectId": {
                    "type": "string"
                },
                "pageElements": {
                    "items": {
                        "$ref": "PageElement"
                    },
                    "type": "array"
                },
                "pageProperties": {
                    "$ref": "PageProperties"
                },
                "pageType": {
                    "enum": [
                        "SLIDE",
                        "MASTER",
                        "LAYOUT",
                        "NOTES",
                        "NOTES_MASTER"
                    ],
                    "enumDescriptions": [
                        "A slide page.",
                        "A master slide page.",
                        "A layout page.",
                        "A notes page.",
                        "A notes master page."
                    ],
                    "type": "string"
                },
                "revisionId": {
                    "type": "string"
                },
                "slideProperties": {
                    "$ref": "SlideProperties"
                }
            },
            "type": "object"
        },
        "PageBackgroundFill": {
            "id": "PageBackgroundFill",
            "properties": {
                "propertyState": {
                    "enum": [
                        "RENDERED",
                        "NOT_RENDERED",
                        "INHERIT"
                    ],
                    "enumDescriptions": [
                        "If a property's state is RENDERED, then the element has the corresponding\nproperty when rendered on a page. If the element is a placeholder shape as\ndetermined by the placeholder\nfield, and it inherits from a placeholder shape, the corresponding field\nmay be unset, meaning that the property value is inherited from a parent\nplaceholder. If the element does not inherit, then the field will contain\nthe rendered value. This is the default value.",
                        "If a property's state is NOT_RENDERED, then the element does not have the\ncorresponding property when rendered on a page. However, the field may\nstill be set so it can be inherited by child shapes. To remove a property\nfrom a rendered element, set its property_state to NOT_RENDERED.",
                        "If a property's state is INHERIT, then the property state uses the value of\ncorresponding `property_state` field on the parent shape. Elements that do\nnot inherit will never have an INHERIT property state."
                    ],
                    "type": "string"
                },
                "solidFill": {
                    "$ref": "SolidFill"
                },
                "stretchedPictureFill": {
                    "$ref": "StretchedPictureFill"
                }
            },
            "type": "object"
        },
        "PageElement": {
            "id": "PageElement",
            "properties": {
                "elementGroup": {
                    "$ref": "Group"
                },
                "image": {
                    "$ref": "Image"
                },
                "line": {
                    "$ref": "Line"
                },
                "objectId": {
                    "type": "string"
                },
                "shape": {
                    "$ref": "Shape"
                },
                "sheetsChart": {
                    "$ref": "SheetsChart"
                },
                "size": {
                    "$ref": "Size"
                },
                "table": {
                    "$ref": "Table"
                },
                "title": {
                    "type": "string"
                },
                "transform": {
                    "$ref": "AffineTransform"
                },
                "video": {
                    "$ref": "Video"
                },
                "wordArt": {
                    "$ref": "WordArt"
                }
            },
            "type": "object"
        },
        "PageElementProperties": {
            "id": "PageElementProperties",
            "properties": {
                "pageObjectId": {
                    "type": "string"
                },
                "size": {
                    "$ref": "Size"
                },
                "transform": {
                    "$ref": "AffineTransform"
                }
            },
            "type": "object"
        },
        "PageProperties": {
            "id": "PageProperties",
            "properties": {
                "colorScheme": {
                    "$ref": "ColorScheme"
                },
                "pageBackgroundFill": {
                    "$ref": "PageBackgroundFill"
                }
            },
            "type": "object"
        },
        "ParagraphMarker": {
            "id": "ParagraphMarker",
            "properties": {
                "bullet": {
                    "$ref": "Bullet"
                },
                "style": {
                    "$ref": "ParagraphStyle"
                }
            },
            "type": "object"
        },
        "ParagraphStyle": {
            "id": "ParagraphStyle",
            "properties": {
                "alignment": {
                    "enum": [
                        "ALIGNMENT_UNSPECIFIED",
                        "START",
                        "CENTER",
                        "END",
                        "JUSTIFIED"
                    ],
                    "enumDescriptions": [
                        "The paragraph alignment is inherited from the parent.",
                        "The paragraph is aligned to the start of the line. Left-aligned for\nLTR text, right-aligned otherwise.",
                        "The paragraph is centered.",
                        "The paragraph is aligned to the end of the line. Right-aligned for\nLTR text, left-aligned otherwise.",
                        "The paragraph is justified."
                    ],
                    "type": "string"
                },
                "direction": {
                    "enum": [
                        "TEXT_DIRECTION_UNSPECIFIED",
                        "LEFT_TO_RIGHT",
                        "RIGHT_TO_LEFT"
                    ],
                    "enumDescriptions": [
                        "The text direction is inherited from the parent.",
                        "The text goes from left to right.",
                        "The text goes from right to left."
                    ],
                    "type": "string"
                },
                "indentEnd": {
                    "$ref": "Dimension"
                },
                "indentFirstLine": {
                    "$ref": "Dimension"
                },
                "indentStart": {
                    "$ref": "Dimension"
                },
                "lineSpacing": {
                    "format": "float",
                    "type": "number"
                },
                "spaceAbove": {
                    "$ref": "Dimension"
                },
                "spaceBelow": {
                    "$ref": "Dimension"
                },
                "spacingMode": {
                    "enum": [
                        "SPACING_MODE_UNSPECIFIED",
                        "NEVER_COLLAPSE",
                        "COLLAPSE_LISTS"
                    ],
                    "enumDescriptions": [
                        "The spacing mode is inherited from the parent.",
                        "Paragraph spacing is always rendered.",
                        "Paragraph spacing is skipped between list elements."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Placeholder": {
            "id": "Placeholder",
            "properties": {
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "parentObjectId": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "NONE",
                        "BODY",
                        "CHART",
                        "CLIP_ART",
                        "CENTERED_TITLE",
                        "DIAGRAM",
                        "DATE_AND_TIME",
                        "FOOTER",
                        "HEADER",
                        "MEDIA",
                        "OBJECT",
                        "PICTURE",
                        "SLIDE_NUMBER",
                        "SUBTITLE",
                        "TABLE",
                        "TITLE",
                        "SLIDE_IMAGE"
                    ],
                    "enumDescriptions": [
                        "Default value, signifies it is not a placeholder.",
                        "Body text.",
                        "Chart or graph.",
                        "Clip art image.",
                        "Title centered.",
                        "Diagram.",
                        "Date and time.",
                        "Footer text.",
                        "Header text.",
                        "Multimedia.",
                        "Any content type.",
                        "Picture.",
                        "Number of a slide.",
                        "Subtitle.",
                        "Table.",
                        "Slide title.",
                        "Slide image."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Presentation": {
            "id": "Presentation",
            "properties": {
                "layouts": {
                    "items": {
                        "$ref": "Page"
                    },
                    "type": "array"
                },
                "locale": {
                    "type": "string"
                },
                "masters": {
                    "items": {
                        "$ref": "Page"
                    },
                    "type": "array"
                },
                "notesMaster": {
                    "$ref": "Page"
                },
                "pageSize": {
                    "$ref": "Size"
                },
                "presentationId": {
                    "type": "string"
                },
                "revisionId": {
                    "type": "string"
                },
                "slides": {
                    "items": {
                        "$ref": "Page"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Range": {
            "id": "Range",
            "properties": {
                "endIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "startIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "RANGE_TYPE_UNSPECIFIED",
                        "FIXED_RANGE",
                        "FROM_START_INDEX",
                        "ALL"
                    ],
                    "enumDescriptions": [
                        "Unspecified range type. This value must not be used.",
                        "A fixed range. Both the `start_index` and\n`end_index` must be specified.",
                        "Starts the range at `start_index` and continues until the\nend of the collection. The `end_index` must not be specified.",
                        "Sets the range to be the whole length of the collection. Both the\n`start_index` and the `end_index` must not be\nspecified."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Recolor": {
            "id": "Recolor",
            "properties": {
                "name": {
                    "enum": [
                        "NONE",
                        "LIGHT1",
                        "LIGHT2",
                        "LIGHT3",
                        "LIGHT4",
                        "LIGHT5",
                        "LIGHT6",
                        "LIGHT7",
                        "LIGHT8",
                        "LIGHT9",
                        "LIGHT10",
                        "DARK1",
                        "DARK2",
                        "DARK3",
                        "DARK4",
                        "DARK5",
                        "DARK6",
                        "DARK7",
                        "DARK8",
                        "DARK9",
                        "DARK10",
                        "GRAYSCALE",
                        "NEGATIVE",
                        "SEPIA",
                        "CUSTOM"
                    ],
                    "enumDescriptions": [
                        "No recolor effect. The default value.",
                        "A recolor effect that lightens the image using the page's first available\ncolor from its color scheme.",
                        "A recolor effect that lightens the image using the page's second\navailable color from its color scheme.",
                        "A recolor effect that lightens the image using the page's third available\ncolor from its color scheme.",
                        "A recolor effect that lightens the image using the page's forth available\ncolor from its color scheme.",
                        "A recolor effect that lightens the image using the page's fifth available\ncolor from its color scheme.",
                        "A recolor effect that lightens the image using the page's sixth available\ncolor from its color scheme.",
                        "A recolor effect that lightens the image using the page's seventh\navailable color from its color scheme.",
                        "A recolor effect that lightens the image using the page's eighth\navailable color from its color scheme.",
                        "A recolor effect that lightens the image using the page's ninth available\ncolor from its color scheme.",
                        "A recolor effect that lightens the image using the page's tenth available\ncolor from its color scheme.",
                        "A recolor effect that darkens the image using the page's first available\ncolor from its color scheme.",
                        "A recolor effect that darkens the image using the page's second available\ncolor from its color scheme.",
                        "A recolor effect that darkens the image using the page's third available\ncolor from its color scheme.",
                        "A recolor effect that darkens the image using the page's fourth available\ncolor from its color scheme.",
                        "A recolor effect that darkens the image using the page's fifth available\ncolor from its color scheme.",
                        "A recolor effect that darkens the image using the page's sixth available\ncolor from its color scheme.",
                        "A recolor effect that darkens the image using the page's seventh\navailable color from its color scheme.",
                        "A recolor effect that darkens the image using the page's eighth available\ncolor from its color scheme.",
                        "A recolor effect that darkens the image using the page's ninth available\ncolor from its color scheme.",
                        "A recolor effect that darkens the image using the page's tenth available\ncolor from its color scheme.",
                        "A recolor effect that recolors the image to grayscale.",
                        "A recolor effect that recolors the image to negative grayscale.",
                        "A recolor effect that recolors the image using the sepia color.",
                        "Custom recolor effect. Refer to `recolor_stops` for the concrete\ngradient."
                    ],
                    "type": "string"
                },
                "recolorStops": {
                    "items": {
                        "$ref": "ColorStop"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RefreshSheetsChartRequest": {
            "id": "RefreshSheetsChartRequest",
            "properties": {
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReplaceAllShapesWithImageRequest": {
            "id": "ReplaceAllShapesWithImageRequest",
            "properties": {
                "containsText": {
                    "$ref": "SubstringMatchCriteria"
                },
                "imageReplaceMethod": {
                    "enum": [
                        "IMAGE_REPLACE_METHOD_UNSPECIFIED",
                        "CENTER_INSIDE",
                        "CENTER_CROP"
                    ],
                    "enumDescriptions": [
                        "Unspecified image replace method. This value must not be used.",
                        "Scales and centers the image to fit within the bounds of the original\nshape and maintains the image's aspect ratio. The rendered size of the\nimage may be smaller than the size of the shape. This is the default\nmethod when one is not specified.",
                        "Scales and centers the image to fill the bounds of the original shape.\nThe image may be cropped in order to fill the shape. The rendered size of\nthe image will be the same as that of the original shape."
                    ],
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "pageObjectIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replaceMethod": {
                    "enum": [
                        "CENTER_INSIDE",
                        "CENTER_CROP"
                    ],
                    "enumDescriptions": [
                        "Scales and centers the image to fit within the bounds of the original\nshape and maintains the image's aspect ratio. The rendered size of the\nimage may be smaller than the size of the shape. This is the default\nmethod when one is not specified.",
                        "Scales and centers the image to fill the bounds of the original shape.\nThe image may be cropped in order to fill the shape. The rendered size of\nthe image will be the same as that of the original shape."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReplaceAllShapesWithImageResponse": {
            "id": "ReplaceAllShapesWithImageResponse",
            "properties": {
                "occurrencesChanged": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ReplaceAllShapesWithSheetsChartRequest": {
            "id": "ReplaceAllShapesWithSheetsChartRequest",
            "properties": {
                "chartId": {
                    "format": "int32",
                    "type": "integer"
                },
                "containsText": {
                    "$ref": "SubstringMatchCriteria"
                },
                "linkingMode": {
                    "enum": [
                        "NOT_LINKED_IMAGE",
                        "LINKED"
                    ],
                    "enumDescriptions": [
                        "The chart is not associated with the source spreadsheet and cannot be\nupdated. A chart that is not linked will be inserted as an image.",
                        "Linking the chart allows it to be updated, and other collaborators will\nsee a link to the spreadsheet."
                    ],
                    "type": "string"
                },
                "pageObjectIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "spreadsheetId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReplaceAllShapesWithSheetsChartResponse": {
            "id": "ReplaceAllShapesWithSheetsChartResponse",
            "properties": {
                "occurrencesChanged": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ReplaceAllTextRequest": {
            "id": "ReplaceAllTextRequest",
            "properties": {
                "containsText": {
                    "$ref": "SubstringMatchCriteria"
                },
                "pageObjectIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replaceText": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReplaceAllTextResponse": {
            "id": "ReplaceAllTextResponse",
            "properties": {
                "occurrencesChanged": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ReplaceImageRequest": {
            "id": "ReplaceImageRequest",
            "properties": {
                "imageObjectId": {
                    "type": "string"
                },
                "imageReplaceMethod": {
                    "enum": [
                        "IMAGE_REPLACE_METHOD_UNSPECIFIED",
                        "CENTER_INSIDE",
                        "CENTER_CROP"
                    ],
                    "enumDescriptions": [
                        "Unspecified image replace method. This value must not be used.",
                        "Scales and centers the image to fit within the bounds of the original\nshape and maintains the image's aspect ratio. The rendered size of the\nimage may be smaller than the size of the shape. This is the default\nmethod when one is not specified.",
                        "Scales and centers the image to fill the bounds of the original shape.\nThe image may be cropped in order to fill the shape. The rendered size of\nthe image will be the same as that of the original shape."
                    ],
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Request": {
            "id": "Request",
            "properties": {
                "createImage": {
                    "$ref": "CreateImageRequest"
                },
                "createLine": {
                    "$ref": "CreateLineRequest"
                },
                "createParagraphBullets": {
                    "$ref": "CreateParagraphBulletsRequest"
                },
                "createShape": {
                    "$ref": "CreateShapeRequest"
                },
                "createSheetsChart": {
                    "$ref": "CreateSheetsChartRequest"
                },
                "createSlide": {
                    "$ref": "CreateSlideRequest"
                },
                "createTable": {
                    "$ref": "CreateTableRequest"
                },
                "createVideo": {
                    "$ref": "CreateVideoRequest"
                },
                "deleteObject": {
                    "$ref": "DeleteObjectRequest"
                },
                "deleteParagraphBullets": {
                    "$ref": "DeleteParagraphBulletsRequest"
                },
                "deleteTableColumn": {
                    "$ref": "DeleteTableColumnRequest"
                },
                "deleteTableRow": {
                    "$ref": "DeleteTableRowRequest"
                },
                "deleteText": {
                    "$ref": "DeleteTextRequest"
                },
                "duplicateObject": {
                    "$ref": "DuplicateObjectRequest"
                },
                "groupObjects": {
                    "$ref": "GroupObjectsRequest"
                },
                "insertTableColumns": {
                    "$ref": "InsertTableColumnsRequest"
                },
                "insertTableRows": {
                    "$ref": "InsertTableRowsRequest"
                },
                "insertText": {
                    "$ref": "InsertTextRequest"
                },
                "mergeTableCells": {
                    "$ref": "MergeTableCellsRequest"
                },
                "refreshSheetsChart": {
                    "$ref": "RefreshSheetsChartRequest"
                },
                "replaceAllShapesWithImage": {
                    "$ref": "ReplaceAllShapesWithImageRequest"
                },
                "replaceAllShapesWithSheetsChart": {
                    "$ref": "ReplaceAllShapesWithSheetsChartRequest"
                },
                "replaceAllText": {
                    "$ref": "ReplaceAllTextRequest"
                },
                "replaceImage": {
                    "$ref": "ReplaceImageRequest"
                },
                "rerouteLine": {
                    "$ref": "RerouteLineRequest"
                },
                "ungroupObjects": {
                    "$ref": "UngroupObjectsRequest"
                },
                "unmergeTableCells": {
                    "$ref": "UnmergeTableCellsRequest"
                },
                "updateImageProperties": {
                    "$ref": "UpdateImagePropertiesRequest"
                },
                "updateLineCategory": {
                    "$ref": "UpdateLineCategoryRequest"
                },
                "updateLineProperties": {
                    "$ref": "UpdateLinePropertiesRequest"
                },
                "updatePageElementAltText": {
                    "$ref": "UpdatePageElementAltTextRequest"
                },
                "updatePageElementTransform": {
                    "$ref": "UpdatePageElementTransformRequest"
                },
                "updatePageElementsZOrder": {
                    "$ref": "UpdatePageElementsZOrderRequest"
                },
                "updatePageProperties": {
                    "$ref": "UpdatePagePropertiesRequest"
                },
                "updateParagraphStyle": {
                    "$ref": "UpdateParagraphStyleRequest"
                },
                "updateShapeProperties": {
                    "$ref": "UpdateShapePropertiesRequest"
                },
                "updateSlidesPosition": {
                    "$ref": "UpdateSlidesPositionRequest"
                },
                "updateTableBorderProperties": {
                    "$ref": "UpdateTableBorderPropertiesRequest"
                },
                "updateTableCellProperties": {
                    "$ref": "UpdateTableCellPropertiesRequest"
                },
                "updateTableColumnProperties": {
                    "$ref": "UpdateTableColumnPropertiesRequest"
                },
                "updateTableRowProperties": {
                    "$ref": "UpdateTableRowPropertiesRequest"
                },
                "updateTextStyle": {
                    "$ref": "UpdateTextStyleRequest"
                },
                "updateVideoProperties": {
                    "$ref": "UpdateVideoPropertiesRequest"
                }
            },
            "type": "object"
        },
        "RerouteLineRequest": {
            "id": "RerouteLineRequest",
            "properties": {
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Response": {
            "id": "Response",
            "properties": {
                "createImage": {
                    "$ref": "CreateImageResponse"
                },
                "createLine": {
                    "$ref": "CreateLineResponse"
                },
                "createShape": {
                    "$ref": "CreateShapeResponse"
                },
                "createSheetsChart": {
                    "$ref": "CreateSheetsChartResponse"
                },
                "createSlide": {
                    "$ref": "CreateSlideResponse"
                },
                "createTable": {
                    "$ref": "CreateTableResponse"
                },
                "createVideo": {
                    "$ref": "CreateVideoResponse"
                },
                "duplicateObject": {
                    "$ref": "DuplicateObjectResponse"
                },
                "groupObjects": {
                    "$ref": "GroupObjectsResponse"
                },
                "replaceAllShapesWithImage": {
                    "$ref": "ReplaceAllShapesWithImageResponse"
                },
                "replaceAllShapesWithSheetsChart": {
                    "$ref": "ReplaceAllShapesWithSheetsChartResponse"
                },
                "replaceAllText": {
                    "$ref": "ReplaceAllTextResponse"
                }
            },
            "type": "object"
        },
        "RgbColor": {
            "id": "RgbColor",
            "properties": {
                "blue": {
                    "format": "float",
                    "type": "number"
                },
                "green": {
                    "format": "float",
                    "type": "number"
                },
                "red": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Shadow": {
            "id": "Shadow",
            "properties": {
                "alignment": {
                    "enum": [
                        "RECTANGLE_POSITION_UNSPECIFIED",
                        "TOP_LEFT",
                        "TOP_CENTER",
                        "TOP_RIGHT",
                        "LEFT_CENTER",
                        "CENTER",
                        "RIGHT_CENTER",
                        "BOTTOM_LEFT",
                        "BOTTOM_CENTER",
                        "BOTTOM_RIGHT"
                    ],
                    "enumDescriptions": [
                        "Unspecified.",
                        "Top left.",
                        "Top center.",
                        "Top right.",
                        "Left center.",
                        "Center.",
                        "Right center.",
                        "Bottom left.",
                        "Bottom center.",
                        "Bottom right."
                    ],
                    "type": "string"
                },
                "alpha": {
                    "format": "float",
                    "type": "number"
                },
                "blurRadius": {
                    "$ref": "Dimension"
                },
                "color": {
                    "$ref": "OpaqueColor"
                },
                "propertyState": {
                    "enum": [
                        "RENDERED",
                        "NOT_RENDERED",
                        "INHERIT"
                    ],
                    "enumDescriptions": [
                        "If a property's state is RENDERED, then the element has the corresponding\nproperty when rendered on a page. If the element is a placeholder shape as\ndetermined by the placeholder\nfield, and it inherits from a placeholder shape, the corresponding field\nmay be unset, meaning that the property value is inherited from a parent\nplaceholder. If the element does not inherit, then the field will contain\nthe rendered value. This is the default value.",
                        "If a property's state is NOT_RENDERED, then the element does not have the\ncorresponding property when rendered on a page. However, the field may\nstill be set so it can be inherited by child shapes. To remove a property\nfrom a rendered element, set its property_state to NOT_RENDERED.",
                        "If a property's state is INHERIT, then the property state uses the value of\ncorresponding `property_state` field on the parent shape. Elements that do\nnot inherit will never have an INHERIT property state."
                    ],
                    "type": "string"
                },
                "rotateWithShape": {
                    "type": "boolean"
                },
                "transform": {
                    "$ref": "AffineTransform"
                },
                "type": {
                    "enum": [
                        "SHADOW_TYPE_UNSPECIFIED",
                        "OUTER"
                    ],
                    "enumDescriptions": [
                        "Unspecified shadow type.",
                        "Outer shadow."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Shape": {
            "id": "Shape",
            "properties": {
                "placeholder": {
                    "$ref": "Placeholder"
                },
                "shapeProperties": {
                    "$ref": "ShapeProperties"
                },
                "shapeType": {
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TEXT_BOX",
                        "RECTANGLE",
                        "ROUND_RECTANGLE",
                        "ELLIPSE",
                        "ARC",
                        "BENT_ARROW",
                        "BENT_UP_ARROW",
                        "BEVEL",
                        "BLOCK_ARC",
                        "BRACE_PAIR",
                        "BRACKET_PAIR",
                        "CAN",
                        "CHEVRON",
                        "CHORD",
                        "CLOUD",
                        "CORNER",
                        "CUBE",
                        "CURVED_DOWN_ARROW",
                        "CURVED_LEFT_ARROW",
                        "CURVED_RIGHT_ARROW",
                        "CURVED_UP_ARROW",
                        "DECAGON",
                        "DIAGONAL_STRIPE",
                        "DIAMOND",
                        "DODECAGON",
                        "DONUT",
                        "DOUBLE_WAVE",
                        "DOWN_ARROW",
                        "DOWN_ARROW_CALLOUT",
                        "FOLDED_CORNER",
                        "FRAME",
                        "HALF_FRAME",
                        "HEART",
                        "HEPTAGON",
                        "HEXAGON",
                        "HOME_PLATE",
                        "HORIZONTAL_SCROLL",
                        "IRREGULAR_SEAL_1",
                        "IRREGULAR_SEAL_2",
                        "LEFT_ARROW",
                        "LEFT_ARROW_CALLOUT",
                        "LEFT_BRACE",
                        "LEFT_BRACKET",
                        "LEFT_RIGHT_ARROW",
                        "LEFT_RIGHT_ARROW_CALLOUT",
                        "LEFT_RIGHT_UP_ARROW",
                        "LEFT_UP_ARROW",
                        "LIGHTNING_BOLT",
                        "MATH_DIVIDE",
                        "MATH_EQUAL",
                        "MATH_MINUS",
                        "MATH_MULTIPLY",
                        "MATH_NOT_EQUAL",
                        "MATH_PLUS",
                        "MOON",
                        "NO_SMOKING",
                        "NOTCHED_RIGHT_ARROW",
                        "OCTAGON",
                        "PARALLELOGRAM",
                        "PENTAGON",
                        "PIE",
                        "PLAQUE",
                        "PLUS",
                        "QUAD_ARROW",
                        "QUAD_ARROW_CALLOUT",
                        "RIBBON",
                        "RIBBON_2",
                        "RIGHT_ARROW",
                        "RIGHT_ARROW_CALLOUT",
                        "RIGHT_BRACE",
                        "RIGHT_BRACKET",
                        "ROUND_1_RECTANGLE",
                        "ROUND_2_DIAGONAL_RECTANGLE",
                        "ROUND_2_SAME_RECTANGLE",
                        "RIGHT_TRIANGLE",
                        "SMILEY_FACE",
                        "SNIP_1_RECTANGLE",
                        "SNIP_2_DIAGONAL_RECTANGLE",
                        "SNIP_2_SAME_RECTANGLE",
                        "SNIP_ROUND_RECTANGLE",
                        "STAR_10",
                        "STAR_12",
                        "STAR_16",
                        "STAR_24",
                        "STAR_32",
                        "STAR_4",
                        "STAR_5",
                        "STAR_6",
                        "STAR_7",
                        "STAR_8",
                        "STRIPED_RIGHT_ARROW",
                        "SUN",
                        "TRAPEZOID",
                        "TRIANGLE",
                        "UP_ARROW",
                        "UP_ARROW_CALLOUT",
                        "UP_DOWN_ARROW",
                        "UTURN_ARROW",
                        "VERTICAL_SCROLL",
                        "WAVE",
                        "WEDGE_ELLIPSE_CALLOUT",
                        "WEDGE_RECTANGLE_CALLOUT",
                        "WEDGE_ROUND_RECTANGLE_CALLOUT",
                        "FLOW_CHART_ALTERNATE_PROCESS",
                        "FLOW_CHART_COLLATE",
                        "FLOW_CHART_CONNECTOR",
                        "FLOW_CHART_DECISION",
                        "FLOW_CHART_DELAY",
                        "FLOW_CHART_DISPLAY",
                        "FLOW_CHART_DOCUMENT",
                        "FLOW_CHART_EXTRACT",
                        "FLOW_CHART_INPUT_OUTPUT",
                        "FLOW_CHART_INTERNAL_STORAGE",
                        "FLOW_CHART_MAGNETIC_DISK",
                        "FLOW_CHART_MAGNETIC_DRUM",
                        "FLOW_CHART_MAGNETIC_TAPE",
                        "FLOW_CHART_MANUAL_INPUT",
                        "FLOW_CHART_MANUAL_OPERATION",
                        "FLOW_CHART_MERGE",
                        "FLOW_CHART_MULTIDOCUMENT",
                        "FLOW_CHART_OFFLINE_STORAGE",
                        "FLOW_CHART_OFFPAGE_CONNECTOR",
                        "FLOW_CHART_ONLINE_STORAGE",
                        "FLOW_CHART_OR",
                        "FLOW_CHART_PREDEFINED_PROCESS",
                        "FLOW_CHART_PREPARATION",
                        "FLOW_CHART_PROCESS",
                        "FLOW_CHART_PUNCHED_CARD",
                        "FLOW_CHART_PUNCHED_TAPE",
                        "FLOW_CHART_SORT",
                        "FLOW_CHART_SUMMING_JUNCTION",
                        "FLOW_CHART_TERMINATOR",
                        "ARROW_EAST",
                        "ARROW_NORTH_EAST",
                        "ARROW_NORTH",
                        "SPEECH",
                        "STARBURST",
                        "TEARDROP",
                        "ELLIPSE_RIBBON",
                        "ELLIPSE_RIBBON_2",
                        "CLOUD_CALLOUT",
                        "CUSTOM"
                    ],
                    "enumDescriptions": [
                        "The shape type that is not predefined.",
                        "Text box shape.",
                        "Rectangle shape. Corresponds to ECMA-376 ST_ShapeType 'rect'.",
                        "Round corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'roundRect'",
                        "Ellipse shape. Corresponds to ECMA-376 ST_ShapeType 'ellipse'",
                        "Curved arc shape. Corresponds to ECMA-376 ST_ShapeType 'arc'",
                        "Bent arrow shape. Corresponds to ECMA-376 ST_ShapeType 'bentArrow'",
                        "Bent up arrow shape. Corresponds to ECMA-376 ST_ShapeType 'bentUpArrow'",
                        "Bevel shape. Corresponds to ECMA-376 ST_ShapeType 'bevel'",
                        "Block arc shape. Corresponds to ECMA-376 ST_ShapeType 'blockArc'",
                        "Brace pair shape. Corresponds to ECMA-376 ST_ShapeType 'bracePair'",
                        "Bracket pair shape. Corresponds to ECMA-376 ST_ShapeType 'bracketPair'",
                        "Can shape. Corresponds to ECMA-376 ST_ShapeType 'can'",
                        "Chevron shape. Corresponds to ECMA-376 ST_ShapeType 'chevron'",
                        "Chord shape. Corresponds to ECMA-376 ST_ShapeType 'chord'",
                        "Cloud shape. Corresponds to ECMA-376 ST_ShapeType 'cloud'",
                        "Corner shape. Corresponds to ECMA-376 ST_ShapeType 'corner'",
                        "Cube shape. Corresponds to ECMA-376 ST_ShapeType 'cube'",
                        "Curved down arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'curvedDownArrow'",
                        "Curved left arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'curvedLeftArrow'",
                        "Curved right arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'curvedRightArrow'",
                        "Curved up arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'curvedUpArrow'",
                        "Decagon shape. Corresponds to ECMA-376 ST_ShapeType 'decagon'",
                        "Diagonal stripe shape. Corresponds to ECMA-376 ST_ShapeType 'diagStripe'",
                        "Diamond shape. Corresponds to ECMA-376 ST_ShapeType 'diamond'",
                        "Dodecagon shape. Corresponds to ECMA-376 ST_ShapeType 'dodecagon'",
                        "Donut shape. Corresponds to ECMA-376 ST_ShapeType 'donut'",
                        "Double wave shape. Corresponds to ECMA-376 ST_ShapeType 'doubleWave'",
                        "Down arrow shape. Corresponds to ECMA-376 ST_ShapeType 'downArrow'",
                        "Callout down arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'downArrowCallout'",
                        "Folded corner shape. Corresponds to ECMA-376 ST_ShapeType 'foldedCorner'",
                        "Frame shape. Corresponds to ECMA-376 ST_ShapeType 'frame'",
                        "Half frame shape. Corresponds to ECMA-376 ST_ShapeType 'halfFrame'",
                        "Heart shape. Corresponds to ECMA-376 ST_ShapeType 'heart'",
                        "Heptagon shape. Corresponds to ECMA-376 ST_ShapeType 'heptagon'",
                        "Hexagon shape. Corresponds to ECMA-376 ST_ShapeType 'hexagon'",
                        "Home plate shape. Corresponds to ECMA-376 ST_ShapeType 'homePlate'",
                        "Horizontal scroll shape. Corresponds to ECMA-376 ST_ShapeType\n'horizontalScroll'",
                        "Irregular seal 1 shape. Corresponds to ECMA-376 ST_ShapeType\n'irregularSeal1'",
                        "Irregular seal 2 shape. Corresponds to ECMA-376 ST_ShapeType\n'irregularSeal2'",
                        "Left arrow shape. Corresponds to ECMA-376 ST_ShapeType 'leftArrow'",
                        "Callout left arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'leftArrowCallout'",
                        "Left brace shape. Corresponds to ECMA-376 ST_ShapeType 'leftBrace'",
                        "Left bracket shape. Corresponds to ECMA-376 ST_ShapeType 'leftBracket'",
                        "Left right arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'leftRightArrow'",
                        "Callout left right arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'leftRightArrowCallout'",
                        "Left right up arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'leftRightUpArrow'",
                        "Left up arrow shape. Corresponds to ECMA-376 ST_ShapeType 'leftUpArrow'",
                        "Lightning bolt shape. Corresponds to ECMA-376 ST_ShapeType\n'lightningBolt'",
                        "Divide math shape. Corresponds to ECMA-376 ST_ShapeType 'mathDivide'",
                        "Equal math shape. Corresponds to ECMA-376 ST_ShapeType 'mathEqual'",
                        "Minus math shape. Corresponds to ECMA-376 ST_ShapeType 'mathMinus'",
                        "Multiply math shape. Corresponds to ECMA-376 ST_ShapeType 'mathMultiply'",
                        "Not equal math shape. Corresponds to ECMA-376 ST_ShapeType 'mathNotEqual'",
                        "Plus math shape. Corresponds to ECMA-376 ST_ShapeType 'mathPlus'",
                        "Moon shape. Corresponds to ECMA-376 ST_ShapeType 'moon'",
                        "No smoking shape. Corresponds to ECMA-376 ST_ShapeType 'noSmoking'",
                        "Notched right arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'notchedRightArrow'",
                        "Octagon shape. Corresponds to ECMA-376 ST_ShapeType 'octagon'",
                        "Parallelogram shape. Corresponds to ECMA-376 ST_ShapeType 'parallelogram'",
                        "Pentagon shape. Corresponds to ECMA-376 ST_ShapeType 'pentagon'",
                        "Pie shape. Corresponds to ECMA-376 ST_ShapeType 'pie'",
                        "Plaque shape. Corresponds to ECMA-376 ST_ShapeType 'plaque'",
                        "Plus shape. Corresponds to ECMA-376 ST_ShapeType 'plus'",
                        "Quad-arrow shape. Corresponds to ECMA-376 ST_ShapeType 'quadArrow'",
                        "Callout quad-arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'quadArrowCallout'",
                        "Ribbon shape. Corresponds to ECMA-376 ST_ShapeType 'ribbon'",
                        "Ribbon 2 shape. Corresponds to ECMA-376 ST_ShapeType 'ribbon2'",
                        "Right arrow shape. Corresponds to ECMA-376 ST_ShapeType 'rightArrow'",
                        "Callout right arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'rightArrowCallout'",
                        "Right brace shape. Corresponds to ECMA-376 ST_ShapeType 'rightBrace'",
                        "Right bracket shape. Corresponds to ECMA-376 ST_ShapeType 'rightBracket'",
                        "One round corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'round1Rect'",
                        "Two diagonal round corner rectangle shape. Corresponds to ECMA-376\nST_ShapeType 'round2DiagRect'",
                        "Two same-side round corner rectangle shape. Corresponds to ECMA-376\nST_ShapeType 'round2SameRect'",
                        "Right triangle shape. Corresponds to ECMA-376 ST_ShapeType 'rtTriangle'",
                        "Smiley face shape. Corresponds to ECMA-376 ST_ShapeType 'smileyFace'",
                        "One snip corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'snip1Rect'",
                        "Two diagonal snip corner rectangle shape. Corresponds to ECMA-376\nST_ShapeType 'snip2DiagRect'",
                        "Two same-side snip corner rectangle shape. Corresponds to ECMA-376\nST_ShapeType 'snip2SameRect'",
                        "One snip one round corner rectangle shape. Corresponds to ECMA-376\nST_ShapeType 'snipRoundRect'",
                        "Ten pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star10'",
                        "Twelve pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star12'",
                        "Sixteen pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star16'",
                        "Twenty four pointed star shape. Corresponds to ECMA-376 ST_ShapeType\n'star24'",
                        "Thirty two pointed star shape. Corresponds to ECMA-376 ST_ShapeType\n'star32'",
                        "Four pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star4'",
                        "Five pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star5'",
                        "Six pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star6'",
                        "Seven pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star7'",
                        "Eight pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star8'",
                        "Striped right arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'stripedRightArrow'",
                        "Sun shape. Corresponds to ECMA-376 ST_ShapeType 'sun'",
                        "Trapezoid shape. Corresponds to ECMA-376 ST_ShapeType 'trapezoid'",
                        "Triangle shape. Corresponds to ECMA-376 ST_ShapeType 'triangle'",
                        "Up arrow shape. Corresponds to ECMA-376 ST_ShapeType 'upArrow'",
                        "Callout up arrow shape. Corresponds to ECMA-376 ST_ShapeType\n'upArrowCallout'",
                        "Up down arrow shape. Corresponds to ECMA-376 ST_ShapeType 'upDownArrow'",
                        "U-turn arrow shape. Corresponds to ECMA-376 ST_ShapeType 'uturnArrow'",
                        "Vertical scroll shape. Corresponds to ECMA-376 ST_ShapeType\n'verticalScroll'",
                        "Wave shape. Corresponds to ECMA-376 ST_ShapeType 'wave'",
                        "Callout wedge ellipse shape. Corresponds to ECMA-376 ST_ShapeType\n'wedgeEllipseCallout'",
                        "Callout wedge rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'wedgeRectCallout'",
                        "Callout wedge round rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'wedgeRoundRectCallout'",
                        "Alternate process flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartAlternateProcess'",
                        "Collate flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartCollate'",
                        "Connector flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartConnector'",
                        "Decision flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartDecision'",
                        "Delay flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartDelay'",
                        "Display flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartDisplay'",
                        "Document flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartDocument'",
                        "Extract flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartExtract'",
                        "Input output flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartInputOutput'",
                        "Internal storage flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartInternalStorage'",
                        "Magnetic disk flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartMagneticDisk'",
                        "Magnetic drum flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartMagneticDrum'",
                        "Magnetic tape flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartMagneticTape'",
                        "Manual input flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartManualInput'",
                        "Manual operation flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartManualOperation'",
                        "Merge flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartMerge'",
                        "Multi-document flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartMultidocument'",
                        "Offline storage flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartOfflineStorage'",
                        "Off-page connector flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartOffpageConnector'",
                        "Online storage flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartOnlineStorage'",
                        "Or flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartOr'",
                        "Predefined process flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartPredefinedProcess'",
                        "Preparation flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartPreparation'",
                        "Process flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartProcess'",
                        "Punched card flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartPunchedCard'",
                        "Punched tape flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartPunchedTape'",
                        "Sort flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartSort'",
                        "Summing junction flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartSummingJunction'",
                        "Terminator flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartTerminator'",
                        "East arrow shape.",
                        "Northeast arrow shape.",
                        "North arrow shape.",
                        "Speech shape.",
                        "Star burst shape.",
                        "Teardrop shape. Corresponds to ECMA-376 ST_ShapeType 'teardrop'",
                        "Ellipse ribbon shape. Corresponds to ECMA-376 ST_ShapeType\n'ellipseRibbon'",
                        "Ellipse ribbon 2 shape. Corresponds to ECMA-376 ST_ShapeType\n'ellipseRibbon2'",
                        "Callout cloud shape. Corresponds to ECMA-376 ST_ShapeType 'cloudCallout'",
                        "Custom shape."
                    ],
                    "type": "string"
                },
                "text": {
                    "$ref": "TextContent"
                }
            },
            "type": "object"
        },
        "ShapeBackgroundFill": {
            "id": "ShapeBackgroundFill",
            "properties": {
                "propertyState": {
                    "enum": [
                        "RENDERED",
                        "NOT_RENDERED",
                        "INHERIT"
                    ],
                    "enumDescriptions": [
                        "If a property's state is RENDERED, then the element has the corresponding\nproperty when rendered on a page. If the element is a placeholder shape as\ndetermined by the placeholder\nfield, and it inherits from a placeholder shape, the corresponding field\nmay be unset, meaning that the property value is inherited from a parent\nplaceholder. If the element does not inherit, then the field will contain\nthe rendered value. This is the default value.",
                        "If a property's state is NOT_RENDERED, then the element does not have the\ncorresponding property when rendered on a page. However, the field may\nstill be set so it can be inherited by child shapes. To remove a property\nfrom a rendered element, set its property_state to NOT_RENDERED.",
                        "If a property's state is INHERIT, then the property state uses the value of\ncorresponding `property_state` field on the parent shape. Elements that do\nnot inherit will never have an INHERIT property state."
                    ],
                    "type": "string"
                },
                "solidFill": {
                    "$ref": "SolidFill"
                }
            },
            "type": "object"
        },
        "ShapeProperties": {
            "id": "ShapeProperties",
            "properties": {
                "contentAlignment": {
                    "enum": [
                        "CONTENT_ALIGNMENT_UNSPECIFIED",
                        "CONTENT_ALIGNMENT_UNSUPPORTED",
                        "TOP",
                        "MIDDLE",
                        "BOTTOM"
                    ],
                    "enumDescriptions": [
                        "An unspecified content alignment. The content alignment is inherited from\nthe parent if it exists.",
                        "An unsupported content alignment.",
                        "An alignment that aligns the content to the top of the content holder.\nCorresponds to ECMA-376 ST_TextAnchoringType 't'.",
                        "An alignment that aligns the content to the middle of the content\nholder. Corresponds to ECMA-376 ST_TextAnchoringType 'ctr'.",
                        "An alignment that aligns the content to the bottom of the content\nholder. Corresponds to ECMA-376 ST_TextAnchoringType 'b'."
                    ],
                    "type": "string"
                },
                "link": {
                    "$ref": "Link"
                },
                "outline": {
                    "$ref": "Outline"
                },
                "shadow": {
                    "$ref": "Shadow"
                },
                "shapeBackgroundFill": {
                    "$ref": "ShapeBackgroundFill"
                }
            },
            "type": "object"
        },
        "SheetsChart": {
            "id": "SheetsChart",
            "properties": {
                "chartId": {
                    "format": "int32",
                    "type": "integer"
                },
                "contentUrl": {
                    "type": "string"
                },
                "sheetsChartProperties": {
                    "$ref": "SheetsChartProperties"
                },
                "spreadsheetId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SheetsChartProperties": {
            "id": "SheetsChartProperties",
            "properties": {
                "chartImageProperties": {
                    "$ref": "ImageProperties"
                }
            },
            "type": "object"
        },
        "Size": {
            "id": "Size",
            "properties": {
                "height": {
                    "$ref": "Dimension"
                },
                "width": {
                    "$ref": "Dimension"
                }
            },
            "type": "object"
        },
        "SlideProperties": {
            "id": "SlideProperties",
            "properties": {
                "layoutObjectId": {
                    "type": "string"
                },
                "masterObjectId": {
                    "type": "string"
                },
                "notesPage": {
                    "$ref": "Page"
                }
            },
            "type": "object"
        },
        "SolidFill": {
            "id": "SolidFill",
            "properties": {
                "alpha": {
                    "format": "float",
                    "type": "number"
                },
                "color": {
                    "$ref": "OpaqueColor"
                }
            },
            "type": "object"
        },
        "StretchedPictureFill": {
            "id": "StretchedPictureFill",
            "properties": {
                "contentUrl": {
                    "type": "string"
                },
                "size": {
                    "$ref": "Size"
                }
            },
            "type": "object"
        },
        "SubstringMatchCriteria": {
            "id": "SubstringMatchCriteria",
            "properties": {
                "matchCase": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Table": {
            "id": "Table",
            "properties": {
                "columns": {
                    "format": "int32",
                    "type": "integer"
                },
                "horizontalBorderRows": {
                    "items": {
                        "$ref": "TableBorderRow"
                    },
                    "type": "array"
                },
                "rows": {
                    "format": "int32",
                    "type": "integer"
                },
                "tableColumns": {
                    "items": {
                        "$ref": "TableColumnProperties"
                    },
                    "type": "array"
                },
                "tableRows": {
                    "items": {
                        "$ref": "TableRow"
                    },
                    "type": "array"
                },
                "verticalBorderRows": {
                    "items": {
                        "$ref": "TableBorderRow"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TableBorderCell": {
            "id": "TableBorderCell",
            "properties": {
                "location": {
                    "$ref": "TableCellLocation"
                },
                "tableBorderProperties": {
                    "$ref": "TableBorderProperties"
                }
            },
            "type": "object"
        },
        "TableBorderFill": {
            "id": "TableBorderFill",
            "properties": {
                "solidFill": {
                    "$ref": "SolidFill"
                }
            },
            "type": "object"
        },
        "TableBorderProperties": {
            "id": "TableBorderProperties",
            "properties": {
                "dashStyle": {
                    "enum": [
                        "DASH_STYLE_UNSPECIFIED",
                        "SOLID",
                        "DOT",
                        "DASH",
                        "DASH_DOT",
                        "LONG_DASH",
                        "LONG_DASH_DOT"
                    ],
                    "enumDescriptions": [
                        "Unspecified dash style.",
                        "Solid line. Corresponds to ECMA-376 ST_PresetLineDashVal value 'solid'.\nThis is the default dash style.",
                        "Dotted line. Corresponds to ECMA-376 ST_PresetLineDashVal value 'dot'.",
                        "Dashed line. Corresponds to ECMA-376 ST_PresetLineDashVal value 'dash'.",
                        "Alternating dashes and dots. Corresponds to ECMA-376 ST_PresetLineDashVal\nvalue 'dashDot'.",
                        "Line with large dashes. Corresponds to ECMA-376 ST_PresetLineDashVal\nvalue 'lgDash'.",
                        "Alternating large dashes and dots. Corresponds to ECMA-376\nST_PresetLineDashVal value 'lgDashDot'."
                    ],
                    "type": "string"
                },
                "tableBorderFill": {
                    "$ref": "TableBorderFill"
                },
                "weight": {
                    "$ref": "Dimension"
                }
            },
            "type": "object"
        },
        "TableBorderRow": {
            "id": "TableBorderRow",
            "properties": {
                "tableBorderCells": {
                    "items": {
                        "$ref": "TableBorderCell"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TableCell": {
            "id": "TableCell",
            "properties": {
                "columnSpan": {
                    "format": "int32",
                    "type": "integer"
                },
                "location": {
                    "$ref": "TableCellLocation"
                },
                "rowSpan": {
                    "format": "int32",
                    "type": "integer"
                },
                "tableCellProperties": {
                    "$ref": "TableCellProperties"
                },
                "text": {
                    "$ref": "TextContent"
                }
            },
            "type": "object"
        },
        "TableCellBackgroundFill": {
            "id": "TableCellBackgroundFill",
            "properties": {
                "propertyState": {
                    "enum": [
                        "RENDERED",
                        "NOT_RENDERED",
                        "INHERIT"
                    ],
                    "enumDescriptions": [
                        "If a property's state is RENDERED, then the element has the corresponding\nproperty when rendered on a page. If the element is a placeholder shape as\ndetermined by the placeholder\nfield, and it inherits from a placeholder shape, the corresponding field\nmay be unset, meaning that the property value is inherited from a parent\nplaceholder. If the element does not inherit, then the field will contain\nthe rendered value. This is the default value.",
                        "If a property's state is NOT_RENDERED, then the element does not have the\ncorresponding property when rendered on a page. However, the field may\nstill be set so it can be inherited by child shapes. To remove a property\nfrom a rendered element, set its property_state to NOT_RENDERED.",
                        "If a property's state is INHERIT, then the property state uses the value of\ncorresponding `property_state` field on the parent shape. Elements that do\nnot inherit will never have an INHERIT property state."
                    ],
                    "type": "string"
                },
                "solidFill": {
                    "$ref": "SolidFill"
                }
            },
            "type": "object"
        },
        "TableCellLocation": {
            "id": "TableCellLocation",
            "properties": {
                "columnIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "rowIndex": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "TableCellProperties": {
            "id": "TableCellProperties",
            "properties": {
                "contentAlignment": {
                    "enum": [
                        "CONTENT_ALIGNMENT_UNSPECIFIED",
                        "CONTENT_ALIGNMENT_UNSUPPORTED",
                        "TOP",
                        "MIDDLE",
                        "BOTTOM"
                    ],
                    "enumDescriptions": [
                        "An unspecified content alignment. The content alignment is inherited from\nthe parent if it exists.",
                        "An unsupported content alignment.",
                        "An alignment that aligns the content to the top of the content holder.\nCorresponds to ECMA-376 ST_TextAnchoringType 't'.",
                        "An alignment that aligns the content to the middle of the content\nholder. Corresponds to ECMA-376 ST_TextAnchoringType 'ctr'.",
                        "An alignment that aligns the content to the bottom of the content\nholder. Corresponds to ECMA-376 ST_TextAnchoringType 'b'."
                    ],
                    "type": "string"
                },
                "tableCellBackgroundFill": {
                    "$ref": "TableCellBackgroundFill"
                }
            },
            "type": "object"
        },
        "TableColumnProperties": {
            "id": "TableColumnProperties",
            "properties": {
                "columnWidth": {
                    "$ref": "Dimension"
                }
            },
            "type": "object"
        },
        "TableRange": {
            "id": "TableRange",
            "properties": {
                "columnSpan": {
                    "format": "int32",
                    "type": "integer"
                },
                "location": {
                    "$ref": "TableCellLocation"
                },
                "rowSpan": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "TableRow": {
            "id": "TableRow",
            "properties": {
                "rowHeight": {
                    "$ref": "Dimension"
                },
                "tableCells": {
                    "items": {
                        "$ref": "TableCell"
                    },
                    "type": "array"
                },
                "tableRowProperties": {
                    "$ref": "TableRowProperties"
                }
            },
            "type": "object"
        },
        "TableRowProperties": {
            "id": "TableRowProperties",
            "properties": {
                "minRowHeight": {
                    "$ref": "Dimension"
                }
            },
            "type": "object"
        },
        "TextContent": {
            "id": "TextContent",
            "properties": {
                "lists": {
                    "additionalProperties": {
                        "$ref": "List"
                    },
                    "type": "object"
                },
                "textElements": {
                    "items": {
                        "$ref": "TextElement"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TextElement": {
            "id": "TextElement",
            "properties": {
                "autoText": {
                    "$ref": "AutoText"
                },
                "endIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "paragraphMarker": {
                    "$ref": "ParagraphMarker"
                },
                "startIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "textRun": {
                    "$ref": "TextRun"
                }
            },
            "type": "object"
        },
        "TextRun": {
            "id": "TextRun",
            "properties": {
                "content": {
                    "type": "string"
                },
                "style": {
                    "$ref": "TextStyle"
                }
            },
            "type": "object"
        },
        "TextStyle": {
            "id": "TextStyle",
            "properties": {
                "backgroundColor": {
                    "$ref": "OptionalColor"
                },
                "baselineOffset": {
                    "enum": [
                        "BASELINE_OFFSET_UNSPECIFIED",
                        "NONE",
                        "SUPERSCRIPT",
                        "SUBSCRIPT"
                    ],
                    "enumDescriptions": [
                        "The text's baseline offset is inherited from the parent.",
                        "The text is not vertically offset.",
                        "The text is vertically offset upwards (superscript).",
                        "The text is vertically offset downwards (subscript)."
                    ],
                    "type": "string"
                },
                "bold": {
                    "type": "boolean"
                },
                "fontFamily": {
                    "type": "string"
                },
                "fontSize": {
                    "$ref": "Dimension"
                },
                "foregroundColor": {
                    "$ref": "OptionalColor"
                },
                "italic": {
                    "type": "boolean"
                },
                "link": {
                    "$ref": "Link"
                },
                "smallCaps": {
                    "type": "boolean"
                },
                "strikethrough": {
                    "type": "boolean"
                },
                "underline": {
                    "type": "boolean"
                },
                "weightedFontFamily": {
                    "$ref": "WeightedFontFamily"
                }
            },
            "type": "object"
        },
        "ThemeColorPair": {
            "id": "ThemeColorPair",
            "properties": {
                "color": {
                    "$ref": "RgbColor"
                },
                "type": {
                    "enum": [
                        "THEME_COLOR_TYPE_UNSPECIFIED",
                        "DARK1",
                        "LIGHT1",
                        "DARK2",
                        "LIGHT2",
                        "ACCENT1",
                        "ACCENT2",
                        "ACCENT3",
                        "ACCENT4",
                        "ACCENT5",
                        "ACCENT6",
                        "HYPERLINK",
                        "FOLLOWED_HYPERLINK",
                        "TEXT1",
                        "BACKGROUND1",
                        "TEXT2",
                        "BACKGROUND2"
                    ],
                    "enumDescriptions": [
                        "Unspecified theme color. This value should not be used.",
                        "Represents the first dark color.",
                        "Represents the first light color.",
                        "Represents the second dark color.",
                        "Represents the second light color.",
                        "Represents the first accent color.",
                        "Represents the second accent color.",
                        "Represents the third accent color.",
                        "Represents the fourth accent color.",
                        "Represents the fifth accent color.",
                        "Represents the sixth accent color.",
                        "Represents the color to use for hyperlinks.",
                        "Represents the color to use for visited hyperlinks.",
                        "Represents the first text color.",
                        "Represents the first background color.",
                        "Represents the second text color.",
                        "Represents the second background color."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Thumbnail": {
            "id": "Thumbnail",
            "properties": {
                "contentUrl": {
                    "type": "string"
                },
                "height": {
                    "format": "int32",
                    "type": "integer"
                },
                "width": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UngroupObjectsRequest": {
            "id": "UngroupObjectsRequest",
            "properties": {
                "objectIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "UnmergeTableCellsRequest": {
            "id": "UnmergeTableCellsRequest",
            "properties": {
                "objectId": {
                    "type": "string"
                },
                "tableRange": {
                    "$ref": "TableRange"
                }
            },
            "type": "object"
        },
        "UpdateImagePropertiesRequest": {
            "id": "UpdateImagePropertiesRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "imageProperties": {
                    "$ref": "ImageProperties"
                },
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateLineCategoryRequest": {
            "id": "UpdateLineCategoryRequest",
            "properties": {
                "lineCategory": {
                    "enum": [
                        "LINE_CATEGORY_UNSPECIFIED",
                        "STRAIGHT",
                        "BENT",
                        "CURVED"
                    ],
                    "enumDescriptions": [
                        "Unspecified line category.",
                        "Straight connectors, including straight connector 1.",
                        "Bent connectors, including bent connector 2 to 5.",
                        "Curved connectors, including curved connector 2 to 5."
                    ],
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateLinePropertiesRequest": {
            "id": "UpdateLinePropertiesRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "lineProperties": {
                    "$ref": "LineProperties"
                },
                "objectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdatePageElementAltTextRequest": {
            "id": "UpdatePageElementAltTextRequest",
            "properties": {
                "objectId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdatePageElementTransformRequest": {
            "id": "UpdatePageElementTransformRequest",
            "properties": {
                "applyMode": {
                    "enum": [
                        "APPLY_MODE_UNSPECIFIED",
                        "RELATIVE",
                        "ABSOLUTE"
                    ],
                    "enumDescriptions": [
                        "Unspecified mode.",
                        "Applies the new AffineTransform matrix to the existing one, and\nreplaces the existing one with the resulting concatenation.",
                        "Replaces the existing AffineTransform matrix with the new one."
                    ],
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "transform": {
                    "$ref": "AffineTransform"
                }
            },
            "type": "object"
        },
        "UpdatePageElementsZOrderRequest": {
            "id": "UpdatePageElementsZOrderRequest",
            "properties": {
                "operation": {
                    "enum": [
                        "Z_ORDER_OPERATION_UNSPECIFIED",
                        "BRING_TO_FRONT",
                        "BRING_FORWARD",
                        "SEND_BACKWARD",
                        "SEND_TO_BACK"
                    ],
                    "enumDescriptions": [
                        "Unspecified operation.",
                        "Brings the page elements to the front of the page.",
                        "Brings the page elements forward on the page by one element relative to the\nforwardmost one in the specified page elements.",
                        "Sends the page elements backward on the page by one element relative to the\nfurthest behind one in the specified page elements.",
                        "Sends the page elements to the back of the page."
                    ],
                    "type": "string"
                },
                "pageElementObjectIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "UpdatePagePropertiesRequest": {
            "id": "UpdatePagePropertiesRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "pageProperties": {
                    "$ref": "PageProperties"
                }
            },
            "type": "object"
        },
        "UpdateParagraphStyleRequest": {
            "id": "UpdateParagraphStyleRequest",
            "properties": {
                "cellLocation": {
                    "$ref": "TableCellLocation"
                },
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "style": {
                    "$ref": "ParagraphStyle"
                },
                "textRange": {
                    "$ref": "Range"
                }
            },
            "type": "object"
        },
        "UpdateShapePropertiesRequest": {
            "id": "UpdateShapePropertiesRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "shapeProperties": {
                    "$ref": "ShapeProperties"
                }
            },
            "type": "object"
        },
        "UpdateSlidesPositionRequest": {
            "id": "UpdateSlidesPositionRequest",
            "properties": {
                "insertionIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "slideObjectIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "UpdateTableBorderPropertiesRequest": {
            "id": "UpdateTableBorderPropertiesRequest",
            "properties": {
                "borderPosition": {
                    "enum": [
                        "ALL",
                        "BOTTOM",
                        "INNER",
                        "INNER_HORIZONTAL",
                        "INNER_VERTICAL",
                        "LEFT",
                        "OUTER",
                        "RIGHT",
                        "TOP"
                    ],
                    "enumDescriptions": [
                        "All borders in the range.",
                        "Borders at the bottom of the range.",
                        "Borders on the inside of the range.",
                        "Horizontal borders on the inside of the range.",
                        "Vertical borders on the inside of the range.",
                        "Borders at the left of the range.",
                        "Borders along the outside of the range.",
                        "Borders at the right of the range.",
                        "Borders at the top of the range."
                    ],
                    "type": "string"
                },
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "tableBorderProperties": {
                    "$ref": "TableBorderProperties"
                },
                "tableRange": {
                    "$ref": "TableRange"
                }
            },
            "type": "object"
        },
        "UpdateTableCellPropertiesRequest": {
            "id": "UpdateTableCellPropertiesRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "tableCellProperties": {
                    "$ref": "TableCellProperties"
                },
                "tableRange": {
                    "$ref": "TableRange"
                }
            },
            "type": "object"
        },
        "UpdateTableColumnPropertiesRequest": {
            "id": "UpdateTableColumnPropertiesRequest",
            "properties": {
                "columnIndices": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "tableColumnProperties": {
                    "$ref": "TableColumnProperties"
                }
            },
            "type": "object"
        },
        "UpdateTableRowPropertiesRequest": {
            "id": "UpdateTableRowPropertiesRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "rowIndices": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "tableRowProperties": {
                    "$ref": "TableRowProperties"
                }
            },
            "type": "object"
        },
        "UpdateTextStyleRequest": {
            "id": "UpdateTextStyleRequest",
            "properties": {
                "cellLocation": {
                    "$ref": "TableCellLocation"
                },
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "style": {
                    "$ref": "TextStyle"
                },
                "textRange": {
                    "$ref": "Range"
                }
            },
            "type": "object"
        },
        "UpdateVideoPropertiesRequest": {
            "id": "UpdateVideoPropertiesRequest",
            "properties": {
                "fields": {
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "videoProperties": {
                    "$ref": "VideoProperties"
                }
            },
            "type": "object"
        },
        "Video": {
            "id": "Video",
            "properties": {
                "id": {
                    "type": "string"
                },
                "source": {
                    "enum": [
                        "SOURCE_UNSPECIFIED",
                        "YOUTUBE",
                        "DRIVE"
                    ],
                    "enumDescriptions": [
                        "The video source is unspecified.",
                        "The video source is YouTube.",
                        "The video source is Google Drive."
                    ],
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "videoProperties": {
                    "$ref": "VideoProperties"
                }
            },
            "type": "object"
        },
        "VideoProperties": {
            "id": "VideoProperties",
            "properties": {
                "autoPlay": {
                    "type": "boolean"
                },
                "end": {
                    "format": "uint32",
                    "type": "integer"
                },
                "mute": {
                    "type": "boolean"
                },
                "outline": {
                    "$ref": "Outline"
                },
                "start": {
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WeightedFontFamily": {
            "id": "WeightedFontFamily",
            "properties": {
                "fontFamily": {
                    "type": "string"
                },
                "weight": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WordArt": {
            "id": "WordArt",
            "properties": {
                "renderedText": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WriteControl": {
            "id": "WriteControl",
            "properties": {
                "requiredRevisionId": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Google Slides API",
    "version": "v1",
    "version_module": true
}