{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/analytics": {},
                "https://www.googleapis.com/auth/analytics.readonly": {}
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://analyticsreporting.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "AnalyticsReporting",
    "discoveryVersion": "v1",
    "documentationLink": "https://developers.google.com/analytics/devguides/reporting/core/v4/",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "analyticsreporting:v4",
    "kind": "discovery#restDescription",
    "mtlsRootUrl": "https://analyticsreporting.mtls.googleapis.com/",
    "name": "analyticsreporting",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "location": "query",
            "type": "string"
        },
        "fields": {
            "location": "query",
            "type": "string"
        },
        "key": {
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "reports": {
            "methods": {
                "batchGet": {
                    "flatPath": "v4/reports:batchGet",
                    "httpMethod": "POST",
                    "id": "analyticsreporting.reports.batchGet",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v4/reports:batchGet",
                    "request": {
                        "$ref": "GetReportsRequest"
                    },
                    "response": {
                        "$ref": "GetReportsResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/analytics",
                        "https://www.googleapis.com/auth/analytics.readonly"
                    ]
                }
            }
        },
        "userActivity": {
            "methods": {
                "search": {
                    "flatPath": "v4/userActivity:search",
                    "httpMethod": "POST",
                    "id": "analyticsreporting.userActivity.search",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v4/userActivity:search",
                    "request": {
                        "$ref": "SearchUserActivityRequest"
                    },
                    "response": {
                        "$ref": "SearchUserActivityResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/analytics",
                        "https://www.googleapis.com/auth/analytics.readonly"
                    ]
                }
            }
        }
    },
    "rootUrl": "https://analyticsreporting.googleapis.com/",
    "schemas": {
        "Activity": {
            "id": "Activity",
            "properties": {
                "activityTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "activityType": {
                    "enum": [
                        "ACTIVITY_TYPE_UNSPECIFIED",
                        "PAGEVIEW",
                        "SCREENVIEW",
                        "GOAL",
                        "ECOMMERCE",
                        "EVENT"
                    ],
                    "enumDescriptions": [
                        "ActivityType will never have this value in the response. Using this type in\nthe request will result in an error.",
                        "Used when the activity resulted out of a visitor viewing a page.",
                        "Used when the activity resulted out of a visitor using an application on a\nmobile device.",
                        "Used to denote that a goal type activity.",
                        "An e-commerce transaction was performed by the visitor on the page.",
                        "Used when the activity is an event."
                    ],
                    "type": "string"
                },
                "appview": {
                    "$ref": "ScreenviewData"
                },
                "campaign": {
                    "type": "string"
                },
                "channelGrouping": {
                    "type": "string"
                },
                "customDimension": {
                    "items": {
                        "$ref": "CustomDimension"
                    },
                    "type": "array"
                },
                "ecommerce": {
                    "$ref": "EcommerceData"
                },
                "event": {
                    "$ref": "EventData"
                },
                "goals": {
                    "$ref": "GoalSetData"
                },
                "hostname": {
                    "type": "string"
                },
                "keyword": {
                    "type": "string"
                },
                "landingPagePath": {
                    "type": "string"
                },
                "medium": {
                    "type": "string"
                },
                "pageview": {
                    "$ref": "PageviewData"
                },
                "source": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Cohort": {
            "id": "Cohort",
            "properties": {
                "dateRange": {
                    "$ref": "DateRange"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "UNSPECIFIED_COHORT_TYPE",
                        "FIRST_VISIT_DATE"
                    ],
                    "enumDescriptions": [
                        "If unspecified it's treated as `FIRST_VISIT_DATE`.",
                        "Cohorts that are selected based on first visit date."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CohortGroup": {
            "id": "CohortGroup",
            "properties": {
                "cohorts": {
                    "items": {
                        "$ref": "Cohort"
                    },
                    "type": "array"
                },
                "lifetimeValue": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ColumnHeader": {
            "id": "ColumnHeader",
            "properties": {
                "dimensions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "metricHeader": {
                    "$ref": "MetricHeader"
                }
            },
            "type": "object"
        },
        "CustomDimension": {
            "id": "CustomDimension",
            "properties": {
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DateRange": {
            "id": "DateRange",
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DateRangeValues": {
            "id": "DateRangeValues",
            "properties": {
                "pivotValueRegions": {
                    "items": {
                        "$ref": "PivotValueRegion"
                    },
                    "type": "array"
                },
                "values": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Dimension": {
            "id": "Dimension",
            "properties": {
                "histogramBuckets": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DimensionFilter": {
            "id": "DimensionFilter",
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "dimensionName": {
                    "type": "string"
                },
                "expressions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "not": {
                    "type": "boolean"
                },
                "operator": {
                    "enum": [
                        "OPERATOR_UNSPECIFIED",
                        "REGEXP",
                        "BEGINS_WITH",
                        "ENDS_WITH",
                        "PARTIAL",
                        "EXACT",
                        "NUMERIC_EQUAL",
                        "NUMERIC_GREATER_THAN",
                        "NUMERIC_LESS_THAN",
                        "IN_LIST"
                    ],
                    "enumDescriptions": [
                        "If the match type is unspecified, it is treated as a `REGEXP`.",
                        "The match expression is treated as a regular expression. All match types\nare not treated as regular expressions.",
                        "Matches the value which begin with the match expression provided.",
                        "Matches the values which end with the match expression provided.",
                        "Substring match.",
                        "The value should match the match expression entirely.",
                        "Integer comparison filters.\ncase sensitivity is ignored for these and the expression\nis assumed to be a string representing an integer.\nFailure conditions:\n\n- If expression is not a valid int64, the client should expect\n  an error.\n- Input dimensions that are not valid int64 values will never match the\n  filter.",
                        "Checks if the dimension is numerically greater than the match\nexpression. Read the description for `NUMERIC_EQUALS` for restrictions.",
                        "Checks if the dimension is numerically less than the match expression.\nRead the description for `NUMERIC_EQUALS` for restrictions.",
                        "This option is used to specify a dimension filter whose expression can\ntake any value from a selected list of values. This helps avoiding\nevaluating multiple exact match dimension filters which are OR'ed for\nevery single response row. For example:\n\n    expressions: [\"A\", \"B\", \"C\"]\n\nAny response row whose dimension has it is value as A, B or C, matches\nthis DimensionFilter."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DimensionFilterClause": {
            "id": "DimensionFilterClause",
            "properties": {
                "filters": {
                    "items": {
                        "$ref": "DimensionFilter"
                    },
                    "type": "array"
                },
                "operator": {
                    "enum": [
                        "OPERATOR_UNSPECIFIED",
                        "OR",
                        "AND"
                    ],
                    "enumDescriptions": [
                        "Unspecified operator. It is treated as an `OR`.",
                        "The logical `OR` operator.",
                        "The logical `AND` operator."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DynamicSegment": {
            "id": "DynamicSegment",
            "properties": {
                "name": {
                    "type": "string"
                },
                "sessionSegment": {
                    "$ref": "SegmentDefinition"
                },
                "userSegment": {
                    "$ref": "SegmentDefinition"
                }
            },
            "type": "object"
        },
        "EcommerceData": {
            "id": "EcommerceData",
            "properties": {
                "actionType": {
                    "enum": [
                        "UNKNOWN",
                        "CLICK",
                        "DETAILS_VIEW",
                        "ADD_TO_CART",
                        "REMOVE_FROM_CART",
                        "CHECKOUT",
                        "PAYMENT",
                        "REFUND",
                        "CHECKOUT_OPTION"
                    ],
                    "enumDescriptions": [
                        "Action type is not known.",
                        "Click through of product lists.",
                        "Product detail views.",
                        "Add product(s) to cart.",
                        "Remove product(s) from cart.",
                        "Check out.",
                        "Completed purchase.",
                        "Refund of purchase.",
                        "Checkout options."
                    ],
                    "type": "string"
                },
                "ecommerceType": {
                    "enum": [
                        "ECOMMERCE_TYPE_UNSPECIFIED",
                        "CLASSIC",
                        "ENHANCED"
                    ],
                    "enumDescriptions": [
                        "Used when the e-commerce activity type is unspecified.",
                        "Used when activity has classic (non-enhanced) e-commerce information.",
                        "Used when activity has enhanced e-commerce information."
                    ],
                    "type": "string"
                },
                "products": {
                    "items": {
                        "$ref": "ProductData"
                    },
                    "type": "array"
                },
                "transaction": {
                    "$ref": "TransactionData"
                }
            },
            "type": "object"
        },
        "EventData": {
            "id": "EventData",
            "properties": {
                "eventAction": {
                    "type": "string"
                },
                "eventCategory": {
                    "type": "string"
                },
                "eventCount": {
                    "format": "int64",
                    "type": "string"
                },
                "eventLabel": {
                    "type": "string"
                },
                "eventValue": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetReportsRequest": {
            "id": "GetReportsRequest",
            "properties": {
                "reportRequests": {
                    "items": {
                        "$ref": "ReportRequest"
                    },
                    "type": "array"
                },
                "useResourceQuotas": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GetReportsResponse": {
            "id": "GetReportsResponse",
            "properties": {
                "queryCost": {
                    "format": "int32",
                    "type": "integer"
                },
                "reports": {
                    "items": {
                        "$ref": "Report"
                    },
                    "type": "array"
                },
                "resourceQuotasRemaining": {
                    "$ref": "ResourceQuotasRemaining"
                }
            },
            "type": "object"
        },
        "GoalData": {
            "id": "GoalData",
            "properties": {
                "goalCompletionLocation": {
                    "type": "string"
                },
                "goalCompletions": {
                    "format": "int64",
                    "type": "string"
                },
                "goalIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "goalName": {
                    "type": "string"
                },
                "goalPreviousStep1": {
                    "type": "string"
                },
                "goalPreviousStep2": {
                    "type": "string"
                },
                "goalPreviousStep3": {
                    "type": "string"
                },
                "goalValue": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "GoalSetData": {
            "id": "GoalSetData",
            "properties": {
                "goals": {
                    "items": {
                        "$ref": "GoalData"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Metric": {
            "id": "Metric",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                },
                "formattingType": {
                    "enum": [
                        "METRIC_TYPE_UNSPECIFIED",
                        "INTEGER",
                        "FLOAT",
                        "CURRENCY",
                        "PERCENT",
                        "TIME"
                    ],
                    "enumDescriptions": [
                        "Metric type is unspecified.",
                        "Integer metric.",
                        "Float metric.",
                        "Currency metric.",
                        "Percentage metric.",
                        "Time metric in `HH:MM:SS` format."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MetricFilter": {
            "id": "MetricFilter",
            "properties": {
                "comparisonValue": {
                    "type": "string"
                },
                "metricName": {
                    "type": "string"
                },
                "not": {
                    "type": "boolean"
                },
                "operator": {
                    "enum": [
                        "OPERATOR_UNSPECIFIED",
                        "EQUAL",
                        "LESS_THAN",
                        "GREATER_THAN",
                        "IS_MISSING"
                    ],
                    "enumDescriptions": [
                        "If the operator is not specified, it is treated as `EQUAL`.",
                        "Should the value of the metric be exactly equal to the comparison value.",
                        "Should the value of the metric be less than to the comparison value.",
                        "Should the value of the metric be greater than to the comparison value.",
                        "Validates if the metric is missing.\nDoesn't take comparisonValue into account."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MetricFilterClause": {
            "id": "MetricFilterClause",
            "properties": {
                "filters": {
                    "items": {
                        "$ref": "MetricFilter"
                    },
                    "type": "array"
                },
                "operator": {
                    "enum": [
                        "OPERATOR_UNSPECIFIED",
                        "OR",
                        "AND"
                    ],
                    "enumDescriptions": [
                        "Unspecified operator. It is treated as an `OR`.",
                        "The logical `OR` operator.",
                        "The logical `AND` operator."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MetricHeader": {
            "id": "MetricHeader",
            "properties": {
                "metricHeaderEntries": {
                    "items": {
                        "$ref": "MetricHeaderEntry"
                    },
                    "type": "array"
                },
                "pivotHeaders": {
                    "items": {
                        "$ref": "PivotHeader"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MetricHeaderEntry": {
            "id": "MetricHeaderEntry",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "METRIC_TYPE_UNSPECIFIED",
                        "INTEGER",
                        "FLOAT",
                        "CURRENCY",
                        "PERCENT",
                        "TIME"
                    ],
                    "enumDescriptions": [
                        "Metric type is unspecified.",
                        "Integer metric.",
                        "Float metric.",
                        "Currency metric.",
                        "Percentage metric.",
                        "Time metric in `HH:MM:SS` format."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OrFiltersForSegment": {
            "id": "OrFiltersForSegment",
            "properties": {
                "segmentFilterClauses": {
                    "items": {
                        "$ref": "SegmentFilterClause"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "OrderBy": {
            "id": "OrderBy",
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "orderType": {
                    "enum": [
                        "ORDER_TYPE_UNSPECIFIED",
                        "VALUE",
                        "DELTA",
                        "SMART",
                        "HISTOGRAM_BUCKET",
                        "DIMENSION_AS_INTEGER"
                    ],
                    "enumDescriptions": [
                        "Unspecified order type will be treated as sort based on value.",
                        "The sort order is based on the value of the chosen column; looks only at\nthe first date range.",
                        "The sort order is based on the difference of the values of the chosen\ncolumn between the first two date ranges.  Usable only if there are\nexactly two date ranges.",
                        "The sort order is based on weighted value of the chosen column.  If\ncolumn has n/d format, then weighted value of this ratio will\nbe `(n + totals.n)/(d + totals.d)` Usable only for metrics that\nrepresent ratios.",
                        "Histogram order type is applicable only to dimension columns with\nnon-empty histogram-buckets.",
                        "If the dimensions are fixed length numbers, ordinary sort would just\nwork fine. `DIMENSION_AS_INTEGER` can be used if the dimensions are\nvariable length numbers."
                    ],
                    "type": "string"
                },
                "sortOrder": {
                    "enum": [
                        "SORT_ORDER_UNSPECIFIED",
                        "ASCENDING",
                        "DESCENDING"
                    ],
                    "enumDescriptions": [
                        "If the sort order is unspecified, the default is ascending.",
                        "Ascending sort. The field will be sorted in an ascending manner.",
                        "Descending sort. The field will be sorted in a descending manner."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PageviewData": {
            "id": "PageviewData",
            "properties": {
                "pagePath": {
                    "type": "string"
                },
                "pageTitle": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Pivot": {
            "id": "Pivot",
            "properties": {
                "dimensionFilterClauses": {
                    "items": {
                        "$ref": "DimensionFilterClause"
                    },
                    "type": "array"
                },
                "dimensions": {
                    "items": {
                        "$ref": "Dimension"
                    },
                    "type": "array"
                },
                "maxGroupCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "metrics": {
                    "items": {
                        "$ref": "Metric"
                    },
                    "type": "array"
                },
                "startGroup": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PivotHeader": {
            "id": "PivotHeader",
            "properties": {
                "pivotHeaderEntries": {
                    "items": {
                        "$ref": "PivotHeaderEntry"
                    },
                    "type": "array"
                },
                "totalPivotGroupsCount": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PivotHeaderEntry": {
            "id": "PivotHeaderEntry",
            "properties": {
                "dimensionNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "dimensionValues": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "metric": {
                    "$ref": "MetricHeaderEntry"
                }
            },
            "type": "object"
        },
        "PivotValueRegion": {
            "id": "PivotValueRegion",
            "properties": {
                "values": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProductData": {
            "id": "ProductData",
            "properties": {
                "itemRevenue": {
                    "format": "double",
                    "type": "number"
                },
                "productName": {
                    "type": "string"
                },
                "productQuantity": {
                    "format": "int64",
                    "type": "string"
                },
                "productSku": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Report": {
            "id": "Report",
            "properties": {
                "columnHeader": {
                    "$ref": "ColumnHeader"
                },
                "data": {
                    "$ref": "ReportData"
                },
                "nextPageToken": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReportData": {
            "id": "ReportData",
            "properties": {
                "dataLastRefreshed": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "isDataGolden": {
                    "type": "boolean"
                },
                "maximums": {
                    "items": {
                        "$ref": "DateRangeValues"
                    },
                    "type": "array"
                },
                "minimums": {
                    "items": {
                        "$ref": "DateRangeValues"
                    },
                    "type": "array"
                },
                "rowCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "rows": {
                    "items": {
                        "$ref": "ReportRow"
                    },
                    "type": "array"
                },
                "samplesReadCounts": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "samplingSpaceSizes": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "totals": {
                    "items": {
                        "$ref": "DateRangeValues"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ReportRequest": {
            "id": "ReportRequest",
            "properties": {
                "cohortGroup": {
                    "$ref": "CohortGroup"
                },
                "dateRanges": {
                    "items": {
                        "$ref": "DateRange"
                    },
                    "type": "array"
                },
                "dimensionFilterClauses": {
                    "items": {
                        "$ref": "DimensionFilterClause"
                    },
                    "type": "array"
                },
                "dimensions": {
                    "items": {
                        "$ref": "Dimension"
                    },
                    "type": "array"
                },
                "filtersExpression": {
                    "type": "string"
                },
                "hideTotals": {
                    "type": "boolean"
                },
                "hideValueRanges": {
                    "type": "boolean"
                },
                "includeEmptyRows": {
                    "type": "boolean"
                },
                "metricFilterClauses": {
                    "items": {
                        "$ref": "MetricFilterClause"
                    },
                    "type": "array"
                },
                "metrics": {
                    "items": {
                        "$ref": "Metric"
                    },
                    "type": "array"
                },
                "orderBys": {
                    "items": {
                        "$ref": "OrderBy"
                    },
                    "type": "array"
                },
                "pageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "pageToken": {
                    "type": "string"
                },
                "pivots": {
                    "items": {
                        "$ref": "Pivot"
                    },
                    "type": "array"
                },
                "samplingLevel": {
                    "enum": [
                        "SAMPLING_UNSPECIFIED",
                        "DEFAULT",
                        "SMALL",
                        "LARGE"
                    ],
                    "enumDescriptions": [
                        "If the `samplingLevel` field is unspecified the `DEFAULT` sampling level\nis used.",
                        "Returns response with a sample size that balances speed and\naccuracy.",
                        "It returns a fast response with a smaller sampling size.",
                        "Returns a more accurate response using a large sampling size. But this\nmay result in response being slower."
                    ],
                    "type": "string"
                },
                "segments": {
                    "items": {
                        "$ref": "Segment"
                    },
                    "type": "array"
                },
                "viewId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReportRow": {
            "id": "ReportRow",
            "properties": {
                "dimensions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "metrics": {
                    "items": {
                        "$ref": "DateRangeValues"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ResourceQuotasRemaining": {
            "id": "ResourceQuotasRemaining",
            "properties": {
                "dailyQuotaTokensRemaining": {
                    "format": "int32",
                    "type": "integer"
                },
                "hourlyQuotaTokensRemaining": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ScreenviewData": {
            "id": "ScreenviewData",
            "properties": {
                "appName": {
                    "type": "string"
                },
                "mobileDeviceBranding": {
                    "type": "string"
                },
                "mobileDeviceModel": {
                    "type": "string"
                },
                "screenName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchUserActivityRequest": {
            "id": "SearchUserActivityRequest",
            "properties": {
                "activityTypes": {
                    "enumDescriptions": [
                        "ActivityType will never have this value in the response. Using this type in\nthe request will result in an error.",
                        "Used when the activity resulted out of a visitor viewing a page.",
                        "Used when the activity resulted out of a visitor using an application on a\nmobile device.",
                        "Used to denote that a goal type activity.",
                        "An e-commerce transaction was performed by the visitor on the page.",
                        "Used when the activity is an event."
                    ],
                    "items": {
                        "enum": [
                            "ACTIVITY_TYPE_UNSPECIFIED",
                            "PAGEVIEW",
                            "SCREENVIEW",
                            "GOAL",
                            "ECOMMERCE",
                            "EVENT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "dateRange": {
                    "$ref": "DateRange"
                },
                "pageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "pageToken": {
                    "type": "string"
                },
                "user": {
                    "$ref": "User"
                },
                "viewId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchUserActivityResponse": {
            "id": "SearchUserActivityResponse",
            "properties": {
                "nextPageToken": {
                    "type": "string"
                },
                "sampleRate": {
                    "format": "double",
                    "type": "number"
                },
                "sessions": {
                    "items": {
                        "$ref": "UserActivitySession"
                    },
                    "type": "array"
                },
                "totalRows": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Segment": {
            "id": "Segment",
            "properties": {
                "dynamicSegment": {
                    "$ref": "DynamicSegment"
                },
                "segmentId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SegmentDefinition": {
            "id": "SegmentDefinition",
            "properties": {
                "segmentFilters": {
                    "items": {
                        "$ref": "SegmentFilter"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SegmentDimensionFilter": {
            "id": "SegmentDimensionFilter",
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "dimensionName": {
                    "type": "string"
                },
                "expressions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "maxComparisonValue": {
                    "type": "string"
                },
                "minComparisonValue": {
                    "type": "string"
                },
                "operator": {
                    "enum": [
                        "OPERATOR_UNSPECIFIED",
                        "REGEXP",
                        "BEGINS_WITH",
                        "ENDS_WITH",
                        "PARTIAL",
                        "EXACT",
                        "IN_LIST",
                        "NUMERIC_LESS_THAN",
                        "NUMERIC_GREATER_THAN",
                        "NUMERIC_BETWEEN"
                    ],
                    "enumDescriptions": [
                        "If the match type is unspecified, it is treated as a REGEXP.",
                        "The match expression is treated as a regular expression. All other match\ntypes are not treated as regular expressions.",
                        "Matches the values which begin with the match expression provided.",
                        "Matches the values which end with the match expression provided.",
                        "Substring match.",
                        "The value should match the match expression entirely.",
                        "This option is used to specify a dimension filter whose expression can\ntake any value from a selected list of values. This helps avoiding\nevaluating multiple exact match dimension filters which are OR'ed for\nevery single response row. For example:\n\n    expressions: [\"A\", \"B\", \"C\"]\n\nAny response row whose dimension has it is value as A, B or C, matches\nthis DimensionFilter.",
                        "Integer comparison filters.\ncase sensitivity is ignored for these and the expression\nis assumed to be a string representing an integer.\nFailure conditions:\n\n- if expression is not a valid int64, the client should expect\n  an error.\n- input dimensions that are not valid int64 values will never match the\n  filter.\n\nChecks if the dimension is numerically less than the match expression.",
                        "Checks if the dimension is numerically greater than the match\nexpression.",
                        "Checks if the dimension is numerically between the minimum and maximum\nof the match expression, boundaries excluded."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SegmentFilter": {
            "id": "SegmentFilter",
            "properties": {
                "not": {
                    "type": "boolean"
                },
                "sequenceSegment": {
                    "$ref": "SequenceSegment"
                },
                "simpleSegment": {
                    "$ref": "SimpleSegment"
                }
            },
            "type": "object"
        },
        "SegmentFilterClause": {
            "id": "SegmentFilterClause",
            "properties": {
                "dimensionFilter": {
                    "$ref": "SegmentDimensionFilter"
                },
                "metricFilter": {
                    "$ref": "SegmentMetricFilter"
                },
                "not": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SegmentMetricFilter": {
            "id": "SegmentMetricFilter",
            "properties": {
                "comparisonValue": {
                    "type": "string"
                },
                "maxComparisonValue": {
                    "type": "string"
                },
                "metricName": {
                    "type": "string"
                },
                "operator": {
                    "enum": [
                        "UNSPECIFIED_OPERATOR",
                        "LESS_THAN",
                        "GREATER_THAN",
                        "EQUAL",
                        "BETWEEN"
                    ],
                    "enumDescriptions": [
                        "Unspecified operator is treated as `LESS_THAN` operator.",
                        "Checks if the metric value is less than comparison value.",
                        "Checks if the metric value is greater than comparison value.",
                        "Equals operator.",
                        "For between operator, both the minimum and maximum are exclusive.\nWe will use `LT` and `GT` for comparison."
                    ],
                    "type": "string"
                },
                "scope": {
                    "enum": [
                        "UNSPECIFIED_SCOPE",
                        "PRODUCT",
                        "HIT",
                        "SESSION",
                        "USER"
                    ],
                    "enumDescriptions": [
                        "If the scope is unspecified, it defaults to the condition scope,\n`USER` or `SESSION` depending on if the segment is trying to choose\nusers or sessions.",
                        "Product scope.",
                        "Hit scope.",
                        "Session scope.",
                        "User scope."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SegmentSequenceStep": {
            "id": "SegmentSequenceStep",
            "properties": {
                "matchType": {
                    "enum": [
                        "UNSPECIFIED_MATCH_TYPE",
                        "PRECEDES",
                        "IMMEDIATELY_PRECEDES"
                    ],
                    "enumDescriptions": [
                        "Unspecified match type is treated as precedes.",
                        "Operator indicates that the previous step precedes the next step.",
                        "Operator indicates that the previous step immediately precedes the next\nstep."
                    ],
                    "type": "string"
                },
                "orFiltersForSegment": {
                    "items": {
                        "$ref": "OrFiltersForSegment"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SequenceSegment": {
            "id": "SequenceSegment",
            "properties": {
                "firstStepShouldMatchFirstHit": {
                    "type": "boolean"
                },
                "segmentSequenceSteps": {
                    "items": {
                        "$ref": "SegmentSequenceStep"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SimpleSegment": {
            "id": "SimpleSegment",
            "properties": {
                "orFiltersForSegment": {
                    "items": {
                        "$ref": "OrFiltersForSegment"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TransactionData": {
            "id": "TransactionData",
            "properties": {
                "transactionId": {
                    "type": "string"
                },
                "transactionRevenue": {
                    "format": "double",
                    "type": "number"
                },
                "transactionShipping": {
                    "format": "double",
                    "type": "number"
                },
                "transactionTax": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "User": {
            "id": "User",
            "properties": {
                "type": {
                    "enum": [
                        "USER_ID_TYPE_UNSPECIFIED",
                        "USER_ID",
                        "CLIENT_ID"
                    ],
                    "enumDescriptions": [
                        "When the User Id Type is not specified, the default type used will be\nCLIENT_ID.",
                        "A single user, like a signed-in user account, that may interact with\ncontent across one or more devices and / or browser instances.",
                        "Analytics assigned client_id."
                    ],
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserActivitySession": {
            "id": "UserActivitySession",
            "properties": {
                "activities": {
                    "items": {
                        "$ref": "Activity"
                    },
                    "type": "array"
                },
                "dataSource": {
                    "type": "string"
                },
                "deviceCategory": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "sessionDate": {
                    "type": "string"
                },
                "sessionId": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Analytics Reporting API",
    "version": "v4",
    "version_module": true
}